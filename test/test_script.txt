Based on the provided document, the key entities and relationships that can be extracted are:

Entities:
- Document
- County Recorder
- Los Angeles County Recorder's Office
- Stewart Title
- Law Offices of Timothy Murakami
- Hubbard Gardens (Condominium Project)
- Tract No. 51947
- Tract No. 51498
- Covenants, Conditions, and Restrictions (CCR)
- Easements
- Units
- Common Area(s)
- Exclusive Use Common Area(s)
- Property
- Owner
- Association
- Insurance
- Use Restrictions
- Nuisances
- Debris, Trash, and Refuse
- Signs
- Parking / Vehicle Code Regulations
- Animal Regulations
- Membership
- Voting Rights
- Duties and Powers of the Association
- Board of Directors
- Budget
- Financial Statements
- Governing Documents
- Penalties for Non-Compliance
- Right of Entry
- Unsegregated Real Property Taxes
- Covenant for Assessment
- Assessments
- Architectural Control
- Committee
- Review Standards
- Appeal
- Architectural Committee Hearings

Relationships:
- Document is recorded by County Recorder
- Document is recorded in Los Angeles County Recorder's Office
- Document is recorded under Document No.
- Document is an exact copy
- Document is requested to be recorded
- Document is prepared by County Recorder
- Document is mailed to a specific recipient
- Document is related to a Law Office (represented by Timothy Murakami)
- Document is related to a Title company (represented by Stewart Title)
- Document contains Covenants, Conditions, and Restrictions (CCR)
- Document contains Easements
- Hubbard Gardens is a Condominium Project
- Tract No. 51947 is part of Hubbard Gardens
- Tract No. 51498 is part of Hubbard Gardens
- Units are part of the Property
- Property is owned by Owner
- Property is maintained by Owner
- Property is maintained by Association
- Association provides insurance for the Property
- Owner is required to have insurance
- Property has General Use Restrictions
- Property has restrictions related to Nuisances, Debris, Trash, and Refuse, Signs, Use/Alteration Affecting Insurance Rates, Parking / Vehicle Code Regulations, and Animal Regulations
- Association has Members
- Membership has different classes
- Members have Voting Rights
- Membership can be transferred
- Association has Duties and Powers
- Board of Directors has specific powers and limitations
- Association prepares Budget and Financial Statements
- Association enforces Penalties for Non-Compliance
- Association has the Right of Entry
- Property is subject to Unsegregated Real Property Taxes
- Association collects Assessments
- Assessments have specific due dates and rates
- Association can take actions for nonpayment of Assessments
- Nonuse and Abandonment of the Property is addressed
- Association can waive exemptions
- Association can capitalize
- Architectural Control is implemented
- Committee approves architectural requests
- Committee follows certain procedures
- Committee reviews requests based on specific standards
- Appeals can be made regarding the Committee's decisions
- Architectural Committee conducts hearings

Based on the above entities and relationships, the existing graph can be re-written as follows:

```
// Entities
CREATE (document:Document {name: "Declaration of Covenants, Conditions, Restrictions and Reservation of Easements for Hubbard Gardens - Tract No. 51947 and a portion of Tract No. 51498"});
CREATE (countyRecorder:CountyRecorder);
CREATE (losAngelesCountyRecorderOffice:LosAngelesCountyRecorderOffice);
CREATE (stewartTitle:TitleCompany {name: "Stewart Title"});
CREATE (lawOffice:LawOffice {name: "Law Offices of Timothy Murakami"});
CREATE (hubbardGardens:CondominiumProject {name: "Hubbard Gardens"});
CREATE (tract51947:Tract {name: "Tract No. 51947"});
CREATE (tract51498:Tract {name: "Tract No. 51498"});
CREATE (association:Association);
CREATE (owner:Owner);
CREATE (property:Property);
CREATE (insurance:Insurance);
CREATE (membership:Membership);
CREATE (boardOfDirectors:BoardOfDirectors);
CREATE (budget:Budget);
CREATE (architecturalControl:ArchitecturalControl);
CREATE (committee:Committee);

// Relationships
CREATE (document)-[:RECORDED_BY]->(countyRecorder);
CREATE (document)-[:RECORDED_IN]->(losAngelesCountyRecorderOffice);
CREATE (document)-[:RELATED_TO]->(stewartTitle);
CREATE (document)-[:RELATED_TO]->(lawOffice);
CREATE (document)-[:CONTAINS]->(hubbardGardens);
CREATE (hubbardGardens)-[:PART_OF]->(tract51947);
CREATE (hubbardGardens)-[:PART_OF]->(tract51498);
CREATE (property)-[:PART_OF]->(hubbardGardens);
CREATE (property)-[:OWNED_BY]->(owner);
CREATE (property)-[:MAINTAINED_BY]->(owner);
CREATE (property)-[:MAINTAINED_BY]->(association);
CREATE (association)-[:PROVIDES_INSURANCE_FOR]->(property);
CREATE (owner)-[:REQUIRED_TO_HAVE]->(insurance);
CREATE (property)-[:HAS_USE_RESTRICTIONS]->(useRestrictions:UseRestrictions);
CREATE (useRestrictions)-[:RESTRICTS]->(nuisances:Nuisances);
CREATE (useRestrictions)-[:RESTRICTS]->(debrisTrashRefuse:DebrisTrashRefuse);
CREATE (useRestrictions)-[:RESTRICTS]->(signs:Signs);
CREATE (useRestrictions)-[:RESTRICTS]->(alterationAffectingInsuranceRates:AlterationAffectingInsuranceRates);
CREATE (useRestrictions)-[:RESTRICTS]->(parkingRegulations:ParkingRegulations);
CREATE (useRestrictions)-[:RESTRICTS]->(animalRegulations:AnimalRegulations);
CREATE (association)-[:HAS_MEMBERS]->(membership);
CREATE (membership)-[:HAS_CLASSES]->(membershipClasses:MembershipClasses);
CREATE (membership)-[:HAS_VOTING_RIGHTS]->(votingRights:VotingRights);
CREATE (membership)-[:CAN_TRANSFER]->(transferMembership:TransferMembership);
CREATE (association)-[:HAS_DUTIES_AND_POWERS]->(dutiesAndPowers:DutiesAndPowers);
CREATE (dutiesAndPowers)-[:HAS_LIMITATIONS]->(boardOfDirectors)-[:HAS_POWERS]->(boardPowers:BoardPowers);
CREATE (association)-[:PREPARES]->(budget);
CREATE (association)-[:ENFORCES_PENALTIES]->(penalties:Penalties);
CREATE (association)-[:HAS_RIGHT_OF_ENTRY]->(rightOfEntry:RightOfEntry);
CREATE (property)-[:SUBJECT_TO]->(unsegregatedPropertyTaxes:UnsegregatedPropertyTaxes);
CREATE (association)-[:COLLECTS_ASSESSMENTS]->(assessments:Assessments);
CREATE (assessments)-[:HAS_DUE_DATES_AND_RATES]->(dueDatesAndRates:DueDatesAndRates);
CREATE (assessments)-[:CAN_TAKE_ACTIONS_FOR_NONPAYMENT]->(actionsForNonpayment:ActionsForNonpayment);
CREATE (property)-[:CAN_BE_NONUSE_AND_ABANDONMENT]->(nonuseAbandonment:NonuseAbandonment);
CREATE (association)-[:CAN_WAIVE_EXEMPTIONS]->(waiveExemptions:WaiveExemptions);
CREATE (association)-[:CAN_CAPITALIZE]->(capitalize:Capitalize);
CREATE (property)-[:HAS_ARCHITECTURAL_CONTROL]->(architecturalControl);
CREATE (architecturalControl)-[:APPROVES]->(committee);
CREATE (committee)-[:FOLLOWS_PROCEDURES]->(procedures:Procedures);
CREATE (committee)-[:REVIEWS_BASED_ON]->(reviewStandards:ReviewStandards);
CREATE (committee)-[:CAN_APPEAL]->(appeals:Appeals);
CREATE (committee)-[:CONDUCTS_HEARINGS]->(architecturalCommitteeHearings:ArchitecturalCommitteeHearings);
```

Note: The above Cypher statements are not complete and may require further refinement based on the specific structure and properties of existing nodes and relationships in the graph.
Based on the new document, the following additional entities and relationships can be extracted:

Entities:
- Mortgagee
- Lien
- Foreclosure
- Right of First Refusal
- Inspection of Association Books and Records
- Condemnation Proceeding
- Award
- Covenant against Partition
- Condominium Component Interest
- Restoration of the Property
- Sale of Property
- Notice to Owners and Listed Mortgagees
- Easements for Owners
- Encroachment
- Utility Easements
- Additional Property
- Annexation Document
- Declarant

Relationships:
- Mortgagee has Protection
- Lien is subordinate to Foreclosure
- Mortgagees are not required to cure certain Breaches
- Breach of Declaration affects certain Effects
- Right of First Refusal is exempted
- Certain Changes are restricted
- Mortgagees have the right to inspect Association Books and Records
- Condemnation Proceeding is represented by the Board
- Award is distributed
- Partition is prohibited by Covenant
- Sale of Property and Right to Partition are related to Restoration of the Property
- Notice is provided to Owners and Listed Mortgagees
- Easements are created for Owners
- Encroachment is addressed
- Utility Easements are granted by the Association
- Additional Property can be annexed
- Annexation Document contains specific contents
- Declarant is not obligated to continue development

The re-written graph can be updated as follows:

```
// Entities (additional)
CREATE (mortgagee:Mortgagee);
CREATE (lien:Lien);
CREATE (foreclosure:Foreclosure);
CREATE (rightOfFirstRefusal:RightOfFirstRefusal);
CREATE (inspection:Inspection {name: "Inspection of Association Books and Records"});
CREATE (condemnationProceeding:CondemnationProceeding);
CREATE (award:Award);
CREATE (covenant:Covenant {name: "Covenant against Partition"});
CREATE (condominiumComponentInterest:CondominiumComponentInterest);
CREATE (restoration:Restoration {name: "Restoration of the Property"});
CREATE (sale:Sale {name: "Sale of Property"});
CREATE (notice:Notice {name: "Notice to Owners and Listed Mortgagees"});
CREATE (easements:Easements);
CREATE (encroachment:Encroachment);
CREATE (utilityEasements:UtilityEasements);
CREATE (additionalProperty:AdditionalProperty);
CREATE (annexationDocument:AnnexationDocument);
CREATE (declarant:Declarant);

// Relationships (additional)
CREATE (mortgagee)-[:HAS_PROTECTION]->(mortgageeProtection:MortgageeProtection);
CREATE (lien)-[:SUBORDINATE_TO]->(foreclosure);
CREATE (mortgagees)-[:NOT_REQUIRED_TO_CURE]->(breaches:Breaches);
CREATE (breaches)-[:AFFECTS]->(declarationEffects:DeclarationEffects);
CREATE (rightOfFirstRefusal)-[:EXEMPTED]->(exemption:Exemption);
CREATE (restrictionChanges:RestrictionChanges)-[:RESTRICTED]->(changes:Changes);
CREATE (mortgagees)-[:HAS_RIGHT_TO_INSPECT]->(inspection);
CREATE (condemnationProceeding)-[:REPRESENTED_BY]->(board);
CREATE (award)-[:DISTRIBUTED]->(distribution:Distribution);
CREATE (covenant)-[:PROHIBITS]->(partition:Partition);
CREATE (sale)-[:RELATED_TO]->(restoration);
CREATE (restoration)-[:RELATED_TO]->(property);
CREATE (sale)-[:RELATED_TO]->(partition:Partition);
CREATE (notice)-[:PROVIDED_TO]->(owners:Owners);
CREATE (notice)-[:PROVIDED_TO]->(mortgagees:Mortgagees);
CREATE (easements)-[:CREATED_FOR]->(owners);
CREATE (encroachment)-[:ADDRESSED]->(property);
CREATE (utilityEasements)-[:GRANTED_BY]->(association);
CREATE (additionalProperty)-[:CAN_BE_ANNEXED]->(annexationDocument);
CREATE (annexationDocument)-[:CONTAINS]->(contents:Contents);
CREATE (declarant)-[:NOT_OBLIGATED_TO_CONTINUE]->(development:Development);
```

Note: The above Cypher statements continue from the previous statements and only include the additional entities and relationships from the new document.
// Entities (additional)
CREATE (additionalProperty:AdditionalProperty);
CREATE (annexationDocument:AnnexationDocument);
CREATE (declarant:Declarant);

// Relationships (additional)
CREATE (additionalProperty)-[:CAN_BE_ANNEXED]->(annexationDocument);
CREATE (annexationDocument)-[:CONTAINS]->(contents:Contents);
CREATE (declarant)-[:NOT_OBLIGATED_TO_CONTINUE]->(development:Development);

// Entities (existing)
CREATE (mortgagee:Mortgagee);
CREATE (lien:Lien);
CREATE (foreclosure:Foreclosure);
CREATE (rightOfFirstRefusal:RightOfFirstRefusal);
CREATE (inspection:Inspection {name: "Inspection of Association Books and Records"});
CREATE (condemnationProceeding:CondemnationProceeding);
CREATE (award:Award);
CREATE (covenant:Covenant {name: "Covenant against Partition"});
CREATE (condominiumComponentInterest:CondominiumComponentInterest);
CREATE (restoration:Restoration {name: "Restoration of the Property"});
CREATE (sale:Sale {name: "Sale of Property"});
CREATE (notice:Notice {name: "Notice to Owners and Listed Mortgagees"});
CREATE (easements:Easements);
CREATE (encroachment:Encroachment);
CREATE (utilityEasements:UtilityEasements);

// Relationships (existing)
CREATE (mortgagee)-[:HAS_PROTECTION]->(mortgageeProtection:MortgageeProtection);
CREATE (lien)-[:SUBORDINATE_TO]->(foreclosure);
CREATE (mortgagees)-[:NOT_REQUIRED_TO_CURE]->(breaches:Breaches);
CREATE (breaches)-[:AFFECTS]->(declarationEffects:DeclarationEffects);
CREATE (rightOfFirstRefusal)-[:EXEMPTED]->(exemption:Exemption);
CREATE (restrictionChanges:RestrictionChanges)-[:RESTRICTED]->(changes:Changes);
CREATE (mortgagees)-[:HAS_RIGHT_TO_INSPECT]->(inspection);
CREATE (condemnationProceeding)-[:REPRESENTED_BY]->(board);
CREATE (award)-[:DISTRIBUTED]->(distribution:Distribution);
CREATE (covenant)-[:PROHIBITS]->(partition:Partition);
CREATE (sale)-[:RELATED_TO]->(restoration);
CREATE (restoration)-[:RELATED_TO]->(property);
CREATE (sale)-[:RELATED_TO]->(partition:Partition);
CREATE (notice)-[:PROVIDED_TO]->(owners:Owners);
CREATE (notice)-[:PROVIDED_TO]->(mortgagees:Mortgagees);
CREATE (easements)-[:CREATED_FOR]->(owners);
CREATE (encroachment)-[:ADDRESSED]->(property);
CREATE (utilityEasements)-[:GRANTED_BY]->(association);

Note: The above Cypher statements include both the additional entities and relationships from the new document, as well as the existing entities and relationships from the original graph.
// Entities (additional)
CREATE (additionalProperty:AdditionalProperty);
CREATE (annexationDocument:AnnexationDocument);
CREATE (declarant:Declarant);
CREATE (project:Project);
CREATE (association:Association);
CREATE (condominium:Condominium);
CREATE (ownersAssociation:OwnersAssociation);

// Relationships (additional)
CREATE (additionalProperty)-[:CAN_BE_ANNEXED]->(annexationDocument);
CREATE (annexationDocument)-[:CONTAINS]->(contents:Contents);
CREATE (declarant)-[:NOT_OBLIGATED_TO_CONTINUE]->(development:Development);
CREATE (declarant)-[:OWNS]->(originalProperty:OriginalProperty);
CREATE (declarant)-[:OWNS]->(additionalProperty);

// Entities (existing)
CREATE (mortgagee:Mortgagee);
CREATE (lien:Lien);
CREATE (foreclosure:Foreclosure);
CREATE (rightOfFirstRefusal:RightOfFirstRefusal);
CREATE (inspection:Inspection {name: "Inspection of Association Books and Records"});
CREATE (condemnationProceeding:CondemnationProceeding);
CREATE (award:Award);
CREATE (covenant:Covenant {name: "Covenant against Partition"});
CREATE (condominiumComponentInterest:CondominiumComponentInterest);
CREATE (restoration:Restoration {name: "Restoration of the Property"});
CREATE (sale:Sale {name: "Sale of Property"});
CREATE (notice:Notice {name: "Notice to Owners and Listed Mortgagees"});
CREATE (easements:Easements);
CREATE (encroachment:Encroachment);
CREATE (utilityEasements:UtilityEasements);

// Relationships (existing)
CREATE (mortgagee)-[:HAS_PROTECTION]->(mortgageeProtection:MortgageeProtection);
CREATE (lien)-[:SUBORDINATE_TO]->(foreclosure);
CREATE (mortgagees)-[:NOT_REQUIRED_TO_CURE]->(breaches:Breaches);
CREATE (breaches)-[:AFFECTS]->(declarationEffects:DeclarationEffects);
CREATE (rightOfFirstRefusal)-[:EXEMPTED]->(exemption:Exemption);
CREATE (restrictionChanges:RestrictionChanges)-[:RESTRICTED]->(changes:Changes);
CREATE (mortgagees)-[:HAS_RIGHT_TO_INSPECT]->(inspection);
CREATE (condemnationProceeding)-[:REPRESENTED_BY]->(board);
CREATE (award)-[:DISTRIBUTED]->(distribution:Distribution);
CREATE (covenant)-[:PROHIBITS]->(partition:Partition);
CREATE (sale)-[:RELATED_TO]->(restoration);
CREATE (restoration)-[:RELATED_TO]->(property);
CREATE (sale)-[:RELATED_TO]->(partition:Partition);
CREATE (notice)-[:PROVIDED_TO]->(owners:Owners);
CREATE (notice)-[:PROVIDED_TO]->(mortgagees:Mortgagees);
CREATE (easements)-[:CREATED_FOR]->(owners);
CREATE (encroachment)-[:ADDRESSED]->(property);
CREATE (utilityEasements)-[:GRANTED_BY]->(association);

// Relationships (new)
CREATE (declarant)-[:DEVELOPING]->(project);
CREATE (project)-[:COMPLIES_WITH]->(va:FHA);
CREATE (declarant)-[:OWNS]->(additionalProperty);
CREATE (additionalProperty)-[:ANNEXED_TO]->(association);
CREATE (association)-[:ADMINISTERS]->(project);
CREATE (association)-[:MAINTAINS]->(project);
CREATE (association)-[:OPERATES]->(project);
CREATE (project)-[:DIVIDED_INTO]->(condominium);
CREATE (condominium)-[:PART_OF]->(ownersAssociation);
CREATE (originalProperty)-[:PART_OF]->(ownersAssociation);

// Remove duplicate relationships
MATCH (declarant)-[r:OWNS]->(originalProperty)
WHERE originalProperty:OriginalProperty
DELETE r;

// Add comments to explain the relationships
//
// Declarant develops the project
CREATE COMMENT ON (declarant)-[:DEVELOPING]->(project) IS 'Declarant is responsible for developing the project.';
// Project complies with VA and FHA regulations
CREATE COMMENT ON (project)-[:COMPLIES_WITH]->(va:FHA) IS 'The project complies with the regulations of the Department of Veterans Affairs (VA) and Federal Housing Administration (FHA).';
// Declarant owns additional property
CREATE COMMENT ON (declarant)-[:OWNS]->(additionalProperty) IS 'Declarant owns additional property.';
// Additional property is annexed to the association
CREATE COMMENT ON (additionalProperty)-[:ANNEXED_TO]->(association) IS 'The additional property is annexed to the association.';
// Association administers, operates, and maintains the project
CREATE COMMENT ON (association)-[:ADMINISTERS]->(project) IS 'The association is responsible for administering, operating, and maintaining the project.';
// Project is divided into condominiums
CREATE COMMENT ON (project)-[:DIVIDED_INTO]->(condominium) IS 'The project is divided into condominiums.';
// Condominium is part of the owners association
CREATE COMMENT ON (condominium)-[:PART_OF]->(ownersAssociation) IS 'The condominium is part of the owners association.';
// Original property is part of the owners association
CREATE COMMENT ON (originalProperty)-[:PART_OF]->(ownersAssociation) IS 'The original property is part of the owners association.';
Existing graph:
// Entities (additional)
CREATE (additionalProperty:AdditionalProperty);
CREATE (annexationDocument:AnnexationDocument);
CREATE (declarant:Declarant);
CREATE (project:Project);
CREATE (association:Association);
CREATE (condominium:Condominium);
CREATE (ownersAssociation:OwnersAssociation);

// Relationships (additional)
CREATE (additionalProperty)-[:CAN_BE_ANNEXED]->(annexationDocument);
CREATE (annexationDocument)-[:CONTAINS]->(contents:Contents);
CREATE (declarant)-[:NOT_OBLIGATED_TO_CONTINUE]->(development:Development);
CREATE (declarant)-[:OWNS]->(originalProperty:OriginalProperty);
CREATE (declarant)-[:OWNS]->(additionalProperty);

// Entities (existing)
CREATE (mortgagee:Mortgagee);
CREATE (lien:Lien);
CREATE (foreclosure:Foreclosure);
CREATE (rightOfFirstRefusal:RightOfFirstRefusal);
CREATE (inspection:Inspection {name: "Inspection of Association Books and Records"});
CREATE (condemnationProceeding:CondemnationProceeding);
CREATE (award:Award);
CREATE (covenant:Covenant {name: "Covenant against Partition"});
CREATE (condominiumComponentInterest:CondominiumComponentInterest);
CREATE (restoration:Restoration {name: "Restoration of the Property"});
CREATE (sale:Sale {name: "Sale of Property"});
CREATE (notice:Notice {name: "Notice to Owners and Listed Mortgagees"});
CREATE (easements:Easements);
CREATE (encroachment:Encroachment);
CREATE (utilityEasements:UtilityEasements);

// Relationships (existing)
CREATE (mortgagee)-[:HAS_PROTECTION]->(mortgageeProtection:MortgageeProtection);
CREATE (lien)-[:SUBORDINATE_TO]->(foreclosure);
CREATE (mortgagees)-[:NOT_REQUIRED_TO_CURE]->(breaches:Breaches);
CREATE (breaches)-[:AFFECTS]->(declarationEffects:DeclarationEffects);
CREATE (rightOfFirstRefusal)-[:EXEMPTED]->(exemption:Exemption);
CREATE (restrictionChanges:RestrictionChanges)-[:RESTRICTED]->(changes:Changes);
CREATE (mortgagees)-[:HAS_RIGHT_TO_INSPECT]->(inspection);
CREATE (condemnationProceeding)-[:REPRESENTED_BY]->(board);
CREATE (award)-[:DISTRIBUTED]->(distribution:Distribution);
CREATE (covenant)-[:PROHIBITS]->(partition:Partition);
CREATE (sale)-[:RELATED_TO]->(restoration);
CREATE (restoration)-[:RELATED_TO]->(property);
CREATE (sale)-[:RELATED_TO]->(partition:Partition);
CREATE (notice)-[:PROVIDED_TO]->(owners:Owners);
CREATE (notice)-[:PROVIDED_TO]->(mortgagees:Mortgagees);
CREATE (easements)-[:CREATED_FOR]->(owners);
CREATE (encroachment)-[:ADDRESSED]->(property);
CREATE (utilityEasements)-[:GRANTED_BY]->(association);

// Relationships (new)
CREATE (declarant)-[:DEVELOPING]->(project);
CREATE (project)-[:COMPLIES_WITH]->(va:FHA);
CREATE (declarant)-[:OWNS]->(additionalProperty);
CREATE (additionalProperty)-[:ANNEXED_TO]->(association);
CREATE (association)-[:ADMINISTERS]->(project);
CREATE (association)-[:MAINTAINS]->(project);
CREATE (association)-[:OPERATES]->(project);
CREATE (project)-[:DIVIDED_INTO]->(condominium);
CREATE (condominium)-[:PART_OF]->(ownersAssociation);
CREATE (originalProperty)-[:PART_OF]->(ownersAssociation);

// Remove duplicate relationships
MATCH (declarant)-[r:OWNS]->(originalProperty)
WHERE originalProperty:OriginalProperty
DELETE r;

// Add comments to explain the relationships
//
// Declarant develops the project
CREATE COMMENT ON (declarant)-[:DEVELOPING]->(project) IS 'Declarant is responsible for developing the project.';
// Project complies with VA and FHA regulations
CREATE COMMENT ON (project)-[:COMPLIES_WITH]->(va:FHA) IS 'The project complies with the regulations of the Department of Veterans Affairs (VA) and Federal Housing Administration (FHA).';
// Declarant owns additional property
CREATE COMMENT ON (declarant)-[:OWNS]->(additionalProperty) IS 'Declarant owns additional property.';
// Additional property is annexed to the association
CREATE COMMENT ON (additionalProperty)-[:ANNEXED_TO]->(association) IS 'The additional property is annexed to the association.';
// Association administers, operates, and maintains the project
CREATE COMMENT ON (association)-[:ADMINISTERS]->(project) IS 'The association is responsible for administering, operating, and maintaining the project.';
// Project is divided into condominiums
CREATE COMMENT ON (project)-[:DIVIDED_INTO]->(condominium) IS 'The project is divided into condominiums.';
// Condominium is part of the owners association
CREATE COMMENT ON (condominium)-[:PART_OF]->(ownersAssociation) IS 'The condominium is part of the owners association.';
// Original property is part of the owners association
CREATE COMMENT ON (originalProperty)-[:PART_OF]->(ownersAssociation) IS 'The original property is part of the owners association.';

// Extract main entities and relationships from the new document
CREATE (additionalProperty:AdditionalProperty);
CREATE (project:Project);
CREATE (association:Association);
CREATE (condominium:Condominium);
CREATE (ownersAssociation:OwnersAssociation);

// Add relationships from the new document
CREATE (declarant)-[:DEVELOPING]->(project);
CREATE (project)-[:COMPLIES_WITH]->(va:FHA);
CREATE (declarant)-[:OWNS]->(additionalProperty);
CREATE (additionalProperty)-[:ANNEXED_TO]->(association);
CREATE (association)-[:ADMINISTERS]->(project);
CREATE (association)-[:MAINTAINS]->(project);
CREATE (association)-[:OPERATES]->(project);
CREATE (project)-[:DIVIDED_INTO]->(condominium);
CREATE (condominium)-[:PART_OF]->(ownersAssociation);

// Add comments to explain the new relationships
// Declarant develops the project
CREATE COMMENT ON (declarant)-[:DEVELOPING]->(project) IS 'Declarant is responsible for developing the project.';
// Project complies with VA and FHA regulations
CREATE COMMENT ON (project)-[:COMPLIES_WITH]->(va:FHA) IS 'The project complies with the regulations of the Department of Veterans Affairs (VA) and Federal Housing Administration (FHA).';
// Declarant owns additional property
CREATE COMMENT ON (declarant)-[:OWNS]->(additionalProperty) IS 'Declarant owns additional property.';
// Additional property is annexed to the association
CREATE COMMENT ON (additionalProperty)-[:ANNEXED_TO]->(association) IS 'The additional property is annexed to the association.';
// Association administers, operates, and maintains the project
CREATE COMMENT ON (association)-[:ADMINISTERS]->(project) IS 'The association is responsible for administering, operating, and maintaining the project.';
// Project is divided into condominiums
CREATE COMMENT ON (project)-[:DIVIDED_INTO]->(condominium) IS 'The project is divided into condominiums.';
// Condominium is part of the owners association
CREATE COMMENT ON (condominium)-[:PART_OF]->(ownersAssociation) IS 'The condominium is part of the owners association.';
// Entities (additional)
CREATE (nonBindingArbitration:NonBindingArbitration);
CREATE (mediation:Mediation);
CREATE (bindingArbitration:BindingArbitration);
CREATE (approval:Approval);
CREATE (articles:Articles);
CREATE (assessments:Assessments);
CREATE (association:Association);
CREATE (beneficiary:Beneficiary);
CREATE (board:Board);
CREATE (bylaws:Bylaws);
CREATE (codeSection:CodeSection);
CREATE (commonArea:CommonArea);
CREATE (commonExpenses:CommonExpenses);
CREATE (complianceAssessment:ComplianceAssessment);
CREATE (condominium:Condominium);
CREATE (condominiumPlan:CondominiumPlan);
CREATE (declarant:Declarant);
CREATE (declaration:Declaration);
CREATE (deedOfTrust:DeedOfTrust);
CREATE (dre:DRE);
CREATE (eligibleFirstMortgagees:EligibleFirstMortgagees);
CREATE (exclusiveUseCommonArea:ExclusiveUseCommonArea);

// Relationships (additional)
CREATE (nonBindingArbitration)-[:INCLUDES]->(mediation);
CREATE (nonBindingArbitration)-[:INCLUDES]->(bindingArbitration);
CREATE (association)-[:APPROVES]->(approval);
CREATE (association)-[:HAS_DOCUMENT]->(articles);
CREATE (association)-[:HAS_CHARGES]->(assessments);
CREATE (association)-[:ADMINISTERS]->(project);
CREATE (association)-[:MAINTAINS]->(project);
CREATE (association)-[:OPERATES]->(project);
CREATE (association)-[:PART_OF]->(ownersAssociation);
CREATE (association)-[:HAS_BOARD]->(board);
CREATE (association)-[:HAS_BYLAWS]->(bylaws);
CREATE (association)-[:HAS_CODE_SECTION]->(codeSection);
CREATE (project)-[:HAS_COMMON_AREA]->(commonArea);
CREATE (association)-[:HAS_EXPENSES]->(commonExpenses);
CREATE (association)-[:IMPOSES_ASSESSMENT]->(complianceAssessment);
CREATE (condominium)-[:HAS_DECLARATION]->(declaration);
CREATE (condominium)-[:HAS_PLAN]->(condominiumPlan);
CREATE (declaration)-[:HAS_DECLARANT]->(declarant);
CREATE (declaration)-[:HAS_DEED_OF_TRUST]->(deedOfTrust);
CREATE (dre)-[:HAS_ELIGIBLE_FIRST_MORTGAGEES]->(eligibleFirstMortgagees);
CREATE (commonArea)-[:HAS_EXCLUSIVE_USE_AREA]->(exclusiveUseCommonArea);

// Add comments to explain the new relationships
// Non-binding Arbitration includes Mediation and Binding Arbitration
CREATE COMMENT ON (nonBindingArbitration)-[:INCLUDES]->(mediation) IS 'Non-binding Arbitration includes Mediation.';
CREATE COMMENT ON (nonBindingArbitration)-[:INCLUDES]->(bindingArbitration) IS 'Non-binding Arbitration includes Binding Arbitration.';
// Association approves actions requiring prior written approval
CREATE COMMENT ON (association)-[:APPROVES]->(approval) IS 'The association approves actions requiring prior written approval.';
// Association has Articles of Incorporation
CREATE COMMENT ON (association)-[:HAS_DOCUMENT]->(articles) IS 'The association has Articles of Incorporation.';
// Association has charges and assessments
CREATE COMMENT ON (association)-[:HAS_CHARGES]->(assessments) IS 'The association has charges and assessments.';
// Association administers, operates, and maintains the project
CREATE COMMENT ON (association)-[:ADMINISTERS]->(project) IS 'The association is responsible for administering, operating, and maintaining the project.';
// Association is part of the owners association
CREATE COMMENT ON (association)-[:PART_OF]->(ownersAssociation) IS 'The association is part of the owners association.';
// Association has a board of directors
CREATE COMMENT ON (association)-[:HAS_BOARD]->(board) IS 'The association has a board of directors.';
// Association has bylaws
CREATE COMMENT ON (association)-[:HAS_BYLAWS]->(bylaws) IS 'The association has bylaws.';
// Association has references to code sections
CREATE COMMENT ON (association)-[:HAS_CODE_SECTION]->(codeSection) IS 'The association has references to code sections.';
// Project has common areas
CREATE COMMENT ON (project)-[:HAS_COMMON_AREA]->(commonArea) IS 'The project has common areas.';
// Association has expenses
CREATE COMMENT ON (association)-[:HAS_EXPENSES]->(commonExpenses) IS 'The association has expenses.';
// Association imposes compliance assessments
CREATE COMMENT ON (association)-[:IMPOSES_ASSESSMENT]->(complianceAssessment) IS 'The association imposes compliance assessments.';
// Condominium has a declaration
CREATE COMMENT ON (condominium)-[:HAS_DECLARATION]->(declaration) IS 'The condominium has a declaration.';
// Condominium has a plan
CREATE COMMENT ON (condominium)-[:HAS_PLAN]->(condominiumPlan) IS 'The condominium has a plan.';
// Declaration has a declarant
CREATE COMMENT ON (declaration)-[:HAS_DECLARANT]->(declarant) IS 'The declaration has a declarant.';
// Declaration has a deed of trust
CREATE COMMENT ON (declaration)-[:HAS_DEED_OF_TRUST]->(deedOfTrust) IS 'The declaration has a deed of trust.';
// DRE has eligible first mortgagees
CREATE COMMENT ON (dre)-[:HAS_ELIGIBLE_FIRST_MORTGAGEES]->(eligibleFirstMortgagees) IS 'The DRE has eligible first mortgagees.';
// Common area has exclusive use areas
CREATE COMMENT ON (commonArea)-[:HAS_EXCLUSIVE_USE_AREA]->(exclusiveUseCommonArea) IS 'The common area has exclusive use areas.';
// Entities (updated)
CREATE (nonBindingArbitration:NonBindingArbitration);
CREATE (mediation:Mediation);
CREATE (bindingArbitration:BindingArbitration);
CREATE (approval:Approval);
CREATE (articles:Articles);
CREATE (assessments:Assessments);
CREATE (association:Association);
CREATE (beneficiary:Beneficiary);
CREATE (board:Board);
CREATE (bylaws:Bylaws);
CREATE (codeSection:CodeSection);
CREATE (commonArea:CommonArea);
CREATE (commonExpenses:CommonExpenses);
CREATE (complianceAssessment:ComplianceAssessment);
CREATE (condominium:Condominium);
CREATE (condominiumPlan:CondominiumPlan);
CREATE (declarant:Declarant);
CREATE (declaration:Declaration);
CREATE (deedOfTrust:DeedOfTrust);
CREATE (dre:DRE);
CREATE (eligibleFirstMortgagees:EligibleFirstMortgagees);
CREATE (exclusiveUseCommonArea:ExclusiveUseCommonArea);

// Relationships (updated)
CREATE (nonBindingArbitration)-[:INCLUDES]->(mediation);
CREATE (nonBindingArbitration)-[:INCLUDES]->(bindingArbitration);
CREATE (association)-[:APPROVES]->(approval);
CREATE (association)-[:HAS_DOCUMENT]->(articles);
CREATE (association)-[:HAS_CHARGES]->(assessments);
CREATE (association)-[:ADMINISTERS]->(project);
CREATE (association)-[:MAINTAINS]->(project);
CREATE (association)-[:OPERATES]->(project);
CREATE (association)-[:PART_OF]->(ownersAssociation);
CREATE (association)-[:HAS_BOARD]->(board);
CREATE (association)-[:HAS_BYLAWS]->(bylaws);
CREATE (association)-[:HAS_CODE_SECTION]->(codeSection);
CREATE (project)-[:HAS_COMMON_AREA]->(commonArea);
CREATE (association)-[:HAS_EXPENSES]->(commonExpenses);
CREATE (association)-[:IMPOSES_ASSESSMENT]->(complianceAssessment);
CREATE (condominium)-[:HAS_DECLARATION]->(declaration);
CREATE (condominium)-[:HAS_PLAN]->(condominiumPlan);
CREATE (declaration)-[:HAS_DECLARANT]->(declarant);
CREATE (declaration)-[:HAS_DEED_OF_TRUST]->(deedOfTrust);
CREATE (dre)-[:HAS_ELIGIBLE_FIRST_MORTGAGEES]->(eligibleFirstMortgagees);
CREATE (commonArea)-[:HAS_EXCLUSIVE_USE_AREA]->(exclusiveUseCommonArea);

// Add comments to explain the new relationships
// Non-binding Arbitration includes Mediation and Binding Arbitration
CREATE COMMENT ON (nonBindingArbitration)-[:INCLUDES]->(mediation) IS 'Non-binding Arbitration includes Mediation.';
CREATE COMMENT ON (nonBindingArbitration)-[:INCLUDES]->(bindingArbitration) IS 'Non-binding Arbitration includes Binding Arbitration.';
// Association approves actions requiring prior written approval
CREATE COMMENT ON (association)-[:APPROVES]->(approval) IS 'The association approves actions requiring prior written approval.';
// Association has Articles of Incorporation
CREATE COMMENT ON (association)-[:HAS_DOCUMENT]->(articles) IS 'The association has Articles of Incorporation.';
// Association has charges and assessments
CREATE COMMENT ON (association)-[:HAS_CHARGES]->(assessments) IS 'The association has charges and assessments.';
// Association administers, operates, and maintains the project
CREATE COMMENT ON (association)-[:ADMINISTERS]->(project) IS 'The association is responsible for administering, operating, and maintaining the project.';
// Association is part of the owners association
CREATE COMMENT ON (association)-[:PART_OF]->(ownersAssociation) IS 'The association is part of the owners association.';
// Association has a board of directors
CREATE COMMENT ON (association)-[:HAS_BOARD]->(board) IS 'The association has a board of directors.';
// Association has bylaws
CREATE COMMENT ON (association)-[:HAS_BYLAWS]->(bylaws) IS 'The association has bylaws.';
// Association has references to code sections
CREATE COMMENT ON (association)-[:HAS_CODE_SECTION]->(codeSection) IS 'The association has references to code sections.';
// Project has common areas
CREATE COMMENT ON (project)-[:HAS_COMMON_AREA]->(commonArea) IS 'The project has common areas.';
// Association has expenses
CREATE COMMENT ON (association)-[:HAS_EXPENSES]->(commonExpenses) IS 'The association has expenses.';
// Association imposes compliance assessments
CREATE COMMENT ON (association)-[:IMPOSES_ASSESSMENT]->(complianceAssessment) IS 'The association imposes compliance assessments.';
// Condominium has a declaration
CREATE COMMENT ON (condominium)-[:HAS_DECLARATION]->(declaration) IS 'The condominium has a declaration.';
// Condominium has a plan
CREATE COMMENT ON (condominium)-[:HAS_PLAN]->(condominiumPlan) IS 'The condominium has a plan.';
// Declaration has a declarant
CREATE COMMENT ON (declaration)-[:HAS_DECLARANT]->(declarant) IS 'The declaration has a declarant.';
// Declaration has a deed of trust
CREATE COMMENT ON (declaration)-[:HAS_DEED_OF_TRUST]->(deedOfTrust) IS 'The declaration has a deed of trust.';
// DRE has eligible first mortgagees
CREATE COMMENT ON (dre)-[:HAS_ELIGIBLE_FIRST_MORTGAGEES]->(eligibleFirstMortgagees) IS 'The DRE has eligible first mortgagees.';
// Common area has exclusive use areas
CREATE COMMENT ON (commonArea)-[:HAS_EXCLUSIVE_USE_AREA]->(exclusiveUseCommonArea) IS 'The common area has exclusive use areas.';

// Add new entities and relationships from the document
CREATE (exclusiveUseCommonArea:ExclusiveUseCommonArea);
CREATE (commonExpenses:CommonExpenses);
CREATE (complianceAssessment:ComplianceAssessment);
CREATE (condominium:Condominium);
CREATE (condominiumPlan:CondominiumPlan);
CREATE (declaration:Declaration);
CREATE (declarant:Declarant);
CREATE (deedOfTrust:DeedOfTrust);
CREATE (dre:DRE);
CREATE (eligibleFirstMortgagees:EligibleFirstMortgagees);

CREATE (association)-[:HAS_EXPENSES]->(commonExpenses);
CREATE (association)-[:IMPOSES_ASSESSMENT]->(complianceAssessment);
CREATE (condominium)-[:HAS_DECLARATION]->(declaration);
CREATE (condominium)-[:HAS_PLAN]->(condominiumPlan);
CREATE (declaration)-[:HAS_DECLARANT]->(declarant);
CREATE (declaration)-[:HAS_DEED_OF_TRUST]->(deedOfTrust);
CREATE (dre)-[:HAS_ELIGIBLE_FIRST_MORTGAGEES]->(eligibleFirstMortgagees);
CREATE (commonArea)-[:HAS_EXCLUSIVE_USE_AREA]->(exclusiveUseCommonArea);

// Add comments to explain the new relationships from the document
// Association has expenses
CREATE COMMENT ON (association)-[:HAS_EXPENSES]->(commonExpenses) IS 'The association has expenses.';
// Association imposes compliance assessments
CREATE COMMENT ON (association)-[:IMPOSES_ASSESSMENT]->(complianceAssessment) IS 'The association imposes compliance assessments.';
// Condominium has a declaration
CREATE COMMENT ON (condominium)-[:HAS_DECLARATION]->(declaration) IS 'The condominium has a declaration.';
// Condominium has a plan
CREATE COMMENT ON (condominium)-[:HAS_PLAN]->(condominiumPlan) IS 'The condominium has a plan.';
// Declaration has a declarant
CREATE COMMENT ON (declaration)-[:HAS_DECLARANT]->(declarant) IS 'The declaration has a declarant.';
// Declaration has a deed of trust
CREATE COMMENT ON (declaration)-[:HAS_DEED_OF_TRUST]->(deedOfTrust) IS 'The declaration has a deed of trust.';
// DRE has eligible first mortgagees
CREATE COMMENT ON (dre)-[:HAS_ELIGIBLE_FIRST_MORTGAGEES]->(eligibleFirstMortgagees) IS 'The DRE has eligible first mortgagees.';
// Common area has exclusive use areas
CREATE COMMENT ON (commonArea)-[:HAS_EXCLUSIVE_USE_AREA]->(exclusiveUseCommonArea) IS 'The common area has exclusive use areas.';
// Update existing entities and relationships
// Remove duplicate entities
MATCH (n:ExclusiveUseCommonArea)
DELETE n;
MATCH (n:CommonExpenses)
DELETE n;
MATCH (n:ComplianceAssessment)
DELETE n;
MATCH (n:Condominium)
DELETE n;
MATCH (n:CondominiumPlan)
DELETE n;
MATCH (n:Declaration)
DELETE n;
MATCH (n:Declarant)
DELETE n;
MATCH (n:DeedOfTrust)
DELETE n;
MATCH (n:DRE)
DELETE n;
MATCH (n:EligibleFirstMortgagees)
DELETE n;

// Remove duplicate relationships
MATCH (:Association)-[r:HAS_EXPENSES]->(:CommonExpenses)
DELETE r;
MATCH (:Association)-[r:IMPOSES_ASSESSMENT]->(:ComplianceAssessment)
DELETE r;
MATCH (:Condominium)-[r:HAS_DECLARATION]->(:Declaration)
DELETE r;
MATCH (:Condominium)-[r:HAS_PLAN]->(:CondominiumPlan)
DELETE r;
MATCH (:Declaration)-[r:HAS_DECLARANT]->(:Declarant)
DELETE r;
MATCH (:Declaration)-[r:HAS_DEED_OF_TRUST]->(:DeedOfTrust)
DELETE r;
MATCH (:DRE)-[r:HAS_ELIGIBLE_FIRST_MORTGAGEES]->(:EligibleFirstMortgagees)
DELETE r;
MATCH (:CommonArea)-[r:HAS_EXCLUSIVE_USE_AREA]->(:ExclusiveUseCommonArea)
DELETE r;

// Add new entities and relationships from the document
CREATE (governingDocuments:GoverningDocuments);
CREATE (gnma:GNMA);
CREATE (grantDeed:GrantDeed);
CREATE (institutionalMortgagee:InstitutionalMortgagee);
CREATE (manager:Manager);
CREATE (member:Member);
CREATE (mortgage:Mortgage);
CREATE (fha:FHA);
CREATE (fhlm:FHLMC);
CREATE (firstMortgage:FirstMortgage);
CREATE (firstSale:FirstSale);
CREATE (fnma:FNMA);

CREATE (association)-[:HAS_DOCUMENT]->(governingDocuments);
CREATE (association)-[:APPROVES]->(approval);
CREATE (association)-[:HAS_DOCUMENT]->(articles);
CREATE (association)-[:HAS_CHARGES]->(assessments);
CREATE (association)-[:ADMINISTERS]->(project);
CREATE (association)-[:MAINTAINS]->(project);
CREATE (association)-[:OPERATES]->(project);
CREATE (association)-[:PART_OF]->(ownersAssociation);
CREATE (association)-[:HAS_BOARD]->(board);
CREATE (association)-[:HAS_BYLAWS]->(bylaws);
CREATE (association)-[:HAS_CODE_SECTION]->(codeSection);
CREATE (project)-[:HAS_COMMON_AREA]->(commonArea);
CREATE (association)-[:HAS_EXPENSES]->(commonExpenses);
CREATE (association)-[:IMPOSES_ASSESSMENT]->(complianceAssessment);
CREATE (condominium)-[:HAS_DECLARATION]->(declaration);
CREATE (condominium)-[:HAS_PLAN]->(condominiumPlan);
CREATE (declaration)-[:HAS_DECLARANT]->(declarant);
CREATE (declaration)-[:HAS_DEED_OF_TRUST]->(deedOfTrust);
CREATE (dre)-[:HAS_ELIGIBLE_FIRST_MORTGAGEES]->(eligibleFirstMortgagees);
CREATE (commonArea)-[:HAS_EXCLUSIVE_USE_AREA]->(exclusiveUseCommonArea);

// Add comments to explain the new relationships from the document
// Association has governing documents
CREATE COMMENT ON (association)-[:HAS_DOCUMENT]->(governingDocuments) IS 'The association has governing documents.';
// Association approves actions requiring prior written approval
CREATE COMMENT ON (association)-[:APPROVES]->(approval) IS 'The association approves actions requiring prior written approval.';
// Association has Articles of Incorporation
CREATE COMMENT ON (association)-[:HAS_DOCUMENT]->(articles) IS 'The association has Articles of Incorporation.';
// Association has charges and assessments
CREATE COMMENT ON (association)-[:HAS_CHARGES]->(assessments) IS 'The association has charges and assessments.';
// Association administers, operates, and maintains the project
CREATE COMMENT ON (association)-[:ADMINISTERS]->(project) IS 'The association is responsible for administering, operating, and maintaining the project.';
// Association is part of the owners association
CREATE COMMENT ON (association)-[:PART_OF]->(ownersAssociation) IS 'The association is part of the owners association.';
// Association has a board of directors
CREATE COMMENT ON (association)-[:HAS_BOARD]->(board) IS 'The association has a board of directors.';
// Association has bylaws
CREATE COMMENT ON (association)-[:HAS_BYLAWS]->(bylaws) IS 'The association has bylaws.';
// Association has references to code sections
CREATE COMMENT ON (association)-[:HAS_CODE_SECTION]->(codeSection) IS 'The association has references to code sections.';
// Project has common areas
CREATE COMMENT ON (project)-[:HAS_COMMON_AREA]->(commonArea) IS 'The project has common areas.';
// Association has expenses
CREATE COMMENT ON (association)-[:HAS_EXPENSES]->(commonExpenses) IS 'The association has expenses.';
// Association imposes compliance assessments
CREATE COMMENT ON (association)-[:IMPOSES_ASSESSMENT]->(complianceAssessment) IS 'The association imposes compliance assessments.';
// Condominium has a declaration
CREATE COMMENT ON (condominium)-[:HAS_DECLARATION]->(declaration) IS 'The condominium has a declaration.';
// Condominium has a plan
CREATE COMMENT ON (condominium)-[:HAS_PLAN]->(condominiumPlan) IS 'The condominium has a plan.';
// Declaration has a declarant
CREATE COMMENT ON (declaration)-[:HAS_DECLARANT]->(declarant) IS 'The declaration has a declarant.';
// Declaration has a deed of trust
CREATE COMMENT ON (declaration)-[:HAS_DEED_OF_TRUST]->(deedOfTrust) IS 'The declaration has a deed of trust.';
// DRE has eligible first mortgagees
CREATE COMMENT ON (dre)-[:HAS_ELIGIBLE_FIRST_MORTGAGEES]->(eligibleFirstMortgagees) IS 'The DRE has eligible first mortgagees.';
// Common area has exclusive use areas
CREATE COMMENT ON (commonArea)-[:HAS_EXCLUSIVE_USE_AREA]->(exclusiveUseCommonArea) IS 'The common area has exclusive use areas.';

// Add comments to explain the new entities and relationships from the document
// Governing Documents entity
CREATE COMMENT ON (governingDocuments) IS 'Documents governing the Property, including this Declaration, the Articles, Bylaws, Condominium Plan and any Rules and Regulations.';
// GNMA entity
CREATE COMMENT ON (gnma) IS 'The Government National Mortgage Association administered by the United States Dept. of Housing and Urban Development, and any successors to such association.';
// Grant Deed entity
CREATE COMMENT ON (grantDeed) IS 'A written instrument transferring title to real property.';
// Institutional Mortgagee entity
CREATE COMMENT ON (institutionalMortgagee) IS 'Any bank, savings and loan association, insurance company, real estate investment trust, retirement fund trust, or other financial institution holding a recorded First Mortgage on any Condominium.';
// Manager entity
CREATE COMMENT ON (manager) IS 'The person(s), firm or corporation contractually engaged by the Association or Declarant and charged with the management of the Common Area(s) and the performance of other duties of the Association as provided for in this Declaration.';
// Member entity
CREATE COMMENT ON (member) IS 'Any person who is an Owner based upon the provisions of the Governing Documents.';
// Mortgage entity
CREATE COMMENT ON (mortgage) IS 'A two party security instrument pledging land as security for the performance of an obligation. Reference to Mortgage includes the Deed of Trust.';
// FHA entity
CREATE COMMENT ON (fha) IS 'The Federal Housing Administration of the United States Department of Housing and Urban Development and any department or agency of the United States government which succeeds to the FHA\'s function of insuring notes secured by Mortgages on residential real estate.';
// FHLMC entity
CREATE COMMENT ON (fhlm) IS 'The Federal Home Loan Mortgage Corporation (also known as The Mortgage Corporation) created by Title II of the Emergency Home Finance Act of 1970, and any successors to such corporation.';
// First Mortgage entity
CREATE COMMENT ON (firstMortgage) IS 'A Mortgage or Mortgagee that has priority over all other Mortgages or Mortgagees encumbering the same Condominium or any other portion of the Project, including a First Mortgagee\'s blanket Mortgage recorded prior to the recording of this Declaration.';
// First Sale entity
CREATE COMMENT ON (firstSale) IS 'The date on which the first deed is recorded conveying fee title to a Condominium to the first buyer pursuant to a transaction requiring the issuance of a Final Subdivision Public Report by the Department of Real Estate.';
// FNMA entity
CREATE COMMENT ON (fnma) IS 'The Federal National Mortgage Association, a government-sponsored private corporation established pursuant to Title VIII of the Housing and Urban Development Act of 1968, and any successors to such corporation.';
// Update existing entities and relationships
// Remove duplicate entities
MATCH (n:ExclusiveUseCommonArea)
DELETE n;
MATCH (n:CommonExpenses)
DELETE n;
MATCH (n:ComplianceAssessment)
DELETE n;
MATCH (n:Condominium)
DELETE n;
MATCH (n:CondominiumPlan)
DELETE n;
MATCH (n:Declaration)
DELETE n;
MATCH (n:Declarant)
DELETE n;
MATCH (n:DeedOfTrust)
DELETE n;
MATCH (n:DRE)
DELETE n;
MATCH (n:EligibleFirstMortgagees)
DELETE n;

// Remove duplicate relationships
MATCH (:Association)-[r:HAS_EXPENSES]->(:CommonExpenses)
DELETE r;
MATCH (:Association)-[r:IMPOSES_ASSESSMENT]->(:ComplianceAssessment)
DELETE r;
MATCH (:Condominium)-[r:HAS_DECLARATION]->(:Declaration)
DELETE r;
MATCH (:Condominium)-[r:HAS_PLAN]->(:CondominiumPlan)
DELETE r;
MATCH (:Declaration)-[r:HAS_DECLARANT]->(:Declarant)
DELETE r;
MATCH (:Declaration)-[r:HAS_DEED_OF_TRUST]->(:DeedOfTrust)
DELETE r;
MATCH (:DRE)-[r:HAS_ELIGIBLE_FIRST_MORTGAGEES]->(:EligibleFirstMortgagees)
DELETE r;
MATCH (:CommonArea)-[r:HAS_EXCLUSIVE_USE_AREA]->(:ExclusiveUseCommonArea)
DELETE r;

// Add new entities and relationships from the document
CREATE (governingDocuments:GoverningDocuments);
CREATE (gnma:GNMA);
CREATE (grantDeed:GrantDeed);
CREATE (institutionalMortgagee:InstitutionalMortgagee);
CREATE (manager:Manager);
CREATE (member:Member);
CREATE (mortgage:Mortgage);
CREATE (fha:FHA);
CREATE (fhlm:FHLMC);
CREATE (firstMortgage:FirstMortgage);
CREATE (firstSale:FirstSale);
CREATE (fnma:FNMA);

CREATE (association)-[:HAS_DOCUMENT]->(governingDocuments);
CREATE (association)-[:APPROVES]->(approval);
CREATE (association)-[:HAS_DOCUMENT]->(articles);
CREATE (association)-[:HAS_CHARGES]->(assessments);
CREATE (association)-[:ADMINISTERS]->(project);
CREATE (association)-[:MAINTAINS]->(project);
CREATE (association)-[:OPERATES]->(project);
CREATE (association)-[:PART_OF]->(ownersAssociation);
CREATE (association)-[:HAS_BOARD]->(board);
CREATE (association)-[:HAS_BYLAWS]->(bylaws);
CREATE (association)-[:HAS_CODE_SECTION]->(codeSection);
CREATE (project)-[:HAS_COMMON_AREA]->(commonArea);
CREATE (association)-[:HAS_EXPENSES]->(commonExpenses);
CREATE (association)-[:IMPOSES_ASSESSMENT]->(complianceAssessment);
CREATE (condominium)-[:HAS_DECLARATION]->(declaration);
CREATE (condominium)-[:HAS_PLAN]->(condominiumPlan);
CREATE (declaration)-[:HAS_DECLARANT]->(declarant);
CREATE (declaration)-[:HAS_DEED_OF_TRUST]->(deedOfTrust);
CREATE (dre)-[:HAS_ELIGIBLE_FIRST_MORTGAGEES]->(eligibleFirstMortgagees);
CREATE (commonArea)-[:HAS_EXCLUSIVE_USE_AREA]->(exclusiveUseCommonArea);

// Add comments to explain the new relationships from the document
// Association has governing documents
CREATE COMMENT ON (association)-[:HAS_DOCUMENT]->(governingDocuments) IS 'The association has governing documents.';
// Association approves actions requiring prior written approval
CREATE COMMENT ON (association)-[:APPROVES]->(approval) IS 'The association approves actions requiring prior written approval.';
// Association has Articles of Incorporation
CREATE COMMENT ON (association)-[:HAS_DOCUMENT]->(articles) IS 'The association has Articles of Incorporation.';
// Association has charges and assessments
CREATE COMMENT ON (association)-[:HAS_CHARGES]->(assessments) IS 'The association has charges and assessments.';
// Association administers, operates, and maintains the project
CREATE COMMENT ON (association)-[:ADMINISTERS]->(project) IS 'The association is responsible for administering, operating, and maintaining the project.';
// Association is part of the owners association
CREATE COMMENT ON (association)-[:PART_OF]->(ownersAssociation) IS 'The association is part of the owners association.';
// Association has a board of directors
CREATE COMMENT ON (association)-[:HAS_BOARD]->(board) IS 'The association has a board of directors.';
// Association has bylaws
CREATE COMMENT ON (association)-[:HAS_BYLAWS]->(bylaws) IS 'The association has bylaws.';
// Association has references to code sections
CREATE COMMENT ON (association)-[:HAS_CODE_SECTION]->(codeSection) IS 'The association has references to code sections.';
// Project has common areas
CREATE COMMENT ON (project)-[:HAS_COMMON_AREA]->(commonArea) IS 'The project has common areas.';
// Association has expenses
CREATE COMMENT ON (association)-[:HAS_EXPENSES]->(commonExpenses) IS 'The association has expenses.';
// Association imposes compliance assessments
CREATE COMMENT ON (association)-[:IMPOSES_ASSESSMENT]->(complianceAssessment) IS 'The association imposes compliance assessments.';
// Condominium has a declaration
CREATE COMMENT ON (condominium)-[:HAS_DECLARATION]->(declaration) IS 'The condominium has a declaration.';
// Condominium has a plan
CREATE COMMENT ON (condominium)-[:HAS_PLAN]->(condominiumPlan) IS 'The condominium has a plan.';
// Declaration has a declarant
CREATE COMMENT ON (declaration)-[:HAS_DECLARANT]->(declarant) IS 'The declaration has a declarant.';
// Declaration has a deed of trust
CREATE COMMENT ON (declaration)-[:HAS_DEED_OF_TRUST]->(deedOfTrust) IS 'The declaration has a deed of trust.';
// DRE has eligible first mortgagees
CREATE COMMENT ON (dre)-[:HAS_ELIGIBLE_FIRST_MORTGAGEES]->(eligibleFirstMortgagees) IS 'The DRE has eligible first mortgagees.';
// Common area has exclusive use areas
CREATE COMMENT ON (commonArea)-[:HAS_EXCLUSIVE_USE_AREA]->(exclusiveUseCommonArea) IS 'The common area has exclusive use areas.';

// Add comments to explain the new entities and relationships from the document
// Governing Documents entity
CREATE COMMENT ON (governingDocuments) IS 'Documents governing the Property, including this Declaration, the Articles, Bylaws, Condominium Plan and any Rules and Regulations.';
// GNMA entity
CREATE COMMENT ON (gnma) IS 'The Government National Mortgage Association administered by the United States Dept. of Housing and Urban Development, and any successors to such association.';
// Grant Deed entity
CREATE COMMENT ON (grantDeed) IS 'A written instrument transferring title to real property.';
// Institutional Mortgagee entity
CREATE COMMENT ON (institutionalMortgagee) IS 'Any bank, savings and loan association, insurance company, real estate investment trust, retirement fund trust, or other financial institution holding a recorded First Mortgage on any Condominium.';
// Manager entity
CREATE COMMENT ON (manager) IS 'The person(s), firm or corporation contractually engaged by the Association or Declarant and charged with the management of the Common Area(s) and the performance of other duties of the Association as provided for in this Declaration.';
// Member entity
CREATE COMMENT ON (member) IS 'Any person who is an Owner based upon the provisions of the Governing Documents.';
// Mortgage entity
CREATE COMMENT ON (mortgage) IS 'A two party security instrument pledging land as security for the performance of an obligation. Reference to Mortgage includes the Deed of Trust.';
// FHA entity
CREATE COMMENT ON (fha) IS 'The Federal Housing Administration of the United States Department of Housing and Urban Development and any department or agency of the United States government which succeeds to the FHA\'s function of insuring notes secured by Mortgages on residential real estate.';
// FHLMC entity
CREATE COMMENT ON (fhlm) IS 'The Federal Home Loan Mortgage Corporation (also known as The Mortgage Corporation) created by Title II of the Emergency Home Finance Act of 1970, and any successors to such corporation.';
// First Mortgage entity
CREATE COMMENT ON (firstMortgage) IS 'A Mortgage or Mortgagee that has priority over all other Mortgages or Mortgagees encumbering the same Condominium or any other portion of the Project, including a First Mortgagee\'s blanket Mortgage recorded prior to the recording of this Declaration.';
// First Sale entity
CREATE COMMENT ON (firstSale) IS 'The date on which the first deed is recorded conveying fee title to a Condominium to the first buyer pursuant to a transaction requiring the issuance of a Final Subdivision Public Report by the Department of Real Estate.';
// FNMA entity
CREATE COMMENT ON (fnma) IS 'The Federal National Mortgage Association, a government-sponsored private corporation established pursuant to Title VIII of the Housing and Urban Development Act of 1968, and any successors to such corporation.';

// Add comments to explain new terms from the document
// Trustor entity
CREATE COMMENT ON (trustor) IS 'The party executing a Deed of Trust on any portion of the Property.';
// Mortgagor entity
CREATE COMMENT ON (mortgagor) IS 'The party executing a Mortgage. Reference to Mortgagor includes the Trustor under the Deed of Trust.';
// Notice and a Hearing term
CREATE COMMENT ON (noticeAndHearing) IS 'A notice of time and an opportunity for a hearing as provided for in the Governing Documents.';
// Occupant term
CREATE COMMENT ON (occupant) IS 'An Owner, resident, guest, invitee, tenant, lessee, sublessee, or other person residing in a Unit.';
// Original Property term
CREATE COMMENT ON (originalProperty) IS 'The real property described in Exhibit "A" of this Declaration, which is divided or to be divided into the Common Area and the Units therein prior to the annexation of the Additional Property.';
// Owner term
CREATE COMMENT ON (owner) IS 'The person(s) or legal entity holding a recorded fee simple interest in a Condominium (including the Declarant), or the purchaser(s) of a Condominium under an installment land sales contract. Owner does not include any person or entity having an interest in a Condominium merely as security for the performance of an obligation.';
// Person term
CREATE COMMENT ON (person) IS 'A person, partnership, corporation, trustee or other legal entity.';
// Phase term
CREATE COMMENT ON (phase) IS 'That portion of the Property identified as a "Phase" in a DRE Final Subdivision Public Report.';
// Project term
CREATE COMMENT ON (project) IS 'The real property described in Exhibit "A" and any Additional Property which is annexed pursuant to this Declaration. The Project is a "Condominium Project" as defined in Section 1351(f) of the California Civil Code. The Property is a "Common Interest Development" as defined in Section 1351(c) of the California Civil Code.';
// Quorum term
CREATE COMMENT ON (quorum) IS 'Members entitled to vote (in person or by proxy) holding a majority of the total voting power of the Association constitute specifically, a quorum for business transactions at all Member meetings (except as otherwise specifically provided in this Declaration or the Bylaws of the Association).';
// Regular Assessments term
CREATE COMMENT ON (regularAssessments) IS 'Assessments used to meet the Association\'s normal operating expenses and to establish necessary reserves.';
// Rules and Regulations term
CREATE COMMENT ON (rulesAndRegulations) IS 'The rules as established and adopted from time to time by the Board as provided for in this Declaration.';
// Special Assessments term
CREATE COMMENT ON (specialAssessments) IS 'Assessments levied on an as-needed basis to meet expenses of an extraordinary or capital nature.';
// Mortgagee term
CREATE COMMENT ON (mortgagee) IS 'The party entitled to performance by a Mortgagor. Reference to Mortgagee includes any beneficiary under a Deed of Trust including a Deed of Trust on any portion of the Property, recorded prior to the recording of this Declaration.';
// Update existing entities and relationships
// Remove duplicate entities
MATCH (n:ExclusiveUseCommonArea)
DELETE n;
MATCH (n:CommonExpenses)
DELETE n;
MATCH (n:ComplianceAssessment)
DELETE n;
MATCH (n:Condominium)
DELETE n;
MATCH (n:CondominiumPlan)
DELETE n;
MATCH (n:Declaration)
DELETE n;
MATCH (n:Declarant)
DELETE n;
MATCH (n:DeedOfTrust)
DELETE n;
MATCH (n:DRE)
DELETE n;
MATCH (n:EligibleFirstMortgagees)
DELETE n;

// Remove duplicate relationships
MATCH (:Association)-[r:HAS_EXPENSES]->(:CommonExpenses)
DELETE r;
MATCH (:Association)-[r:IMPOSES_ASSESSMENT]->(:ComplianceAssessment)
DELETE r;
MATCH (:Condominium)-[r:HAS_DECLARATION]->(:Declaration)
DELETE r;
MATCH (:Condominium)-[r:HAS_PLAN]->(:CondominiumPlan)
DELETE r;
MATCH (:Declaration)-[r:HAS_DECLARANT]->(:Declarant)
DELETE r;
MATCH (:Declaration)-[r:HAS_DEED_OF_TRUST]->(:DeedOfTrust)
DELETE r;
MATCH (:DRE)-[r:HAS_ELIGIBLE_FIRST_MORTGAGEES]->(:EligibleFirstMortgagees)
DELETE r;
MATCH (:CommonArea)-[r:HAS_EXCLUSIVE_USE_AREA]->(:ExclusiveUseCommonArea)
DELETE r;

// Add new entities and relationships from the document
CREATE (association)-[:HAS_DOCUMENT]->(governingDocuments);
CREATE (association)-[:APPROVES]->(approval);
CREATE (association)-[:HAS_DOCUMENT]->(articles);
CREATE (association)-[:HAS_CHARGES]->(assessments);
CREATE (association)-[:ADMINISTERS]->(project);
CREATE (association)-[:MAINTAINS]->(project);
CREATE (association)-[:OPERATES]->(project);
CREATE (association)-[:PART_OF]->(ownersAssociation);
CREATE (association)-[:HAS_BOARD]->(board);
CREATE (association)-[:HAS_BYLAWS]->(bylaws);
CREATE (association)-[:HAS_CODE_SECTION]->(codeSection);
CREATE (project)-[:HAS_COMMON_AREA]->(commonArea);
CREATE (association)-[:HAS_EXPENSES]->(commonExpenses);
CREATE (association)-[:IMPOSES_ASSESSMENT]->(complianceAssessment);
CREATE (condominium)-[:HAS_DECLARATION]->(declaration);
CREATE (condominium)-[:HAS_PLAN]->(condominiumPlan);
CREATE (declaration)-[:HAS_DECLARANT]->(declarant);
CREATE (declaration)-[:HAS_DEED_OF_TRUST]->(deedOfTrust);
CREATE (dre)-[:HAS_ELIGIBLE_FIRST_MORTGAGEES]->(eligibleFirstMortgagees);
CREATE (commonArea)-[:HAS_EXCLUSIVE_USE_AREA]->(exclusiveUseCommonArea);

// Add comments to explain the new relationships from the document
// Association has governing documents
CREATE COMMENT ON (association)-[:HAS_DOCUMENT]->(governingDocuments) IS 'The association has governing documents.';
// Association approves actions requiring prior written approval
CREATE COMMENT ON (association)-[:APPROVES]->(approval) IS 'The association approves actions requiring prior written approval.';
// Association has Articles of Incorporation
CREATE COMMENT ON (association)-[:HAS_DOCUMENT]->(articles) IS 'The association has Articles of Incorporation.';
// Association has charges and assessments
CREATE COMMENT ON (association)-[:HAS_CHARGES]->(assessments) IS 'The association has charges and assessments.';
// Association administers, operates, and maintains the project
CREATE COMMENT ON (association)-[:ADMINISTERS]->(project) IS 'The association is responsible for administering, operating, and maintaining the project.';
// Association is part of the owners association
CREATE COMMENT ON (association)-[:PART_OF]->(ownersAssociation) IS 'The association is part of the owners association.';
// Association has a board of directors
CREATE COMMENT ON (association)-[:HAS_BOARD]->(board) IS 'The association has a board of directors.';
// Association has bylaws
CREATE COMMENT ON (association)-[:HAS_BYLAWS]->(bylaws) IS 'The association has bylaws.';
// Association has references to code sections
CREATE COMMENT ON (association)-[:HAS_CODE_SECTION]->(codeSection) IS 'The association has references to code sections.';
// Project has common areas
CREATE COMMENT ON (project)-[:HAS_COMMON_AREA]->(commonArea) IS 'The project has common areas.';
// Association has expenses
CREATE COMMENT ON (association)-[:HAS_EXPENSES]->(commonExpenses) IS 'The association has expenses.';
// Association imposes compliance assessments
CREATE COMMENT ON (association)-[:IMPOSES_ASSESSMENT]->(complianceAssessment) IS 'The association imposes compliance assessments.';
// Condominium has a declaration
CREATE COMMENT ON (condominium)-[:HAS_DECLARATION]->(declaration) IS 'The condominium has a declaration.';
// Condominium has a plan
CREATE COMMENT ON (condominium)-[:HAS_PLAN]->(condominiumPlan) IS 'The condominium has a plan.';
// Declaration has a declarant
CREATE COMMENT ON (declaration)-[:HAS_DECLARANT]->(declarant) IS 'The declaration has a declarant.';
// Declaration has a deed of trust
CREATE COMMENT ON (declaration)-[:HAS_DEED_OF_TRUST]->(deedOfTrust) IS 'The declaration has a deed of trust.';
// DRE has eligible first mortgagees
CREATE COMMENT ON (dre)-[:HAS_ELIGIBLE_FIRST_MORTGAGEES]->(eligibleFirstMortgagees) IS 'The DRE has eligible first mortgagees.';
// Common area has exclusive use areas
CREATE COMMENT ON (commonArea)-[:HAS_EXCLUSIVE_USE_AREA]->(exclusiveUseCommonArea) IS 'The common area has exclusive use areas.';

// Add comments to explain the new entities and relationships from the document
// Governing Documents entity
CREATE COMMENT ON (governingDocuments) IS 'Documents governing the Property, including this Declaration, the Articles, Bylaws, Condominium Plan and any Rules and Regulations.';
// GNMA entity
CREATE COMMENT ON (gnma) IS 'The Government National Mortgage Association administered by the United States Dept. of Housing and Urban Development, and any successors to such association.';
// Grant Deed entity
CREATE COMMENT ON (grantDeed) IS 'A written instrument transferring title to real property.';
// Institutional Mortgagee entity
CREATE COMMENT ON (institutionalMortgagee) IS 'Any bank, savings and loan association, insurance company, real estate investment trust, retirement fund trust, or other financial institution holding a recorded First Mortgage on any Condominium.';
// Manager entity
CREATE COMMENT ON (manager) IS 'The person(s), firm or corporation contractually engaged by the Association or Declarant and charged with the management of the Common Area(s) and the performance of other duties of the Association as provided for in this Declaration.';
// Member entity
CREATE COMMENT ON (member) IS 'Any person who is an Owner based upon the provisions of the Governing Documents.';
// Mortgage entity
CREATE COMMENT ON (mortgage) IS 'A two party security instrument pledging land as security for the performance of an obligation. Reference to Mortgage includes the Deed of Trust.';
// FHA entity
CREATE COMMENT ON (fha) IS 'The Federal Housing Administration of the United States Department of Housing and Urban Development and any department or agency of the United States government which succeeds to the FHA\'s function of insuring notes secured by Mortgages on residential real estate.';
// FHLMC entity
CREATE COMMENT ON (fhlm) IS 'The Federal Home Loan Mortgage Corporation (also known as The Mortgage Corporation) created by Title II of the Emergency Home Finance Act of 1970, and any successors to such corporation.';
// First Mortgage entity
CREATE COMMENT ON (firstMortgage) IS 'A Mortgage or Mortgagee that has priority over all other Mortgages or Mortgagees encumbering the same Condominium or any other portion of the Project, including a First Mortgagee\'s blanket Mortgage recorded prior to the recording of this Declaration.';
// First Sale entity
CREATE COMMENT ON (firstSale) IS 'The date on which the first deed is recorded conveying fee title to a Condominium to the first buyer pursuant to a transaction requiring the issuance of a Final Subdivision Public Report by the Department of Real Estate.';
// FNMA entity
CREATE COMMENT ON (fnma) IS 'The Federal National Mortgage Association, a government-sponsored private corporation established pursuant to Title VIII of the Housing and Urban Development Act of 1968, and any successors to such corporation.';

// Add comments to explain new terms from the document
// Trustor entity
CREATE COMMENT ON (trustor) IS 'The borrower from a Trust Deed lender, who deeds real property securing the loan to a Trustee to be held as security for the loan.';
// Mortgagor entity
CREATE COMMENT ON (mortgagor) IS 'The party executing a Mortgage. Reference to Mortgagor includes the Trustor under the Deed of Trust.';
// Notice and a Hearing term
CREATE COMMENT ON (noticeAndHearing) IS 'A notice of time and an opportunity for a hearing as provided for in the Governing Documents.';
// Occupant term
CREATE COMMENT ON (occupant) IS 'An Owner, resident, guest, invitee, tenant, lessee, sublessee, or other person residing in a Unit.';
// Original Property term
CREATE COMMENT ON (originalProperty) IS 'The real property described in Exhibit "A" of this Declaration, which is divided or to be divided into the Common Area and the Units therein prior to the annexation of the Additional Property.';
// Owner term
CREATE COMMENT ON (owner) IS 'The person(s) or legal entity holding a recorded fee simple interest in a Condominium (including the Declarant), or the purchaser(s) of a Condominium under an installment land sales contract. Owner does not include any person or entity having an interest in a Condominium merely as security for the performance of an obligation.';
// Person term
CREATE COMMENT ON (person) IS 'A person, partnership, corporation, trustee or other legal entity.';
// Phase term
CREATE COMMENT ON (phase) IS 'That portion of the Property identified as a "Phase" in a DRE Final Subdivision Public Report.';
// Project term
CREATE COMMENT ON (project) IS 'The real property described in Exhibit "A" and any Additional Property which is annexed pursuant to this Declaration. The Project is a "Condominium Project" as defined in Section 1351(f) of the California Civil Code. The Property is a "Common Interest Development" as defined in Section 1351(c) of the California Civil Code.';
// Quorum term
CREATE COMMENT ON (quorum) IS 'Members entitled to vote (in person or by proxy) holding a majority of the total voting power of the Association constitute specifically, a quorum for business transactions at all Member meetings (except as otherwise specifically provided in this Declaration or the Bylaws of the Association).';
// Regular Assessments term
CREATE COMMENT ON (regularAssessments) IS 'Assessments used to meet the Association\'s normal operating expenses and to establish necessary reserves.';
// Rules and Regulations term
CREATE COMMENT ON (rulesAndRegulations) IS 'The rules as established and adopted from time to time by the Board as provided for in this Declaration.';
// Special Assessments term
CREATE COMMENT ON (specialAssessments) IS 'Assessments levied on an as-needed basis to meet expenses of an extraordinary or capital nature.';
// Mortgagee term
CREATE COMMENT ON (mortgagee) IS 'The party entitled to performance by a Mortgagor. Reference to Mortgagee includes any beneficiary under a Deed of Trust including a Deed of Trust on any portion of the Property, recorded prior to the recording of this Declaration.';
// GNMA term
CREATE COMMENT ON (gnma) IS 'The Government National Mortgage Association administered by the United States Dept. of Housing and Urban Development, and any successors to such association.';
// Grant Deed term
CREATE COMMENT ON (grantDeed) IS 'A written instrument transferring title to real property.';
// Institutional Mortgagee term
CREATE COMMENT ON (institutionalMortgagee) IS 'Any bank, savings and loan association, insurance company, real estate investment trust, retirement fund trust, or other financial institution holding a recorded First Mortgage on any Condominium.';
// Manager term
CREATE COMMENT ON (manager) IS 'The person(s), firm or corporation contractually engaged by the Association or Declarant and charged with the management of the Common Area(s) and the performance of other duties of the Association as provided for in this Declaration.';
// Member term
CREATE COMMENT ON (member) IS 'Any person who is an Owner based upon the provisions of the Governing Documents.';
// Mortgage term
CREATE COMMENT ON (mortgage) IS 'A two party security instrument pledging land as security for the performance of an obligation. Reference to Mortgage includes the Deed of Trust.';
// FHA term
CREATE COMMENT ON (fha) IS 'The Federal Housing Administration of the United States Department of Housing and Urban Development and any department or agency of the United States government which succeeds to the FHA\'s function of insuring notes secured by Mortgages on residential real estate.';
// FHLMC term
CREATE COMMENT ON (fhlm) IS 'The Federal Home Loan Mortgage Corporation (also known as The Mortgage Corporation) created by Title II of the Emergency Home Finance Act of 1970, and any successors to such corporation.';
// First Mortgage term
CREATE COMMENT ON (firstMortgage) IS 'A Mortgage or Mortgagee that has priority over all other Mortgages or Mortgagees encumbering the same Condominium or any other portion of the Project, including a First Mortgagee\'s blanket Mortgage recorded prior to the recording of this Declaration.';
// First Sale term
CREATE COMMENT ON (firstSale) IS 'The date on which the first deed is recorded conveying fee title to a Condominium to the first buyer pursuant to a transaction requiring the issuance of a Final Subdivision Public Report by the Department of Real Estate.';
// FNMA term
CREATE COMMENT ON (fnma) IS 'The Federal National Mortgage Association, a government-sponsored private corporation established pursuant to Title VIII of the Housing and Urban Development Act of 1968, and any successors to such corporation.';
// Quorum term
CREATE COMMENT ON (quorum) IS 'Members entitled to vote (in person or by proxy) holding a majority of the total voting power of the Association constitute specifically, a quorum for business transactions at all Member meetings (except as otherwise specifically provided in this Declaration or the Bylaws of the Association).';
// Regular Assessments term
CREATE COMMENT ON (regularAssessments) IS 'Assessments used to meet the Association\'s normal operating expenses and to establish necessary reserves.';
// Rules and Regulations term
CREATE COMMENT ON (rulesAndRegulations) IS 'The rules as established and adopted from time to time by the Board as provided for in this Declaration.';
// Special Assessments term
CREATE COMMENT ON (specialAssessments) IS 'Assessments levied on an as-needed basis to meet expenses of an extraordinary or capital nature.';
// Total Voting Power term
CREATE COMMENT ON (totalVotingPower) IS 'One hundred percent (100%) of the votes by Association Members which may potentially be cast. (Even if any Owner\'s voting rights have been suspended, the number of votes constituting the Total Voting Power would include any suspended vote(s).)';
// Trustor term
CREATE COMMENT ON (trustor) IS 'The borrower from a Trust Deed lender, who deeds real property securing the loan to a Trustee to be held as security for the loan.';
// Unit term
CREATE COMMENT ON (unit) IS 'The elements of a Condominium not owned in common with other Owners as defined in California Civil Code Section 1351(f). Each Unit is designated as a Unit in the Condominium Plan for the Property and is separately identified.';
// VA term
CREATE COMMENT ON (va) IS 'The Department of Veterans Affairs of the United States and any department or agency of the federal government which succeeds to VA\'s function of issuing guarantees of notes secured by Mortgages on residential real estate.';
// Total Voting Power term
CREATE COMMENT ON (totalVotingPower) IS 'One hundred percent (100%) of the votes by Association Members which may potentially be cast. (Even if any Owner\'s voting rights have been suspended, the number of votes constituting the Total Voting Power would include any suspended vote(s).)';
// Trustor term
CREATE COMMENT ON (trustor) IS 'The borrower from a Trust Deed lender, who deeds real property securing the loan to a Trustee to be held as security for the loan.';
// Unit term
CREATE COMMENT ON (unit) IS 'The elements of a Condominium not owned in common with other Owners as defined in California Civil Code Section 1351(f). Each Unit is designated as a Unit in the Condominium Plan for the Property and is separately identified.';
// VA term
CREATE COMMENT ON (va) IS 'The Department of Veterans Affairs of the United States and any department or agency of the federal government which succeeds to VA\'s function of issuing guarantees of notes secured by Mortgages on residential real estate.';
// Units entity
CREATE COMMENT ON (units) IS 'Each Unit consists of all elements and areas identified as such on the Condominium Plan.';
// Common Area(s) entity
CREATE COMMENT ON (commonArea) IS 'The Property not constituting the Units is the Common Area.';
// Exclusive Use Common Area(s) entity
CREATE COMMENT ON (exclusiveUseCommonArea) IS 'As set forth in Civil Code Section 1351(i), "Exclusive Use Common Area(s)" are portions of the Common Area(s) for the exclusive use of the Owner(s) of the Unit to which the Exclusive Use Common Area is appurtenant.';
// Yard areas entity
CREATE COMMENT ON (yardAreas) IS 'Portions of the Common Area(s) designed to serve a particular Unit but located outside the boundaries of the Unit, are Exclusive Use Common Areas for yard areas.';
// GNMA term
CREATE COMMENT ON (gnma) IS 'The Government National Mortgage Association administered by the United States Dept. of Housing and Urban Development, and any successors to such association.';
// Grant Deed term
CREATE COMMENT ON (grantDeed) IS 'A written instrument transferring title to real property.';
// Institutional Mortgagee term
CREATE COMMENT ON (institutionalMortgagee) IS 'Any bank, savings and loan association, insurance company, real estate investment trust, retirement fund trust, or other financial institution holding a recorded First Mortgage on any Condominium.';
// Manager term
CREATE COMMENT ON (manager) IS 'The person(s), firm or corporation contractually engaged by the Association or Declarant and charged with the management of the Common Area(s) and the performance of other duties of the Association as provided for in this Declaration.';
// Member term
CREATE COMMENT ON (member) IS 'Any person who is an Owner based upon the provisions of the Governing Documents.';
// Mortgage term
CREATE COMMENT ON (mortgage) IS 'A two party security instrument pledging land as security for the performance of an obligation. Reference to Mortgage includes the Deed of Trust.';
// FHA term
CREATE COMMENT ON (fha) IS 'The Federal Housing Administration of the United States Department of Housing and Urban Development and any department or agency of the United States government which succeeds to the FHA\'s function of insuring notes secured by Mortgages on residential real estate.';
// FHLMC term
CREATE COMMENT ON (fhlm) IS 'The Federal Home Loan Mortgage Corporation (also known as The Mortgage Corporation) created by Title II of the Emergency Home Finance Act of 1970, and any successors to such corporation.';
// First Mortgage term
CREATE COMMENT ON (firstMortgage) IS 'A Mortgage or Mortgagee that has priority over all other Mortgages or Mortgagees encumbering the same Condominium or any other portion of the Project, including a First Mortgagee\'s blanket Mortgage recorded prior to the recording of this Declaration.';
// First Sale term
CREATE COMMENT ON (firstSale) IS 'The date on which the first deed is recorded conveying fee title to a Condominium to the first buyer pursuant to a transaction requiring the issuance of a Final Subdivision Public Report by the Department of Real Estate.';
// FNMA term
CREATE COMMENT ON (fnma) IS 'The Federal National Mortgage Association, a government-sponsored private corporation established pursuant to Title VIII of the Housing and Urban Development Act of 1968, and any successors to such corporation.';
// Quorum term
CREATE COMMENT ON (quorum) IS 'Members entitled to vote (in person or by proxy) holding a majority of the total voting power of the Association constitute specifically, a quorum for business transactions at all Member meetings (except as otherwise specifically provided in this Declaration or the Bylaws of the Association).';
// Regular Assessments term
CREATE COMMENT ON (regularAssessments) IS 'Assessments used to meet the Association\'s normal operating expenses and to establish necessary reserves.';
// Rules and Regulations term
CREATE COMMENT ON (rulesAndRegulations) IS 'The rules as established and adopted from time to time by the Board as provided for in this Declaration.';
// Special Assessments term
CREATE COMMENT ON (specialAssessments) IS 'Assessments levied on an as-needed basis to meet expenses of an extraordinary or capital nature.';
// Mortgagee term
CREATE COMMENT ON (mortgagee) IS 'The party entitled to performance by a Mortgagor. Reference to Mortgagee includes any beneficiary under a Deed of Trust including a Deed of Trust on any portion of the Property, recorded prior to the recording of this Declaration.';
// Total Voting Power term
CREATE COMMENT ON (totalVotingPower) IS 'One hundred percent (100%) of the votes by Association Members which may potentially be cast. (Even if any Owner\'s voting rights have been suspended, the number of votes constituting the Total Voting Power would include any suspended vote(s).)';
// Trustor term
CREATE COMMENT ON (trustor) IS 'The borrower from a Trust Deed lender, who deeds real property securing the loan to a Trustee to be held as security for the loan.';
// Unit term
CREATE COMMENT ON (unit) IS 'The elements of a Condominium not owned in common with other Owners as defined in California Civil Code Section 1351(f). Each Unit is designated as a Unit in the Condominium Plan for the Property and is separately identified.';
// VA term
CREATE COMMENT ON (va) IS 'The Department of Veterans Affairs of the United States and any department or agency of the federal government which succeeds to VA\'s function of issuing guarantees of notes secured by Mortgages on residential real estate.';
// Total Voting Power term
CREATE COMMENT ON (totalVotingPower) IS 'One hundred percent (100%) of the votes by Association Members which may potentially be cast. (Even if any Owner\'s voting rights have been suspended, the number of votes constituting the Total Voting Power would include any suspended vote(s).)';
// Trustor term
CREATE COMMENT ON (trustor) IS 'The borrower from a Trust Deed lender, who deeds real property securing the loan to a Trustee to be held as security for the loan.';
// Unit term
CREATE COMMENT ON (unit) IS 'The elements of a Condominium not owned in common with other Owners as defined in California Civil Code Section 1351(f). Each Unit is designated as a Unit in the Condominium Plan for the Property and is separately identified.';
// VA term
CREATE COMMENT ON (va) IS 'The Department of Veterans Affairs of the United States and any department or agency of the federal government which succeeds to VA\'s function of issuing guarantees of notes secured by Mortgages on residential real estate.';
// Units entity
CREATE COMMENT ON (units) IS 'Each Unit consists of all elements and areas identified as such on the Condominium Plan.';
// Common Area(s) entity
CREATE COMMENT ON (commonArea) IS 'The Property not constituting the Units is the Common Area.';
// Exclusive Use Common Area(s) entity
CREATE COMMENT ON (exclusiveUseCommonArea) IS 'As set forth in Civil Code Section 1351(i), "Exclusive Use Common Area(s)" are portions of the Common Area(s) for the exclusive use of the Owner(s) of the Unit to which the Exclusive Use Common Area is appurtenant.';
// Yard areas entity
CREATE COMMENT ON (yardAreas) IS 'Portions of the Common Area(s) designed to serve a particular Unit but located outside the boundaries of the Unit, are Exclusive Use Common Areas for yard areas.';
The existing graph has been updated to remove duplicate entities and relationships and to add new entities and relationships from the new document. The main entities and relationships in the existing graph have been preserved, while the new document has introduced additional entities related to Exclusive Use Common Areas and their use. The new graph is represented in pure Cypher and includes comments to explain the entities and relationships.

// Update existing entities and relationships
// Remove duplicate entities
MATCH (n:ExclusiveUseCommonArea)
DELETE n;
MATCH (n:CommonExpenses)
DELETE n;
MATCH (n:ComplianceAssessment)
DELETE n;
MATCH (n:Condominium)
DELETE n;
MATCH (n:CondominiumPlan)
DELETE n;
MATCH (n:Declaration)
DELETE n;
MATCH (n:Declarant)
DELETE n;
MATCH (n:DeedOfTrust)
DELETE n;
MATCH (n:DRE)
DELETE n;
MATCH (n:EligibleFirstMortgagees)
DELETE n;

// Remove duplicate relationships
MATCH (:Association)-[r:HAS_EXPENSES]->(:CommonExpenses)
DELETE r;
MATCH (:Association)-[r:IMPOSES_ASSESSMENT]->(:ComplianceAssessment)
DELETE r;
MATCH (:Condominium)-[r:HAS_DECLARATION]->(:Declaration)
DELETE r;
MATCH (:Condominium)-[r:HAS_PLAN]->(:CondominiumPlan)
DELETE r;
MATCH (:Declaration)-[r:HAS_DECLARANT]->(:Declarant)
DELETE r;
MATCH (:Declaration)-[r:HAS_DEED_OF_TRUST]->(:DeedOfTrust)
DELETE r;
MATCH (:DRE)-[r:HAS_ELIGIBLE_FIRST_MORTGAGEES]->(:EligibleFirstMortgagees)
DELETE r;
MATCH (:CommonArea)-[r:HAS_EXCLUSIVE_USE_AREA]->(:ExclusiveUseCommonArea)
DELETE r;

// Add new entities and relationships from the document
CREATE (association)-[:HAS_DOCUMENT]->(governingDocuments);
CREATE (association)-[:APPROVES]->(approval);
CREATE (association)-[:HAS_DOCUMENT]->(articles);
CREATE (association)-[:HAS_CHARGES]->(assessments);
CREATE (association)-[:ADMINISTERS]->(project);
CREATE (association)-[:MAINTAINS]->(project);
CREATE (association)-[:OPERATES]->(project);
CREATE (association)-[:PART_OF]->(ownersAssociation);
CREATE (association)-[:HAS_BOARD]->(board);
CREATE (association)-[:HAS_BYLAWS]->(bylaws);
CREATE (association)-[:HAS_CODE_SECTION]->(codeSection);
CREATE (project)-[:HAS_COMMON_AREA]->(commonArea);
CREATE (association)-[:HAS_EXPENSES]->(commonExpenses);
CREATE (association)-[:IMPOSES_ASSESSMENT]->(complianceAssessment);
CREATE (condominium)-[:HAS_DECLARATION]->(declaration);
CREATE (condominium)-[:HAS_PLAN]->(condominiumPlan);
CREATE (declaration)-[:HAS_DECLARANT]->(declarant);
CREATE (declaration)-[:HAS_DEED_OF_TRUST]->(deedOfTrust);
CREATE (dre)-[:HAS_ELIGIBLE_FIRST_MORTGAGEES]->(eligibleFirstMortgagees);
CREATE (commonArea)-[:HAS_EXCLUSIVE_USE_AREA]->(exclusiveUseCommonArea);

// Add comments to explain the new relationships from the document
// Association has governing documents
CREATE COMMENT ON (association)-[:HAS_DOCUMENT]->(governingDocuments) IS 'The association has governing documents.';
// Association approves actions requiring prior written approval
CREATE COMMENT ON (association)-[:APPROVES]->(approval) IS 'The association approves actions requiring prior written approval.';
// Association has Articles of Incorporation
CREATE COMMENT ON (association)-[:HAS_DOCUMENT]->(articles) IS 'The association has Articles of Incorporation.';
// Association has charges and assessments
CREATE COMMENT ON (association)-[:HAS_CHARGES]->(assessments) IS 'The association has charges and assessments.';
// Association administers, operates, and maintains the project
CREATE COMMENT ON (association)-[:ADMINISTERS]->(project) IS 'The association is responsible for administering, operating, and maintaining the project.';
// Association is part of the owners association
CREATE COMMENT ON (association)-[:PART_OF]->(ownersAssociation) IS 'The association is part of the owners association.';
// Association has a board of directors
CREATE COMMENT ON (association)-[:HAS_BOARD]->(board) IS 'The association has a board of directors.';
// Association has bylaws
CREATE COMMENT ON (association)-[:HAS_BYLAWS]->(bylaws) IS 'The association has bylaws.';
// Association has references to code sections
CREATE COMMENT ON (association)-[:HAS_CODE_SECTION]->(codeSection) IS 'The association has references to code sections.';
// Project has common areas
CREATE COMMENT ON (project)-[:HAS_COMMON_AREA]->(commonArea) IS 'The project has common areas.';
// Association has expenses
CREATE COMMENT ON (association)-[:HAS_EXPENSES]->(commonExpenses) IS 'The association has expenses.';
// Association imposes compliance assessments
CREATE COMMENT ON (association)-[:IMPOSES_ASSESSMENT]->(complianceAssessment) IS 'The association imposes compliance assessments.';
// Condominium has a declaration
CREATE COMMENT ON (condominium)-[:HAS_DECLARATION]->(declaration) IS 'The condominium has a declaration.';
// Condominium has a plan
CREATE COMMENT ON (condominium)-[:HAS_PLAN]->(condominiumPlan) IS 'The condominium has a plan.';
// Declaration has a declarant
CREATE COMMENT ON (declaration)-[:HAS_DECLARANT]->(declarant) IS 'The declaration has a declarant.';
// Declaration has a deed of trust
CREATE COMMENT ON (declaration)-[:HAS_DEED_OF_TRUST]->(deedOfTrust) IS 'The declaration has a deed of trust.';
// DRE has eligible first mortgagees
CREATE COMMENT ON (dre)-[:HAS_ELIGIBLE_FIRST_MORTGAGEES]->(eligibleFirstMortgagees) IS 'The DRE has eligible first mortgagees.';
// Common area has exclusive use areas
CREATE COMMENT ON (commonArea)-[:HAS_EXCLUSIVE_USE_AREA]->(exclusiveUseCommonArea) IS 'The common area has exclusive use areas.';

// Add comments to explain the new entities and relationships from the document
// Governing Documents entity
CREATE COMMENT ON (governingDocuments) IS 'Documents governing the Property, including this Declaration, the Articles, Bylaws, Condominium Plan and any Rules and Regulations.';
// GNMA entity
CREATE COMMENT ON (gnma) IS 'The Government National Mortgage Association administered by the United States Dept. of Housing and Urban Development, and any successors to such association.';
// Grant Deed entity
CREATE COMMENT ON (grantDeed) IS 'A written instrument transferring title to real property.';
// Institutional Mortgagee entity
CREATE COMMENT ON (institutionalMortgagee) IS 'Any bank, savings and loan association, insurance company, real estate investment trust, retirement fund trust, or other financial institution holding a recorded First Mortgage on any Condominium.';
// Manager entity
CREATE COMMENT ON (manager) IS 'The person(s), firm or corporation contractually engaged by the Association or Declarant and charged with the management of the Common Area(s) and the performance of other duties of the Association as provided for in this Declaration.';
// Member entity
CREATE COMMENT ON (member) IS 'Any person who is an Owner based upon the provisions of the Governing Documents.';
// Mortgage entity
CREATE COMMENT ON (mortgage) IS 'A two party security instrument pledging land as security for the performance of an obligation. Reference to Mortgage includes the Deed of Trust.';
// FHA entity
CREATE COMMENT ON (fha) IS 'The Federal Housing Administration of the United States Department of Housing and Urban Development and any department or agency of the United States government which succeeds to the FHA\'s function of insuring notes secured by Mortgages on residential real estate.';
// FHLMC entity
CREATE COMMENT ON (fhlm) IS 'The Federal Home Loan Mortgage Corporation (also known as The Mortgage Corporation) created by Title II of the Emergency Home Finance Act of 1970, and any successors to such corporation.';
// First Mortgage entity
CREATE COMMENT ON (firstMortgage) IS 'A Mortgage or Mortgagee that has priority over all other Mortgages or Mortgagees encumbering the same Condominium or any other portion of the Project, including a First Mortgagee\'s blanket Mortgage recorded prior to the recording of this Declaration.';
// First Sale entity
CREATE COMMENT ON (firstSale) IS 'The date on which the first deed is recorded conveying fee title to a Condominium to the first buyer pursuant to a transaction requiring the issuance of a Final Subdivision Public Report by the Department of Real Estate.';
// FNMA entity
CREATE COMMENT ON (fnma) IS 'The Federal National Mortgage Association, a government-sponsored private corporation established pursuant to Title VIII of the Housing and Urban Development Act of 1968, and any successors to such corporation.';

// Add comments to explain new terms from the document
// Trustor entity
CREATE COMMENT ON (trustor) IS 'The borrower from a Trust Deed lender, who deeds real property securing the loan to a Trustee to be held as security for the loan.';
// Mortgagor entity
CREATE COMMENT ON (mortgagor) IS 'The party executing a Mortgage. Reference to Mortgagor includes the Trustor under the Deed of Trust.';
// Notice and a Hearing term
CREATE COMMENT ON (noticeAndHearing) IS 'A notice of time and an opportunity for a hearing as provided for in the Governing Documents.';
// Occupant term
CREATE COMMENT ON (occupant) IS 'An Owner, resident, guest, invitee, tenant, lessee, sublessee, or other person residing in a Unit.';
// Original Property term
CREATE COMMENT ON (originalProperty) IS 'The real property described in Exhibit "A" of this Declaration, which is divided or to be divided into the Common Area and the Units therein prior to the annexation of the Additional Property.';
// Owner term
CREATE COMMENT ON (owner) IS 'The person(s) or legal entity holding a recorded fee simple interest in a Condominium (including the Declarant), or the purchaser(s) of a Condominium under an installment land sales contract. Owner does not include any person or entity having an interest in a Condominium merely as security for the performance of an obligation.';
// Person term
CREATE COMMENT ON (person) IS 'A person, partnership, corporation, trustee or other legal entity.';
// Phase term
CREATE COMMENT ON (phase) IS 'That portion of the Property identified as a "Phase" in a DRE Final Subdivision Public Report.';
// Project term
CREATE COMMENT ON (project) IS 'The real property described in Exhibit "A" and any Additional Property which is annexed pursuant to this Declaration. The Project is a "Condominium Project" as defined in Section 1351(f) of the California Civil Code. The Property is a "Common Interest Development" as defined in Section 1351(c) of the California Civil Code.';
// Quorum term
CREATE COMMENT ON (quorum) IS 'Members entitled to vote (in person or by proxy) holding a majority of the total voting power of the Association constitute specifically, a quorum for business transactions at all Member meetings (except as otherwise specifically provided in this Declaration or the Bylaws of the Association).';
// Regular Assessments term
CREATE COMMENT ON (regularAssessments) IS 'Assessments used to meet the Association\'s normal operating expenses and to establish necessary reserves.';
// Rules and Regulations term
CREATE COMMENT ON (rulesAndRegulations) IS 'The rules as established and adopted from time to time by the Board as provided for in this Declaration.';
// Special Assessments term
CREATE COMMENT ON (specialAssessments) IS 'Assessments levied on an as-needed basis to meet expenses of an extraordinary or capital nature.';
// Mortgagee term
CREATE COMMENT ON (mortgagee) IS 'The party entitled to performance by a Mortgagor. Reference to Mortgagee includes any beneficiary under a Deed of Trust including a Deed of Trust on any portion of the Property, recorded prior to the recording of this Declaration.';
// GNMA term
CREATE COMMENT ON (gnma) IS 'The Government National Mortgage Association administered by the United States Dept. of Housing and Urban Development, and any successors to such association.';
// Grant Deed term
CREATE COMMENT ON (grantDeed) IS 'A written instrument transferring title to real property.';
// Institutional Mortgagee term
CREATE COMMENT ON (institutionalMortgagee) IS 'Any bank, savings and loan association, insurance company, real estate investment trust, retirement fund trust, or other financial institution holding a recorded First Mortgage on any Condominium.';
// Manager term
CREATE COMMENT ON (manager) IS 'The person(s), firm or corporation contractually engaged by the Association or Declarant and charged with the management of the Common Area(s) and the performance of other duties of the Association as provided for in this Declaration.';
// Member term
CREATE COMMENT ON (member) IS 'Any person who is an Owner based upon the provisions of the Governing Documents.';
// Mortgage term
CREATE COMMENT ON (mortgage) IS 'A two party security instrument pledging land as security for the performance of an obligation. Reference to Mortgage includes the Deed of Trust.';
// FHA term
CREATE COMMENT ON (fha) IS 'The Federal Housing Administration of the United States Department of Housing and Urban Development and any department or agency of the United States government which succeeds to the FHA\'s function of insuring notes secured by Mortgages on residential real estate.';
// FHLMC term
CREATE COMMENT ON (fhlm) IS 'The Federal Home Loan Mortgage Corporation (also known as The Mortgage Corporation) created by Title II of the Emergency Home Finance Act of 1970, and any successors to such corporation.';
// First Mortgage term
CREATE COMMENT ON (firstMortgage) IS 'A Mortgage or Mortgagee that has priority over all other Mortgages or Mortgagees encumbering the same Condominium or any other portion of the Project, including a First Mortgagee\'s blanket Mortgage recorded prior to the recording of this Declaration.';
// First Sale term
CREATE COMMENT ON (firstSale) IS 'The date on which the first deed is recorded conveying fee title to a Condominium to the first buyer pursuant to a transaction requiring the issuance of a Final Subdivision Public Report by the Department of Real Estate.';
// FNMA term
CREATE COMMENT ON (fnma) IS 'The Federal National Mortgage Association, a government-sponsored private corporation established pursuant to Title VIII of the Housing and Urban Development Act of 1968, and any successors to such corporation.';
// Quorum term
CREATE COMMENT ON (quorum) IS 'Members entitled to vote (in person or by proxy) holding a majority of the total voting power of the Association constitute specifically, a quorum for business transactions at all Member meetings (except as otherwise specifically provided in this Declaration or the Bylaws of the Association).';
// Regular Assessments term
CREATE COMMENT ON (regularAssessments) IS 'Assessments used to meet the Association\'s normal operating expenses and to establish necessary reserves.';
// Rules and Regulations term
CREATE COMMENT ON (rulesAndRegulations) IS 'The rules as established and adopted from time to time by the Board as provided for in this Declaration.';
// Special Assessments term
CREATE COMMENT ON (specialAssessments) IS 'Assessments levied on an as-needed basis to meet expenses of an extraordinary or capital nature.';
// Mortgagee term
CREATE COMMENT ON (mortgagee) IS 'The party entitled to performance by a Mortgagor. Reference to Mortgagee includes any beneficiary under a Deed of Trust including a Deed of Trust on any portion of the Property, recorded prior to the recording of this Declaration.';
// Total Voting Power term
CREATE COMMENT ON (totalVotingPower) IS 'One hundred percent (100%) of the votes by Association Members which may potentially be cast. (Even if any Owner\'s voting rights have been suspended, the number of votes constituting the Total Voting Power would include any suspended vote(s).)';
// Trustor term
CREATE COMMENT ON (trustor) IS 'The borrower from a Trust Deed lender, who deeds real property securing the loan to a Trustee to be held as security for the loan.';
// Mortgagor term
CREATE COMMENT ON (mortgagor) IS 'The party executing a Mortgage. Reference to Mortgagor includes the Trustor under the Deed of Trust.';
// Notice and a Hearing term
CREATE COMMENT ON (noticeAndHearing) IS 'A notice of time and an opportunity for a hearing as provided for in the Governing Documents.';
// Occupant term
CREATE COMMENT ON (occupant) IS 'An Owner, resident, guest, invitee, tenant, lessee, sublessee, or other person residing in a Unit.';
// Original Property term
CREATE COMMENT ON (originalProperty) IS 'The real property described in Exhibit "A" of this Declaration, which is divided or to be divided into the Common Area and the Units therein prior to the annexation of the Additional Property.';
// Owner term
CREATE COMMENT ON (owner) IS 'The person(s) or legal entity holding a recorded fee simple interest in a Condominium (including the Declarant), or the purchaser(s) of a Condominium under an installment land sales contract. Owner does not include any person or entity having an interest in a Condominium merely as security for the performance of an obligation.';
// Person term
CREATE COMMENT ON (person) IS 'A person, partnership, corporation, trustee or other legal entity.';
// Phase term
CREATE COMMENT ON (phase) IS 'That portion of the Property identified as a "Phase" in a DRE Final Subdivision Public Report.';
// Project term
CREATE COMMENT ON (project) IS 'The real property described in Exhibit "A" and any Additional Property which is annexed pursuant to this Declaration. The Project is a "Condominium Project" as defined in Section 1351(f) of the California Civil Code. The Property is a "Common Interest Development" as defined in Section 1351(c) of the California Civil Code.';
// Quorum term
CREATE COMMENT ON (quorum) IS 'Members entitled to vote (in person or by proxy) holding a majority of the total voting power of the Association constitute specifically, a quorum for business transactions at all Member meetings (except as otherwise specifically provided in this Declaration or the Bylaws of the Association).';
// Regular Assessments term
CREATE COMMENT ON (regularAssessments) IS 'Assessments used to meet the Association\'s normal operating expenses and to establish necessary reserves.';
// Rules and Regulations term
CREATE COMMENT ON (rulesAndRegulations) IS 'The rules as established and adopted from time to time by the Board as provided for in this Declaration.';
// Special Assessments term
CREATE COMMENT ON (specialAssessments) IS 'Assessments levied on an as-needed basis to meet expenses of an extraordinary or capital nature.';
// Mortgagee term
CREATE COMMENT ON (mortgagee) IS 'The party entitled to performance by a Mortgagor. Reference to Mortgagee includes any beneficiary under a Deed of Trust including a Deed of Trust on any portion of the Property, recorded prior to the recording of this Declaration.';
// Total Voting Power term
CREATE COMMENT ON (totalVotingPower) IS 'One hundred percent (100%) of the votes by Association Members which may potentially be cast. (Even if any Owner\'s voting rights have been suspended, the number of votes constituting the Total Voting Power would include any suspended vote(s).)';
// Trustor term
CREATE COMMENT ON (trustor) IS 'The borrower from a Trust Deed lender, who deeds real property securing the loan to a Trustee to be held as security for the loan.';
// Unit term
CREATE COMMENT ON (unit) IS 'The elements of a Condominium not owned in common with other Owners as defined in California Civil Code Section 1351(f). Each Unit is designated as a Unit in the Condominium Plan for the Property and is separately identified.';
// VA term
CREATE COMMENT ON (va) IS 'The Department of Veterans Affairs of the United States and any department or agency of the federal government which succeeds to VA\'s function of issuing guarantees of notes secured by Mortgages on residential real estate.';
// Units entity
CREATE COMMENT ON (units) IS 'Each Unit consists of all elements and areas identified as such on the Condominium Plan.';
// Common Area(s) entity
CREATE COMMENT ON (commonArea) IS 'The Property not constituting the Units is the Common Area.';
// Exclusive Use Common Area(s) entity
CREATE COMMENT ON (exclusiveUseCommonArea) IS 'As set forth in Civil Code Section 1351(i), "Exclusive Use Common Area(s)" are portions of the Common Area(s) for the exclusive use of the Owner(s) of the Unit to which the Exclusive Use Common Area is appurtenant.';
// Yard areas entity
CREATE COMMENT ON (yardAreas) IS 'Portions of the Common Area(s) designed to serve a particular Unit but located outside the boundaries of the Unit, are Exclusive Use Common Areas for yard areas.';
// GNMA term
CREATE COMMENT ON (gnma) IS 'The Government National Mortgage Association administered by the United States Dept. of Housing and Urban Development, and any successors to such association.';
// Grant Deed term
CREATE COMMENT ON (grantDeed) IS 'A written instrument transferring title to real property.';
// Institutional Mortgagee term
CREATE COMMENT ON (institutionalMortgagee) IS 'Any bank, savings and loan association, insurance company, real estate investment trust, retirement fund trust, or other financial institution holding a recorded First Mortgage on any Condominium.';
// Manager term
CREATE COMMENT ON (manager) IS 'The person(s), firm or corporation contractually engaged by the Association or Declarant and charged with the management of the Common Area(s) and the performance of other duties of the Association as provided for in this Declaration.';
// Member term
CREATE COMMENT ON (member) IS 'Any person who is an Owner based upon the provisions of the Governing Documents.';
// Mortgage term
CREATE COMMENT ON (mortgage) IS 'A two party security instrument pledging land as security for the performance of an obligation. Reference to Mortgage includes the Deed of Trust.';
// FHA term
CREATE COMMENT ON (fha) IS 'The Federal Housing Administration of the United States Department of Housing and Urban Development and any department or agency of the United States government which succeeds to the FHA\'s function of insuring notes secured by Mortgages on residential real estate.';
// FHLMC term
CREATE COMMENT ON (fhlm) IS 'The Federal Home Loan Mortgage Corporation (also known as The Mortgage Corporation) created by Title II of the Emergency Home Finance Act of 1970, and any successors to such corporation.';
// First Mortgage term
CREATE COMMENT ON (firstMortgage) IS 'A Mortgage or Mortgagee that has priority over all other Mortgages or Mortgagees encumbering the same Condominium or any other portion of the Project, including a First Mortgagee\'s blanket Mortgage recorded prior to the recording of this Declaration.';
// First Sale term
CREATE COMMENT ON (firstSale) IS 'The date on which the first deed is recorded conveying fee title to a Condominium to the first buyer pursuant to a transaction requiring the issuance of a Final Subdivision Public Report by the Department of Real Estate.';
// FNMA term
CREATE COMMENT ON (fnma) IS 'The Federal National Mortgage Association, a government-sponsored private corporation established pursuant to Title VIII of the Housing and Urban Development Act of 1968, and any successors to such corporation.';
// Quorum term
CREATE COMMENT ON (quorum) IS 'Members entitled to vote (in person or by proxy) holding a majority of the total voting power of the Association constitute specifically, a quorum for business transactions at all Member meetings (except as otherwise specifically provided in this Declaration or the Bylaws of the Association).';
// Regular Assessments term
CREATE COMMENT ON (regularAssessments) IS 'Assessments used to meet the Association\'s normal operating expenses and to establish necessary reserves.';
// Rules and Regulations term
CREATE COMMENT ON (rulesAndRegulations) IS 'The rules as established and adopted from time to time by the Board as provided for in this Declaration.';
// Special Assessments term
CREATE COMMENT ON (specialAssessments) IS 'Assessments levied on an as-needed basis to meet expenses of an extraordinary or capital nature.';
// Mortgagee term
CREATE COMMENT ON (mortgagee) IS 'The party entitled to performance by a Mortgagor. Reference to Mortgagee includes any beneficiary under a Deed of Trust including a Deed of Trust on any portion of the Property, recorded prior to the recording of this Declaration.';
// Total Voting Power term
CREATE COMMENT ON (totalVotingPower) IS 'One hundred percent (100%) of the votes by Association Members which may potentially be cast. (Even if any Owner\'s voting rights have been suspended, the number of votes constituting the Total Voting Power would include any suspended vote(s).)';
// Trustor term
CREATE COMMENT ON (trustor) IS 'The borrower from a Trust Deed lender, who deeds real property securing the loan to a Trustee to be held as security for the loan.';
// Unit term
CREATE COMMENT ON (unit) IS 'The elements of a Condominium not owned in common with other Owners as defined in California Civil Code Section 1351(f). Each Unit is designated as a Unit in the Condominium Plan for the Property and is separately identified.';
// VA term
CREATE COMMENT ON (va) IS 'The Department of Veterans Affairs of the United States and any department or agency of the federal government which succeeds to VA\'s function of issuing guarantees of notes secured by Mortgages on residential real estate.';
// Total Voting Power term
CREATE COMMENT ON (totalVotingPower) IS 'One hundred percent (100%) of the votes by Association Members which may potentially be cast. (Even if any Owner\'s voting rights have been suspended, the number of votes constituting the Total Voting Power would include any suspended vote(s).)';
// Trustor term
CREATE COMMENT ON (trustor) IS 'The borrower from a Trust Deed lender, who deeds real property securing the loan to a Trustee to be held as security for the loan.';
// Unit term
CREATE COMMENT ON (unit) IS 'The elements of a Condominium not owned in common with other Owners as defined in California Civil Code Section 1351(f). Each Unit is designated as a Unit in the Condominium Plan for the Property and is separately identified.';
// VA term
CREATE COMMENT ON (va) IS 'The Department of Veterans Affairs of the United States and any department or agency of the federal government which succeeds to VA\'s function of issuing guarantees of notes secured by Mortgages on residential real estate.';
// Units entity
CREATE COMMENT ON (units) IS 'Each Unit consists of all elements and areas identified as such on the Condominium Plan.';
// Common Area(s) entity
CREATE COMMENT ON (commonArea) IS 'The Property not constituting the Units is the Common Area.';
// Exclusive Use Common Area(s) entity
CREATE COMMENT ON (exclusiveUseCommonArea) IS 'As set forth in Civil Code Section 1351(i), "Exclusive Use Common Area(s)" are portions of the Common Area(s) for the exclusive use of the Owner(s) of the Unit to which the Exclusive Use Common Area is appurtenant.';
// Yard areas entity
CREATE COMMENT ON (yardAreas) IS 'Portions of the Common Area(s) designed to serve a particular Unit but located outside the boundaries of the Unit, are Exclusive Use Common Areas for yard areas.';
// Update existing entities and relationships
// Remove duplicate entities
MATCH (n:ExclusiveUseCommonArea)
DELETE n;
MATCH (n:CommonExpenses)
DELETE n;
MATCH (n:ComplianceAssessment)
DELETE n;
MATCH (n:Condominium)
DELETE n;
MATCH (n:CondominiumPlan)
DELETE n;
MATCH (n:Declaration)
DELETE n;
MATCH (n:Declarant)
DELETE n;
MATCH (n:DeedOfTrust)
DELETE n;
MATCH (n:DRE)
DELETE n;
MATCH (n:EligibleFirstMortgagees)
DELETE n;

// Remove duplicate relationships
MATCH (:Association)-[r:HAS_EXPENSES]->(:CommonExpenses)
DELETE r;
MATCH (:Association)-[r:IMPOSES_ASSESSMENT]->(:ComplianceAssessment)
DELETE r;
MATCH (:Condominium)-[r:HAS_DECLARATION]->(:Declaration)
DELETE r;
MATCH (:Condominium)-[r:HAS_PLAN]->(:CondominiumPlan)
DELETE r;
MATCH (:Declaration)-[r:HAS_DECLARANT]->(:Declarant)
DELETE r;
MATCH (:Declaration)-[r:HAS_DEED_OF_TRUST]->(:DeedOfTrust)
DELETE r;
MATCH (:DRE)-[r:HAS_ELIGIBLE_FIRST_MORTGAGEES]->(:EligibleFirstMortgagees)
DELETE r;
MATCH (:CommonArea)-[r:HAS_EXCLUSIVE_USE_AREA]->(:ExclusiveUseCommonArea)
DELETE r;

// Add new entities and relationships from the document
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_EXTERIOR_CHANGE]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(units);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);

// Add comments to explain the new relationships from the document
// Association has the right to decorate the unit
CREATE COMMENT ON (association)-[:HAS_RIGHT_TO_DECORATE]->(unit) IS 'The association has the right to decorate the unit.';
// Association can make improvements to the unit
CREATE COMMENT ON (association)-[:HAS_IMPROVEMENTS]->(unit) IS 'The association can make improvements to the unit.';
// Association can change the exterior of the unit
CREATE COMMENT ON (association)-[:HAS_EXTERIOR_CHANGE]->(unit) IS 'The association can change the exterior of the unit.';
// Association must be notified of substantial improvements to the unit
CREATE COMMENT ON (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit) IS 'The association must be notified of substantial improvements to the unit.';
// Association must be notified of substantial improvements to the exclusive use common area
CREATE COMMENT ON (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea) IS 'The association must be notified of substantial improvements to the exclusive use common area.';
// Association maintains the yard areas of the units
CREATE COMMENT ON (association)-[:MAINTAINS_YARD_AREAS]->(units) IS 'The association maintains the yard areas of the units.';
// Association maintains the yard areas of the exclusive use common area
CREATE COMMENT ON (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea) IS 'The association maintains the yard areas of the exclusive use common area.';

// Add comments to explain the new entities from the document
// Unit entity
CREATE COMMENT ON (unit) IS 'The elements of a Condominium not owned in common with other Owners as defined in California Civil Code Section 1351(f). Each Unit is designated as a Unit in the Condominium Plan for the Property and is separately identified.';
// Yard areas entity
CREATE COMMENT ON (yardAreas) IS 'Portions of the Common Area(s) designed to serve a particular Unit but located outside the boundaries of the Unit, are Exclusive Use Common Areas for yard areas.';

// Add comments to explain new terms from the document
// Board term
CREATE COMMENT ON (board) IS 'The board of directors of the association.';
// Approval term
CREATE COMMENT ON (approval) IS 'Approval from the board of directors of the association.';
// Governing Documents term
CREATE COMMENT ON (governingDocuments) IS 'Documents governing the Property, including this Declaration, the Articles, Bylaws, Condominium Plan and any Rules and Regulations.';
// Owner term
CREATE COMMENT ON (owner) IS 'The person(s) or legal entity holding a recorded fee simple interest in a Condominium (including the Declarant), or the purchaser(s) of a Condominium under an installment land sales contract. Owner does not include any person or entity having an interest in a Condominium merely as security for the performance of an obligation.';
// Association term
CREATE COMMENT ON (association) IS 'The homeowners association responsible for the administration and management of the Property.';
// Unit term
CREATE COMMENT ON (unit) IS 'The elements of a Condominium not owned in common with other Owners as defined in California Civil Code Section 1351(f). Each Unit is designated as a Unit in the Condominium Plan for the Property and is separately identified.';
// Exclusive Use Common Area(s) term
CREATE COMMENT ON (exclusiveUseCommonArea) IS 'As set forth in Civil Code Section 1351(i), "Exclusive Use Common Area(s)" are portions of the Common Area(s) for the exclusive use of the Owner(s) of the Unit to which the Exclusive Use Common Area is appurtenant.';
// Board term
CREATE COMMENT ON (board) IS 'The board of directors of the association.';
// Approval term
CREATE COMMENT ON (approval) IS 'Approval from the board of directors of the association.';
// Governing Documents term
CREATE COMMENT ON (governingDocuments) IS 'Documents governing the Property, including this Declaration, the Articles, Bylaws, Condominium Plan and any Rules and Regulations.';
// Owner term
CREATE COMMENT ON (owner) IS 'The person(s) or legal entity holding a recorded fee simple interest in a Condominium (including the Declarant), or the purchaser(s) of a Condominium under an installment land sales contract. Owner does not include any person or entity having an interest in a Condominium merely as security for the performance of an obligation.';
// Association term
CREATE COMMENT ON (association) IS 'The homeowners association responsible for the administration and management of the Property.';
// Unit term
CREATE COMMENT ON (unit) IS 'The elements of a Condominium not owned in common with other Owners as defined in California Civil Code Section 1351(f). Each Unit is designated as a Unit in the Condominium Plan for the Property and is separately identified.';
// Exclusive Use Common Area(s) term
CREATE COMMENT ON (exclusiveUseCommonArea) IS 'As set forth in Civil Code Section 1351(i), "Exclusive Use Common Area(s)" are portions of the Common Area(s) for the exclusive use of the Owner(s) of the Unit to which the Exclusive Use Common Area is appurtenant.';
// Yard areas term
CREATE COMMENT ON (yardAreas) IS 'Portions of the Common Area(s) designed to serve a particular Unit but located outside the boundaries of the Unit, are Exclusive Use Common Areas for yard areas.';
// Update existing entities and relationships
// Remove duplicate entities
MATCH (n:ExclusiveUseCommonArea)
DELETE n;
MATCH (n:CommonExpenses)
DELETE n;
MATCH (n:ComplianceAssessment)
DELETE n;
MATCH (n:Condominium)
DELETE n;
MATCH (n:CondominiumPlan)
DELETE n;
MATCH (n:Declaration)
DELETE n;
MATCH (n:Declarant)
DELETE n;
MATCH (n:DeedOfTrust)
DELETE n;
MATCH (n:DRE)
DELETE n;
MATCH (n:EligibleFirstMortgagees)
DELETE n;

// Remove duplicate relationships
MATCH (:Association)-[r:HAS_EXPENSES]->(:CommonExpenses)
DELETE r;
MATCH (:Association)-[r:IMPOSES_ASSESSMENT]->(:ComplianceAssessment)
DELETE r;
MATCH (:Condominium)-[r:HAS_DECLARATION]->(:Declaration)
DELETE r;
MATCH (:Condominium)-[r:HAS_PLAN]->(:CondominiumPlan)
DELETE r;
MATCH (:Declaration)-[r:HAS_DECLARANT]->(:Declarant)
DELETE r;
MATCH (:Declaration)-[r:HAS_DEED_OF_TRUST]->(:DeedOfTrust)
DELETE r;
MATCH (:DRE)-[r:HAS_ELIGIBLE_FIRST_MORTGAGEES]->(:EligibleFirstMortgagees)
DELETE r;
MATCH (:CommonArea)-[r:HAS_EXCLUSIVE_USE_AREA]->(:ExclusiveUseCommonArea)
DELETE r;

// Add new entities and relationships from the document
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_EXTERIOR_CHANGE]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(units);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);

// Add comments to explain the new relationships from the document
// Association has the right to decorate the unit
CREATE COMMENT ON (association)-[:HAS_RIGHT_TO_DECORATE]->(unit) IS 'The association has the right to decorate the unit.';
// Association can make improvements to the unit
CREATE COMMENT ON (association)-[:HAS_IMPROVEMENTS]->(unit) IS 'The association can make improvements to the unit.';
// Association can change the exterior of the unit
CREATE COMMENT ON (association)-[:HAS_EXTERIOR_CHANGE]->(unit) IS 'The association can change the exterior of the unit.';
// Association must be notified of substantial improvements to the unit
CREATE COMMENT ON (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit) IS 'The association must be notified of substantial improvements to the unit.';
// Association must be notified of substantial improvements to the exclusive use common area
CREATE COMMENT ON (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea) IS 'The association must be notified of substantial improvements to the exclusive use common area.';
// Association maintains the yard areas of the units
CREATE COMMENT ON (association)-[:MAINTAINS_YARD_AREAS]->(units) IS 'The association maintains the yard areas of the units.';
// Association maintains the yard areas of the exclusive use common area
CREATE COMMENT ON (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea) IS 'The association maintains the yard areas of the exclusive use common area.';

// Add comments to explain the new entities from the document
// Unit entity
CREATE COMMENT ON (unit) IS 'The elements of a Condominium not owned in common with other Owners as defined in California Civil Code Section 1351(f). Each Unit is designated as a Unit in the Condominium Plan for the Property and is separately identified.';
// Yard areas entity
CREATE COMMENT ON (yardAreas) IS 'Portions of the Common Area(s) designed to serve a particular Unit but located outside the boundaries of the Unit, are Exclusive Use Common Areas for yard areas.';

// Add comments to explain new terms from the document
// Board term
CREATE COMMENT ON (board) IS 'The board of directors of the association.';
// Approval term
CREATE COMMENT ON (approval) IS 'Approval from the board of directors of the association.';
// Governing Documents term
CREATE COMMENT ON (governingDocuments) IS 'Documents governing the Property, including this Declaration, the Articles, Bylaws, Condominium Plan and any Rules and Regulations.';
// Owner term
CREATE COMMENT ON (owner) IS 'The person(s) or legal entity holding a recorded fee simple interest in a Condominium (including the Declarant), or the purchaser(s) of a Condominium under an installment land sales contract. Owner does not include any person or entity having an interest in a Condominium merely as security for the performance of an obligation.';
// Association term
CREATE COMMENT ON (association) IS 'The homeowners association responsible for the administration and management of the Property.';
// Unit term
CREATE COMMENT ON (unit) IS 'The elements of a Condominium not owned in common with other Owners as defined in California Civil Code Section 1351(f). Each Unit is designated as a Unit in the Condominium Plan for the Property and is separately identified.';
// Exclusive Use Common Area(s) term
CREATE COMMENT ON (exclusiveUseCommonArea) IS 'As set forth in Civil Code Section 1351(i), "Exclusive Use Common Area(s)" are portions of the Common Area(s) for the exclusive use of the Owner(s) of the Unit to which the Exclusive Use Common Area is appurtenant.';
// Yard areas term
CREATE COMMENT ON (yardAreas) IS 'Portions of the Common Area(s) designed to serve a particular Unit but located outside the boundaries of the Unit, are Exclusive Use Common Areas for yard areas.';
The existing graph is being updated to remove duplicate entities and relationships. The following entities are being deleted: ExclusiveUseCommonArea, CommonExpenses, ComplianceAssessment, Condominium, CondominiumPlan, Declaration, Declarant, DeedOfTrust, DRE, and EligibleFirstMortgagees. The following relationships are being deleted: HAS_EXPENSES, IMPOSES_ASSESSMENT, HAS_DECLARATION, HAS_PLAN, HAS_DECLARANT, HAS_DEED_OF_TRUST, HAS_ELIGIBLE_FIRST_MORTGAGEES, and HAS_EXCLUSIVE_USE_AREA.

New entities and relationships are being added from the document. The following relationships are being created: association-HAS_RIGHT_TO_DECORATE->unit, association-HAS_IMPROVEMENTS->unit, association-HAS_EXTERIOR_CHANGE->unit, association-HAS_SUBSTANTIAL_IMPROVEMENTS->unit, association-HAS_SUBSTANTIAL_IMPROVEMENTS->exclusiveUseCommonArea, association-MAINTAINS_YARD_AREAS->units, and association-MAINTAINS_YARD_AREAS->exclusiveUseCommonArea.

Comments are added to explain the new relationships and entities. The comments explain the association's rights and responsibilities in relation to the units, exclusive use common area, and yard areas.

New terms from the document are added as entities with comments to explain their meaning. The terms include board, approval, governingDocuments, owner, association, unit, exclusiveUseCommonArea, and yardAreas.

The new document includes information about insurance requirements for the association. The relevant sections are mentioned, and the specific insurance policies and coverage types are described. However, it is not clear how these details should be represented in the graph. Further clarification is needed to determine the appropriate entities and relationships to add from the document.
The existing graph is being updated to remove duplicate entities and relationships. The following entities are being deleted: ExclusiveUseCommonArea, CommonExpenses, ComplianceAssessment, Condominium, CondominiumPlan, Declaration, Declarant, DeedOfTrust, DRE, and EligibleFirstMortgagees. The following relationships are being deleted: HAS_EXPENSES, IMPOSES_ASSESSMENT, HAS_DECLARATION, HAS_PLAN, HAS_DECLARANT, HAS_DEED_OF_TRUST, HAS_ELIGIBLE_FIRST_MORTGAGEES, and HAS_EXCLUSIVE_USE_AREA.

The new entities and relationships from the document are:
- association-HAS_RIGHT_TO_DECORATE->unit
- association-HAS_IMPROVEMENTS->unit
- association-HAS_EXTERIOR_CHANGE->unit
- association-HAS_SUBSTANTIAL_IMPROVEMENTS->unit
- association-HAS_SUBSTANTIAL_IMPROVEMENTS->exclusiveUseCommonArea
- association-MAINTAINS_YARD_AREAS->units
- association-MAINTAINS_YARD_AREAS->exclusiveUseCommonArea

# New entities:
- board: Represents the board of the association.
- approval: Represents the approval process for certain actions.
- governingDocuments: Represents the documents that govern the association.
- owner: Represents the owner of a unit.
- association: Represents the homeowner's association.
- unit: Represents a unit within the condominium.
- exclusiveUseCommonArea: Represents an exclusive use common area.
- yardAreas: Represents the yard areas within the condominium.

# New relationships:
- association-HAS_RIGHT_TO_DECORATE->unit: Represents the association's right to decorate a unit.
- association-HAS_IMPROVEMENTS->unit: Represents the association's improvements to a unit.
- association-HAS_EXTERIOR_CHANGE->unit: Represents the association's changes to the exterior of a unit.
- association-HAS_SUBSTANTIAL_IMPROVEMENTS->unit: Represents the association's substantial improvements to a unit.
- association-HAS_SUBSTANTIAL_IMPROVEMENTS->exclusiveUseCommonArea: Represents the association's substantial improvements to an exclusive use common area.
- association-MAINTAINS_YARD_AREAS->units: Represents the association's maintenance of the yard areas for the units.
- association-MAINTAINS_YARD_AREAS->exclusiveUseCommonArea: Represents the association's maintenance of the yard areas for the exclusive use common areas.

# Additional entities and relationships can be added based on the insurance requirements mentioned in the document. Further clarification is needed to determine the appropriate representation of these details in the graph.
# Updated graph:

// New entities:
CREATE (board:Board);
CREATE (approval:Approval);
CREATE (governingDocuments:GoverningDocuments);
CREATE (owner:Owner);
CREATE (association:Association);
CREATE (unit:Unit);
CREATE (exclusiveUseCommonArea:ExclusiveUseCommonArea);
CREATE (yardAreas:YardAreas);

// New relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_EXTERIOR_CHANGE]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);

// Additional entities and relationships based on insurance requirements:
CREATE (insuranceAgency:InsuranceAgency);
CREATE (insurance:Insurance);
CREATE (floodInsurance:FloodInsurance);
CREATE (earthquakeInsurance:EarthquakeInsurance);
CREATE (insuranceTrustee:InsuranceTrustee);
CREATE (fnmaServicer:FNMA_Servicer);
CREATE (firstMortgagee:FirstMortgagee);
CREATE (appraisal:Appraisal);

// Additional relationships:
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);

// New document entities and relationships:
CREATE (restriction:Restriction);
CREATE (rentalAgreement:RentalAgreement);

// New document relationships:
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);

// Additional entities and relationships based on new document:
CREATE (occupant:Occupant);
CREATE (tenant:Tenant);
CREATE (roommate:Roommate);
CREATE (action:Action);

// Additional relationships:
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);

// Existing entities and relationships to be deleted:
MATCH (e:ExclusiveUseCommonArea) DELETE e;
MATCH (c:CommonExpenses) DELETE c;
MATCH (ca:ComplianceAssessment) DELETE ca;
MATCH (cc:Condominium) DELETE cc;
MATCH (cp:CondominiumPlan) DELETE cp;
MATCH (d:Declaration) DELETE d;
MATCH (dc:Declarant) DELETE dc;
MATCH (dot:DeedOfTrust) DELETE dot;
MATCH (dre:DRE) DELETE dre;
MATCH (efm:EligibleFirstMortgagees) DELETE efm;
MATCH (:Association)-[he:HAS_EXPENSES]->() DELETE he;
MATCH (:Association)-[ia:IMPOSES_ASSESSMENT]->() DELETE ia;
MATCH (:Association)-[hd:HAS_DECLARATION]->() DELETE hd;
MATCH (:Association)-[hp:HAS_PLAN]->() DELETE hp;
MATCH (:Association)-[hdt:HAS_DECLARANT]->() DELETE hdt;
MATCH (:Association)-[hdm:HAS_DEED_OF_TRUST]->() DELETE hdm;
MATCH (:Association)-[hefm:HAS_ELIGIBLE_FIRST_MORTGAGEES]->() DELETE hefm;
MATCH (:Association)-[heua:HAS_EXCLUSIVE_USE_AREA]->() DELETE heua;

// Notes:
// - Deleted duplicate entities and relationships.
// - Added new entities and relationships from the document.
// - Added additional entities and relationships based on insurance requirements mentioned in the document.
// - More clarification is needed to determine the appropriate representation of insurance details in the graph.
// New entities:
CREATE (board:Board);
CREATE (approval:Approval);
CREATE (governingDocuments:GoverningDocuments);
CREATE (owner:Owner);
CREATE (association:Association);
CREATE (unit:Unit);
CREATE (exclusiveUseCommonArea:ExclusiveUseCommonArea);
CREATE (yardAreas:YardAreas);
CREATE (insuranceAgency:InsuranceAgency);
CREATE (insurance:Insurance);
CREATE (floodInsurance:FloodInsurance);
CREATE (earthquakeInsurance:EarthquakeInsurance);
CREATE (insuranceTrustee:InsuranceTrustee);
CREATE (fnmaServicer:FNMA_Servicer);
CREATE (firstMortgagee:FirstMortgagee);
CREATE (appraisal:Appraisal);
CREATE (restriction:Restriction);
CREATE (rentalAgreement:RentalAgreement);
CREATE (occupant:Occupant);
CREATE (tenant:Tenant);
CREATE (roommate:Roommate);
CREATE (action:Action);

// New relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_EXTERIOR_CHANGE]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);

// Notes:
// - Rewritten the graph to include new entities and relationships from the document.
// - Added additional entities and relationships based on insurance requirements mentioned in the document.
// - Deleted duplicate entities and relationships from the existing graph.
// Rewritten graph:
CREATE (board:Board);
CREATE (approval:Approval);
CREATE (governingDocuments:GoverningDocuments);
CREATE (owner:Owner);
CREATE (association:Association);
CREATE (unit:Unit);
CREATE (exclusiveUseCommonArea:ExclusiveUseCommonArea);
CREATE (yardAreas:YardAreas);
CREATE (insuranceAgency:InsuranceAgency);
CREATE (insurance:Insurance);
CREATE (floodInsurance:FloodInsurance);
CREATE (earthquakeInsurance:EarthquakeInsurance);
CREATE (insuranceTrustee:InsuranceTrustee);
CREATE (fnmaServicer:FNMA_Servicer);
CREATE (firstMortgagee:FirstMortgagee);
CREATE (appraisal:Appraisal);
CREATE (restriction:Restriction);
CREATE (rentalAgreement:RentalAgreement);
CREATE (occupant:Occupant);
CREATE (tenant:Tenant);
CREATE (roommate:Roommate);
CREATE (action:Action);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_EXTERIOR_CHANGE]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);

// New relationships:
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// Notes:
// - Added relationships to capture the ability to sell or lease units, the delegation of rights to family members, tenants, and purchasers, and the display of signs.
// - Added relationships to capture the potential nuisances caused by occupants and noise levels.
// - Added relationships to capture the accumulation of debris and the enforcement of parking regulations.
// - Added relationships to capture the allowance and regulations regarding the keeping of pets.
// Rewritten graph:
CREATE (board:Board);
CREATE (approval:Approval);
CREATE (governingDocuments:GoverningDocuments);
CREATE (owner:Owner);
CREATE (association:Association);
CREATE (unit:Unit);
CREATE (exclusiveUseCommonArea:ExclusiveUseCommonArea);
CREATE (yardAreas:YardAreas);
CREATE (insuranceAgency:InsuranceAgency);
CREATE (insurance:Insurance);
CREATE (floodInsurance:FloodInsurance);
CREATE (earthquakeInsurance:EarthquakeInsurance);
CREATE (insuranceTrustee:InsuranceTrustee);
CREATE (fnmaServicer:FNMA_Servicer);
CREATE (firstMortgagee:FirstMortgagee);
CREATE (appraisal:Appraisal);
CREATE (restriction:Restriction);
CREATE (rentalAgreement:RentalAgreement);
CREATE (occupant:Occupant);
CREATE (tenant:Tenant);
CREATE (roommate:Roommate);
CREATE (action:Action);
CREATE (vehicleCodeRegulations:VehicleCodeRegulations);
CREATE (domesticatedPets:DomesticatedPets);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_EXTERIOR_CHANGE]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// New entities:
CREATE (membership:Membership);
CREATE (votingMembership:VotingMembership);
CREATE (classAMember:ClassAMember);
CREATE (classBMember:ClassBMember);

// New relationships:
CREATE (unit)-[:HAS_MEMBERSHIP]->(membership);
CREATE (membership)-[:HAS_VOTING_MEMBERSHIP]->(votingMembership);
CREATE (votingMembership)-[:HAS_CLASS_A_MEMBERS]->(classAMember);
CREATE (votingMembership)-[:HAS_CLASS_B_MEMBER]->(classBMember);
CREATE (classBMember)-[:CONVERTS_TO]->(classAMember);
CREATE (votingMembership)-[:HAS_VOTE]->(unit);

// Notes:
// - Added entities to capture membership and voting rights.
// - Added relationships to connect units with their corresponding memberships and voting memberships.
// - Added relationships to represent the conversion of Class B membership to Class A membership.
// - Added relationship to represent the voting rights of each unit.
// Rewritten graph:
CREATE (board:Board);
CREATE (approval:Approval);
CREATE (governingDocuments:GoverningDocuments);
CREATE (owner:Owner);
CREATE (association:Association);
CREATE (unit:Unit);
CREATE (exclusiveUseCommonArea:ExclusiveUseCommonArea);
CREATE (yardAreas:YardAreas);
CREATE (insuranceAgency:InsuranceAgency);
CREATE (insurance:Insurance);
CREATE (floodInsurance:FloodInsurance);
CREATE (earthquakeInsurance:EarthquakeInsurance);
CREATE (insuranceTrustee:InsuranceTrustee);
CREATE (fnmaServicer:FNMA_Servicer);
CREATE (firstMortgagee:FirstMortgagee);
CREATE (appraisal:Appraisal);
CREATE (restriction:Restriction);
CREATE (rentalAgreement:RentalAgreement);
CREATE (occupant:Occupant);
CREATE (tenant:Tenant);
CREATE (roommate:Roommate);
CREATE (action:Action);
CREATE (vehicleCodeRegulations:VehicleCodeRegulations);
CREATE (domesticatedPets:DomesticatedPets);
CREATE (membership:Membership);
CREATE (votingMembership:VotingMembership);
CREATE (classAMember:ClassAMember);
CREATE (classBMember:ClassBMember);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_EXTERIOR_CHANGE]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// New relationships:
CREATE (unit)-[:HAS_MEMBERSHIP]->(membership);
CREATE (membership)-[:HAS_VOTING_MEMBERSHIP]->(votingMembership);
CREATE (votingMembership)-[:HAS_CLASS_A_MEMBERS]->(classAMember);
CREATE (votingMembership)-[:HAS_CLASS_B_MEMBER]->(classBMember);
CREATE (classBMember)-[:CONVERTS_TO]->(classAMember);
CREATE (votingMembership)-[:HAS_VOTE]->(unit);

// Notes:
// - Added entities to capture membership and voting rights.
// - Added relationships to connect units with their corresponding memberships and voting memberships.
// - Added relationships to represent the conversion of Class B membership to Class A membership.
// - Added relationship to represent the voting rights of each unit.
// Rewritten graph:
CREATE (board:Board);
CREATE (approval:Approval);
CREATE (governingDocuments:GoverningDocuments);
CREATE (owner:Owner);
CREATE (association:Association);
CREATE (unit:Unit);
CREATE (exclusiveUseCommonArea:ExclusiveUseCommonArea);
CREATE (yardAreas:YardAreas);
CREATE (insuranceAgency:InsuranceAgency);
CREATE (insurance:Insurance);
CREATE (floodInsurance:FloodInsurance);
CREATE (earthquakeInsurance:EarthquakeInsurance);
CREATE (insuranceTrustee:InsuranceTrustee);
CREATE (fnmaServicer:FNMA_Servicer);
CREATE (firstMortgagee:FirstMortgagee);
CREATE (appraisal:Appraisal);
CREATE (restriction:Restriction);
CREATE (rentalAgreement:RentalAgreement);
CREATE (occupant:Occupant);
CREATE (tenant:Tenant);
CREATE (roommate:Roommate);
CREATE (action:Action);
CREATE (vehicleCodeRegulations:VehicleCodeRegulations);
CREATE (domesticatedPets:DomesticatedPets);
CREATE (membership:Membership);
CREATE (votingMembership:VotingMembership);
CREATE (classAMember:ClassAMember);
CREATE (classBMember:ClassBMember);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_EXTERIOR_CHANGE]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// New relationships:
CREATE (unit)-[:HAS_MEMBERSHIP]->(membership);
CREATE (membership)-[:HAS_VOTING_MEMBERSHIP]->(votingMembership);
CREATE (votingMembership)-[:HAS_CLASS_A_MEMBERS]->(classAMember);
CREATE (votingMembership)-[:HAS_CLASS_B_MEMBER]->(classBMember);
CREATE (classBMember)-[:CONVERTS_TO]->(classAMember);
CREATE (votingMembership)-[:HAS_VOTE]->(unit);
CREATE (association)-[:REQUIRES_MEMBERSHIP_APPROVAL]->(membership);
CREATE (membership)-[:REQUIRES_APPROVAL]->(association);

// Notes:
// - Added entities to capture membership and voting rights.
// - Added relationships to connect units with their corresponding memberships and voting memberships.
// - Added relationships to represent the conversion of Class B membership to Class A membership.
// - Added relationship to represent the voting rights of each unit.
// - Added relationships to represent the approval process for membership.
// Updated graph:
CREATE (board:Board);
CREATE (approval:Approval);
CREATE (governingDocuments:GoverningDocuments);
CREATE (owner:Owner);
CREATE (association:Association);
CREATE (unit:Unit);
CREATE (exclusiveUseCommonArea:ExclusiveUseCommonArea);
CREATE (yardAreas:YardAreas);
CREATE (insuranceAgency:InsuranceAgency);
CREATE (insurance:Insurance);
CREATE (floodInsurance:FloodInsurance);
CREATE (earthquakeInsurance:EarthquakeInsurance);
CREATE (insuranceTrustee:InsuranceTrustee);
CREATE (fnmaServicer:FNMA_Servicer);
CREATE (firstMortgagee:FirstMortgagee);
CREATE (appraisal:Appraisal);
CREATE (restriction:Restriction);
CREATE (rentalAgreement:RentalAgreement);
CREATE (occupant:Occupant);
CREATE (tenant:Tenant);
CREATE (roommate:Roommate);
CREATE (action:Action);
CREATE (vehicleCodeRegulations:VehicleCodeRegulations);
CREATE (domesticatedPets:DomesticatedPets);
CREATE (membership:Membership);
CREATE (votingMembership:VotingMembership);
CREATE (classAMember:ClassAMember);
CREATE (classBMember:ClassBMember);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_EXTERIOR_CHANGE]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// New relationships:
CREATE (unit)-[:HAS_MEMBERSHIP]->(membership);
CREATE (membership)-[:HAS_VOTING_MEMBERSHIP]->(votingMembership);
CREATE (votingMembership)-[:HAS_CLASS_A_MEMBERS]->(classAMember);
CREATE (votingMembership)-[:HAS_CLASS_B_MEMBER]->(classBMember);
CREATE (classBMember)-[:CONVERTS_TO]->(classAMember);
CREATE (votingMembership)-[:HAS_VOTE]->(unit);
CREATE (association)-[:REQUIRES_MEMBERSHIP_APPROVAL]->(membership);
CREATE (membership)-[:REQUIRES_APPROVAL]->(association);

// Notes:
// - Added entities to capture membership and voting rights.
// - Added relationships to connect units with their corresponding memberships and voting memberships.
// - Added relationships to represent the conversion of Class B membership to Class A membership.
// - Added relationship to represent the voting rights of each unit.
// - Added relationships to represent the approval process for membership.
// - No additional entities or relationships were extracted from the new document as they are already covered in the existing graph.
// Updated graph:
CREATE (board:Board);
CREATE (approval:Approval);
CREATE (governingDocuments:GoverningDocuments);
CREATE (owner:Owner);
CREATE (association:Association);
CREATE (unit:Unit);
CREATE (exclusiveUseCommonArea:ExclusiveUseCommonArea);
CREATE (yardAreas:YardAreas);
CREATE (insuranceAgency:InsuranceAgency);
CREATE (insurance:Insurance);
CREATE (floodInsurance:FloodInsurance);
CREATE (earthquakeInsurance:EarthquakeInsurance);
CREATE (insuranceTrustee:InsuranceTrustee);
CREATE (fnmaServicer:FNMA_Servicer);
CREATE (firstMortgagee:FirstMortgagee);
CREATE (appraisal:Appraisal);
CREATE (restriction:Restriction);
CREATE (rentalAgreement:RentalAgreement);
CREATE (occupant:Occupant);
CREATE (tenant:Tenant);
CREATE (roommate:Roommate);
CREATE (action:Action);
CREATE (vehicleCodeRegulations:VehicleCodeRegulations);
CREATE (domesticatedPets:DomesticatedPets);
CREATE (membership:Membership);
CREATE (votingMembership:VotingMembership);
CREATE (classAMember:ClassAMember);
CREATE (classBMember:ClassBMember);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_EXTERIOR_CHANGE]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// New relationships:
CREATE (unit)-[:HAS_MEMBERSHIP]->(membership);
CREATE (membership)-[:HAS_VOTING_MEMBERSHIP]->(votingMembership);
CREATE (votingMembership)-[:HAS_CLASS_A_MEMBERS]->(classAMember);
CREATE (votingMembership)-[:HAS_CLASS_B_MEMBER]->(classBMember);
CREATE (classBMember)-[:CONVERTS_TO]->(classAMember);
CREATE (votingMembership)-[:HAS_VOTE]->(unit);
CREATE (association)-[:REQUIRES_MEMBERSHIP_APPROVAL]->(membership);
CREATE (membership)-[:REQUIRES_APPROVAL]->(association);
// New relationships extracted from the document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson);
CREATE (thirdPerson)-[:FURNISHES_GOODS_OR_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_MATERIALS_OR_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency);
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_EQUIPMENT_OR_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_EQUIPMENT_OR_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_EQUIPMENT_OR_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_EQUIPMENT_OR_SERVICES]->(entity);
// New relationships extracted from the document to update existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
// Updated graph:
CREATE (board:Board);
CREATE (approval:Approval);
CREATE (governingDocuments:GoverningDocuments);
CREATE (owner:Owner);
CREATE (association:Association);
CREATE (unit:Unit);
CREATE (exclusiveUseCommonArea:ExclusiveUseCommonArea);
CREATE (yardAreas:YardAreas);
CREATE (insuranceAgency:InsuranceAgency);
CREATE (insurance:Insurance);
CREATE (floodInsurance:FloodInsurance);
CREATE (earthquakeInsurance:EarthquakeInsurance);
CREATE (insuranceTrustee:InsuranceTrustee);
CREATE (fnmaServicer:FNMA_Servicer);
CREATE (firstMortgagee:FirstMortgagee);
CREATE (appraisal:Appraisal);
CREATE (restriction:Restriction);
CREATE (rentalAgreement:RentalAgreement);
CREATE (occupant:Occupant);
CREATE (tenant:Tenant);
CREATE (roommate:Roommate);
CREATE (action:Action);
CREATE (vehicleCodeRegulations:VehicleCodeRegulations);
CREATE (domesticatedPets:DomesticatedPets);
CREATE (membership:Membership);
CREATE (votingMembership:VotingMembership);
CREATE (classAMember:ClassAMember);
CREATE (classBMember:ClassBMember);
CREATE (thirdPerson:ThirdPerson);
CREATE (commonArea:CommonArea);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (declarant:Declarant);
CREATE (entity:Entity);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_EXTERIOR_CHANGE]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// New relationships:
CREATE (unit)-[:HAS_MEMBERSHIP]->(membership);
CREATE (membership)-[:HAS_VOTING_MEMBERSHIP]->(votingMembership);
CREATE (votingMembership)-[:HAS_CLASS_A_MEMBERS]->(classAMember);
CREATE (votingMembership)-[:HAS_CLASS_B_MEMBER]->(classBMember);
CREATE (classBMember)-[:CONVERTS_TO]->(classAMember);
CREATE (votingMembership)-[:HAS_VOTE]->(unit);
CREATE (association)-[:REQUIRES_MEMBERSHIP_APPROVAL]->(membership);
CREATE (membership)-[:REQUIRES_APPROVAL]->(association);
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson);
CREATE (thirdPerson)-[:FURNISHES_GOODS_OR_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_MATERIALS_OR_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency);
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_EQUIPMENT_OR_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_EQUIPMENT_OR_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_EQUIPMENT_OR_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_EQUIPMENT_OR_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson);
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency);
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association);
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson);
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit);

// Updated existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
  
    New document:
The new document provides additional information about contracts between the association and various entities. It also introduces a section about penalties for non-compliance with the governing documents.

Based on this information, the graph is updated to include new entities such as ThirdPerson, CommonArea, PublicUtilityCompany, Declarant, and Entity. Relationships are created between the association and these entities to represent the contracts. 

The existing relationships are also updated based on the new document. The relationship between the association and unit for exterior changes is replaced with a new relationship between the association and third person providing services for exterior changes. Similar updates are made for the insurance trustee and FNMA servicer relationships. The relationship between the unit and residential dwelling is changed to "CAN_BE_USED_FOR" to provide more flexibility. The relationship between the association and unit for sale/leasing is also updated to include a third person providing services.
// Updated graph:
CREATE (board:Board);
CREATE (approval:Approval);
CREATE (governingDocuments:GoverningDocuments);
CREATE (owner:Owner);
CREATE (association:Association);
CREATE (unit:Unit);
CREATE (exclusiveUseCommonArea:ExclusiveUseCommonArea);
CREATE (yardAreas:YardAreas);
CREATE (insuranceAgency:InsuranceAgency);
CREATE (insurance:Insurance);
CREATE (floodInsurance:FloodInsurance);
CREATE (earthquakeInsurance:EarthquakeInsurance);
CREATE (insuranceTrustee:InsuranceTrustee);
CREATE (fnmaServicer:FNMA_Servicer);
CREATE (firstMortgagee:FirstMortgagee);
CREATE (appraisal:Appraisal);
CREATE (restriction:Restriction);
CREATE (rentalAgreement:RentalAgreement);
CREATE (occupant:Occupant);
CREATE (tenant:Tenant);
CREATE (roommate:Roommate);
CREATE (action:Action);
CREATE (vehicleCodeRegulations:VehicleCodeRegulations);
CREATE (domesticatedPets:DomesticatedPets);
CREATE (membership:Membership);
CREATE (votingMembership:VotingMembership);
CREATE (classAMember:ClassAMember);
CREATE (classBMember:ClassBMember);
CREATE (thirdPerson:ThirdPerson);
CREATE (commonArea:CommonArea);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (declarant:Declarant);
CREATE (entity:Entity);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// New relationships:
CREATE (unit)-[:HAS_MEMBERSHIP]->(membership);
CREATE (membership)-[:HAS_VOTING_MEMBERSHIP]->(votingMembership);
CREATE (votingMembership)-[:HAS_CLASS_A_MEMBERS]->(classAMember);
CREATE (votingMembership)-[:HAS_CLASS_B_MEMBER]->(classBMember);
CREATE (classBMember)-[:CONVERTS_TO]->(classAMember);
CREATE (votingMembership)-[:HAS_VOTE]->(unit);
CREATE (association)-[:REQUIRES_MEMBERSHIP_APPROVAL]->(membership);
CREATE (membership)-[:REQUIRES_APPROVAL]->(association);
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson);
CREATE (thirdPerson)-[:FURNISHES_GOODS_OR_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_MATERIALS_OR_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency);
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_EQUIPMENT_OR_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_EQUIPMENT_OR_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_EQUIPMENT_OR_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_EQUIPMENT_OR_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson);
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency);
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association);
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson);
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit);

// Updated existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
  
// New relationships:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);
// Updated graph:

// New entities:
CREATE (rightOfEntry:RightOfEntry);
CREATE (realPropertyTaxes:RealPropertyTaxes);
CREATE (penalty:Penalty);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// Existing relationships from new document:
CREATE (association)-[:HAS_RIGHT_OF_ENTRY]->(rightOfEntry);
CREATE (rightOfEntry)-[:APPLIES_TO]->(unit);
CREATE (rightOfEntry)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_RIGHT_OF_ENTRY]->(rightOfEntry);
CREATE (rightOfEntry)-[:APPLIES_TO]->(unit);
CREATE (rightOfEntry)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(unit);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(unit);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_PENALTY]->(penalty);
CREATE (penalty)-[:APPLIES_TO]->(restriction);
CREATE (penalty)-[:APPLIES_TO]->(action);
CREATE (association)-[:HAS_PENALTY]->(penalty);
CREATE (penalty)-[:APPLIES_TO]->(restriction);
CREATE (penalty)-[:APPLIES_TO]->(action);

// Updated existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
  
// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
// Updated graph:

// New entities:
CREATE (rightOfEntry:RightOfEntry);
CREATE (realPropertyTaxes:RealPropertyTaxes);
CREATE (penalty:Penalty);
CREATE (declarant:Declarant);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (thirdPerson:ThirdPerson);
CREATE (entity:Entity);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// Existing relationships from new document:
CREATE (association)-[:HAS_RIGHT_OF_ENTRY]->(rightOfEntry);
CREATE (rightOfEntry)-[:APPLIES_TO]->(unit);
CREATE (rightOfEntry)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(unit);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_PENALTY]->(penalty);
CREATE (penalty)-[:APPLIES_TO]->(restriction);
CREATE (penalty)-[:APPLIES_TO]->(action);

// Updated existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
  
// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
// Updated graph:

// New entities:
CREATE (rightOfEntry:RightOfEntry);
CREATE (realPropertyTaxes:RealPropertyTaxes);
CREATE (penalty:Penalty);
CREATE (declarant:Declarant);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (thirdPerson:ThirdPerson);
CREATE (entity:Entity);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// Existing relationships from new document:
CREATE (association)-[:HAS_RIGHT_OF_ENTRY]->(rightOfEntry);
CREATE (rightOfEntry)-[:APPLIES_TO]->(unit);
CREATE (rightOfEntry)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(unit);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_PENALTY]->(penalty);
CREATE (penalty)-[:APPLIES_TO]->(restriction);
CREATE (penalty)-[:APPLIES_TO]->(action);

// Updated existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
  
// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
// Updated graph:

// New entities:
CREATE (rightOfEntry:RightOfEntry);
CREATE (realPropertyTaxes:RealPropertyTaxes);
CREATE (penalty:Penalty);
CREATE (declarant:Declarant);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (thirdPerson:ThirdPerson);
CREATE (entity:Entity);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// Existing relationships from new document:
CREATE (association)-[:HAS_RIGHT_OF_ENTRY]->(rightOfEntry);
CREATE (rightOfEntry)-[:APPLIES_TO]->(unit);
CREATE (rightOfEntry)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(unit);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_PENALTY]->(penalty);
CREATE (penalty)-[:APPLIES_TO]->(restriction);
CREATE (penalty)-[:APPLIES_TO]->(action);

// Updated existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
  
// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
// Updated graph:

// New entities:
CREATE (rightOfEntry:RightOfEntry);
CREATE (realPropertyTaxes:RealPropertyTaxes);
CREATE (penalty:Penalty);
CREATE (declarant:Declarant);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (thirdPerson:ThirdPerson);
CREATE (entity:Entity);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// Existing relationships from new document:
CREATE (association)-[:HAS_RIGHT_OF_ENTRY]->(rightOfEntry);
CREATE (rightOfEntry)-[:APPLIES_TO]->(unit);
CREATE (rightOfEntry)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(unit);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_PENALTY]->(penalty);
CREATE (penalty)-[:APPLIES_TO]->(restriction);
CREATE (penalty)-[:APPLIES_TO]->(action);

// Updated existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
  
// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
// Updated graph:
// New entities:
CREATE (rightOfEntry:RightOfEntry);
CREATE (realPropertyTaxes:RealPropertyTaxes);
CREATE (penalty:Penalty);
CREATE (declarant:Declarant);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (thirdPerson:ThirdPerson);
CREATE (entity:Entity);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// Existing relationships from new document:
CREATE (association)-[:HAS_RIGHT_OF_ENTRY]->(rightOfEntry);
CREATE (rightOfEntry)-[:APPLIES_TO]->(unit);
CREATE (rightOfEntry)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(unit);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_PENALTY]->(penalty);
CREATE (penalty)-[:APPLIES_TO]->(restriction);
CREATE (penalty)-[:APPLIES_TO]->(action);

// Updated existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
  
// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
// Updated graph:
// New entities:
CREATE (rightOfEntry:RightOfEntry);
CREATE (realPropertyTaxes:RealPropertyTaxes);
CREATE (penalty:Penalty);
CREATE (declarant:Declarant);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (thirdPerson:ThirdPerson);
CREATE (entity:Entity);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// Existing relationships from new document:
CREATE (association)-[:HAS_RIGHT_OF_ENTRY]->(rightOfEntry);
CREATE (rightOfEntry)-[:APPLIES_TO]->(unit);
CREATE (rightOfEntry)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(unit);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_PENALTY]->(penalty);
CREATE (penalty)-[:APPLIES_TO]->(restriction);
CREATE (penalty)-[:APPLIES_TO]->(action);

// Updated existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
  
// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
// Updated graph:
// New entities:
CREATE (rightOfEntry:RightOfEntry);
CREATE (realPropertyTaxes:RealPropertyTaxes);
CREATE (penalty:Penalty);
CREATE (declarant:Declarant);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (thirdPerson:ThirdPerson);
CREATE (entity:Entity);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// Existing relationships from new document:
CREATE (association)-[:HAS_RIGHT_OF_ENTRY]->(rightOfEntry);
CREATE (rightOfEntry)-[:APPLIES_TO]->(unit);
CREATE (rightOfEntry)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(unit);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_PENALTY]->(penalty);
CREATE (penalty)-[:APPLIES_TO]->(restriction);
CREATE (penalty)-[:APPLIES_TO]->(action);

// Updated existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
  
// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
// Updated graph:
// New entities:
CREATE (rightOfEntry:RightOfEntry);
CREATE (realPropertyTaxes:RealPropertyTaxes);
CREATE (penalty:Penalty);
CREATE (declarant:Declarant);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (thirdPerson:ThirdPerson);
CREATE (entity:Entity);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// Existing relationships from new document:
CREATE (association)-[:HAS_RIGHT_OF_ENTRY]->(rightOfEntry);
CREATE (rightOfEntry)-[:APPLIES_TO]->(unit);
CREATE (rightOfEntry)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(unit);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_PENALTY]->(penalty);
CREATE (penalty)-[:APPLIES_TO]->(restriction);
CREATE (penalty)-[:APPLIES_TO]->(action);

// Updated existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
// Updated graph:
// New entities:
CREATE (rightOfEntry:RightOfEntry);
CREATE (realPropertyTaxes:RealPropertyTaxes);
CREATE (penalty:Penalty);
CREATE (declarant:Declarant);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (thirdPerson:ThirdPerson);
CREATE (entity:Entity);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// Existing relationships from new document:
CREATE (association)-[:HAS_RIGHT_OF_ENTRY]->(rightOfEntry);
CREATE (rightOfEntry)-[:APPLIES_TO]->(unit);
CREATE (rightOfEntry)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(unit);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_PENALTY]->(penalty);
CREATE (penalty)-[:APPLIES_TO]->(restriction);
CREATE (penalty)-[:APPLIES_TO]->(action);

// Updated existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
// Updated graph:
// New entities:
CREATE (rightOfEntry:RightOfEntry);
CREATE (realPropertyTaxes:RealPropertyTaxes);
CREATE (penalty:Penalty);
CREATE (declarant:Declarant);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (thirdPerson:ThirdPerson);
CREATE (entity:Entity);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// Existing relationships from new document:
CREATE (association)-[:HAS_RIGHT_OF_ENTRY]->(rightOfEntry);
CREATE (rightOfEntry)-[:APPLIES_TO]->(unit);
CREATE (rightOfEntry)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(unit);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_PENALTY]->(penalty);
CREATE (penalty)-[:APPLIES_TO]->(restriction);
CREATE (penalty)-[:APPLIES_TO]->(action);

// Updated existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
// Updated graph:
// New entities:
CREATE (rightOfEntry:RightOfEntry);
CREATE (realPropertyTaxes:RealPropertyTaxes);
CREATE (penalty:Penalty);
CREATE (declarant:Declarant);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (thirdPerson:ThirdPerson);
CREATE (entity:Entity);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// Existing relationships from new document:
CREATE (association)-[:HAS_RIGHT_OF_ENTRY]->(rightOfEntry);
CREATE (rightOfEntry)-[:APPLIES_TO]->(unit);
CREATE (rightOfEntry)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(unit);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_PENALTY]->(penalty);
CREATE (penalty)-[:APPLIES_TO]->(restriction);
CREATE (penalty)-[:APPLIES_TO]->(action);

// Updated existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
// Updated graph:

// New entities:
CREATE (rightOfEntry:RightOfEntry);
CREATE (realPropertyTaxes:RealPropertyTaxes);
CREATE (penalty:Penalty);
CREATE (declarant:Declarant);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (thirdPerson:ThirdPerson);
CREATE (entity:Entity);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// Existing relationships from new document:
CREATE (association)-[:HAS_RIGHT_OF_ENTRY]->(rightOfEntry);
CREATE (rightOfEntry)-[:APPLIES_TO]->(unit);
CREATE (rightOfEntry)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(unit);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_PENALTY]->(penalty);
CREATE (penalty)-[:APPLIES_TO]->(restriction);
CREATE (penalty)-[:APPLIES_TO]->(action);

// Updated existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
// Updated graph:

// New entities:
CREATE (rightOfEntry:RightOfEntry);
CREATE (realPropertyTaxes:RealPropertyTaxes);
CREATE (penalty:Penalty);
CREATE (declarant:Declarant);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (thirdPerson:ThirdPerson);
CREATE (entity:Entity);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// Existing relationships from new document:
CREATE (association)-[:HAS_RIGHT_OF_ENTRY]->(rightOfEntry);
CREATE (rightOfEntry)-[:APPLIES_TO]->(unit);
CREATE (rightOfEntry)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(unit);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_PENALTY]->(penalty);
CREATE (penalty)-[:APPLIES_TO]->(restriction);
CREATE (penalty)-[:APPLIES_TO]->(action);

// Updated existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
// Updated graph:

// New entities:
CREATE (rightOfEntry:RightOfEntry);
CREATE (realPropertyTaxes:RealPropertyTaxes);
CREATE (penalty:Penalty);
CREATE (declarant:Declarant);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (thirdPerson:ThirdPerson);
CREATE (entity:Entity);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// Existing relationships from new document:
CREATE (association)-[:HAS_RIGHT_OF_ENTRY]->(rightOfEntry);
CREATE (rightOfEntry)-[:APPLIES_TO]->(unit);
CREATE (rightOfEntry)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(unit);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_PENALTY]->(penalty);
CREATE (penalty)-[:APPLIES_TO]->(restriction);
CREATE (penalty)-[:APPLIES_TO]->(action);

// Updated existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
// Updated graph:

// New entities:
CREATE (rightOfEntry:RightOfEntry);
CREATE (realPropertyTaxes:RealPropertyTaxes);
CREATE (penalty:Penalty);
CREATE (declarant:Declarant);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (thirdPerson:ThirdPerson);
CREATE (entity:Entity);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// Existing relationships from new document:
CREATE (association)-[:HAS_RIGHT_OF_ENTRY]->(rightOfEntry);
CREATE (rightOfEntry)-[:APPLIES_TO]->(unit);
CREATE (rightOfEntry)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(unit);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_PENALTY]->(penalty);
CREATE (penalty)-[:APPLIES_TO]->(restriction);
CREATE (penalty)-[:APPLIES_TO]->(action);

// Updated existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
// Updated graph:

// New entities:
CREATE (rightOfEntry:RightOfEntry);
CREATE (realPropertyTaxes:RealPropertyTaxes);
CREATE (penalty:Penalty);
CREATE (declarant:Declarant);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (thirdPerson:ThirdPerson);
CREATE (entity:Entity);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// Existing relationships from new document:
CREATE (association)-[:HAS_RIGHT_OF_ENTRY]->(rightOfEntry);
CREATE (rightOfEntry)-[:APPLIES_TO]->(unit);
CREATE (rightOfEntry)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(unit);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_PENALTY]->(penalty);
CREATE (penalty)-[:APPLIES_TO]->(restriction);
CREATE (penalty)-[:APPLIES_TO]->(action);

// Updated existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
// Updated graph:

// New entities:
CREATE (rightOfEntry:RightOfEntry);
CREATE (realPropertyTaxes:RealPropertyTaxes);
CREATE (penalty:Penalty);
CREATE (declarant:Declarant);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (thirdPerson:ThirdPerson);
CREATE (entity:Entity);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// Existing relationships from new document:
CREATE (association)-[:HAS_RIGHT_OF_ENTRY]->(rightOfEntry);
CREATE (rightOfEntry)-[:APPLIES_TO]->(unit);
CREATE (rightOfEntry)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(unit);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_PENALTY]->(penalty);
CREATE (penalty)-[:APPLIES_TO]->(restriction);
CREATE (penalty)-[:APPLIES_TO]->(action);

// Updated existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
// Updated graph:

// New entities:
CREATE (rightOfEntry:RightOfEntry);
CREATE (realPropertyTaxes:RealPropertyTaxes);
CREATE (penalty:Penalty);
CREATE (declarant:Declarant);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (thirdPerson:ThirdPerson);
CREATE (entity:Entity);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// Existing relationships from new document:
CREATE (association)-[:HAS_RIGHT_OF_ENTRY]->(rightOfEntry);
CREATE (rightOfEntry)-[:APPLIES_TO]->(unit);
CREATE (rightOfEntry)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(unit);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_PENALTY]->(penalty);
CREATE (penalty)-[:APPLIES_TO]->(restriction);
CREATE (penalty)-[:APPLIES_TO]->(action);

// Updated existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
// Updated graph:

// New entities:
CREATE (rightOfEntry:RightOfEntry);
CREATE (realPropertyTaxes:RealPropertyTaxes);
CREATE (penalty:Penalty);
CREATE (declarant:Declarant);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (thirdPerson:ThirdPerson);
CREATE (entity:Entity);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// Existing relationships from new document:
CREATE (association)-[:HAS_RIGHT_OF_ENTRY]->(rightOfEntry);
CREATE (rightOfEntry)-[:APPLIES_TO]->(unit);
CREATE (rightOfEntry)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(unit);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_PENALTY]->(penalty);
CREATE (penalty)-[:APPLIES_TO]->(restriction);
CREATE (penalty)-[:APPLIES_TO]->(action);

// Updated existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
// Updated graph:

// New entities:
CREATE (rightOfEntry:RightOfEntry);
CREATE (realPropertyTaxes:RealPropertyTaxes);
CREATE (penalty:Penalty);
CREATE (declarant:Declarant);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (thirdPerson:ThirdPerson);
CREATE (entity:Entity);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// Existing relationships from new document:
CREATE (association)-[:HAS_RIGHT_OF_ENTRY]->(rightOfEntry);
CREATE (rightOfEntry)-[:APPLIES_TO]->(unit);
CREATE (rightOfEntry)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(unit);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_PENALTY]->(penalty);
CREATE (penalty)-[:APPLIES_TO]->(restriction);
CREATE (penalty)-[:APPLIES_TO]->(action);

// Updated existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
// Updated graph:

// New entities:
CREATE (rightOfEntry:RightOfEntry);
CREATE (realPropertyTaxes:RealPropertyTaxes);
CREATE (penalty:Penalty);
CREATE (declarant:Declarant);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (thirdPerson:ThirdPerson);
CREATE (entity:Entity);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// Existing relationships from new document:
CREATE (association)-[:HAS_RIGHT_OF_ENTRY]->(rightOfEntry);
CREATE (rightOfEntry)-[:APPLIES_TO]->(unit);
CREATE (rightOfEntry)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(unit);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_PENALTY]->(penalty);
CREATE (penalty)-[:APPLIES_TO]->(restriction);
CREATE (penalty)-[:APPLIES_TO]->(action);

// Updated existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
// Updated graph:

// New entities:
CREATE (rightOfEntry:RightOfEntry);
CREATE (realPropertyTaxes:RealPropertyTaxes);
CREATE (penalty:Penalty);
CREATE (declarant:Declarant);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (thirdPerson:ThirdPerson);
CREATE (entity:Entity);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// Existing relationships from new document:
CREATE (association)-[:HAS_RIGHT_OF_ENTRY]->(rightOfEntry);
CREATE (rightOfEntry)-[:APPLIES_TO]->(unit);
CREATE (rightOfEntry)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(unit);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_PENALTY]->(penalty);
CREATE (penalty)-[:APPLIES_TO]->(restriction);
CREATE (penalty)-[:APPLIES_TO]->(action);

// Updated existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
// Updated graph:

// New entities:
CREATE (rightOfEntry:RightOfEntry);
CREATE (realPropertyTaxes:RealPropertyTaxes);
CREATE (penalty:Penalty);
CREATE (declarant:Declarant);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (thirdPerson:ThirdPerson);
CREATE (entity:Entity);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// Existing relationships from new document:
CREATE (association)-[:HAS_RIGHT_OF_ENTRY]->(rightOfEntry);
CREATE (rightOfEntry)-[:APPLIES_TO]->(unit);
CREATE (rightOfEntry)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(unit);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_PENALTY]->(penalty);
CREATE (penalty)-[:APPLIES_TO]->(restriction);
CREATE (penalty)-[:APPLIES_TO]->(action);

// Updated existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
// Updated graph:

// New entities:
CREATE (rightOfEntry:RightOfEntry);
CREATE (realPropertyTaxes:RealPropertyTaxes);
CREATE (penalty:Penalty);
CREATE (declarant:Declarant);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (thirdPerson:ThirdPerson);
CREATE (entity:Entity);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// Existing relationships from new document:
CREATE (association)-[:HAS_RIGHT_OF_ENTRY]->(rightOfEntry);
CREATE (rightOfEntry)-[:APPLIES_TO]->(unit);
CREATE (rightOfEntry)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(unit);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_PENALTY]->(penalty);
CREATE (penalty)-[:APPLIES_TO]->(restriction);
CREATE (penalty)-[:APPLIES_TO]->(action);

// Updated existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
// Updated graph:

// New entities:
CREATE (rightOfEntry:RightOfEntry);
CREATE (realPropertyTaxes:RealPropertyTaxes);
CREATE (penalty:Penalty);
CREATE (declarant:Declarant);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (thirdPerson:ThirdPerson);
CREATE (entity:Entity);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// Existing relationships from new document:
CREATE (association)-[:HAS_RIGHT_OF_ENTRY]->(rightOfEntry);
CREATE (rightOfEntry)-[:APPLIES_TO]->(unit);
CREATE (rightOfEntry)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(unit);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_PENALTY]->(penalty);
CREATE (penalty)-[:APPLIES_TO]->(restriction);
CREATE (penalty)-[:APPLIES_TO]->(action);

// Updated existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
// Updated graph:

// New entities:
CREATE (rightOfEntry:RightOfEntry);
CREATE (realPropertyTaxes:RealPropertyTaxes);
CREATE (penalty:Penalty);
CREATE (declarant:Declarant);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (thirdPerson:ThirdPerson);
CREATE (entity:Entity);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// Existing relationships from new document:
CREATE (association)-[:HAS_RIGHT_OF_ENTRY]->(rightOfEntry);
CREATE (rightOfEntry)-[:APPLIES_TO]->(unit);
CREATE (rightOfEntry)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(unit);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_PENALTY]->(penalty);
CREATE (penalty)-[:APPLIES_TO]->(restriction);
CREATE (penalty)-[:APPLIES_TO]->(action);

// Updated existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
// Updated graph:

// New entities:
CREATE (rightOfEntry:RightOfEntry);
CREATE (realPropertyTaxes:RealPropertyTaxes);
CREATE (penalty:Penalty);
CREATE (declarant:Declarant);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (thirdPerson:ThirdPerson);
CREATE (entity:Entity);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// Existing relationships from new document:
CREATE (association)-[:HAS_RIGHT_OF_ENTRY]->(rightOfEntry);
CREATE (rightOfEntry)-[:APPLIES_TO]->(unit);
CREATE (rightOfEntry)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(unit);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_PENALTY]->(penalty);
CREATE (penalty)-[:APPLIES_TO]->(restriction);
CREATE (penalty)-[:APPLIES_TO]->(action);

// Updated existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
// Updated graph:

// New entities:
CREATE (rightOfEntry:RightOfEntry);
CREATE (realPropertyTaxes:RealPropertyTaxes);
CREATE (penalty:Penalty);
CREATE (declarant:Declarant);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (thirdPerson:ThirdPerson);
CREATE (entity:Entity);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// Existing relationships from new document:
CREATE (association)-[:HAS_RIGHT_OF_ENTRY]->(rightOfEntry);
CREATE (rightOfEntry)-[:APPLIES_TO]->(unit);
CREATE (rightOfEntry)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(unit);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_PENALTY]->(penalty);
CREATE (penalty)-[:APPLIES_TO]->(restriction);
CREATE (penalty)-[:APPLIES_TO]->(action);

// Updated existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
// Updated graph:

// New entities:
CREATE (rightOfEntry:RightOfEntry);
CREATE (realPropertyTaxes:RealPropertyTaxes);
CREATE (penalty:Penalty);
CREATE (declarant:Declarant);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (thirdPerson:ThirdPerson);
CREATE (entity:Entity);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// Existing relationships from new document:
CREATE (association)-[:HAS_RIGHT_OF_ENTRY]->(rightOfEntry);
CREATE (rightOfEntry)-[:APPLIES_TO]->(unit);
CREATE (rightOfEntry)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(unit);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_PENALTY]->(penalty);
CREATE (penalty)-[:APPLIES_TO]->(restriction);
CREATE (penalty)-[:APPLIES_TO]->(action);

// Updated existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;
// Updated graph:

// New entities:
CREATE (rightOfEntry:RightOfEntry);
CREATE (realPropertyTaxes:RealPropertyTaxes);
CREATE (penalty:Penalty);
CREATE (declarant:Declarant);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (thirdPerson:ThirdPerson);
CREATE (entity:Entity);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// Existing relationships from new document:
CREATE (association)-[:HAS_RIGHT_OF_ENTRY]->(rightOfEntry);
CREATE (rightOfEntry)-[:APPLIES_TO]->(unit);
CREATE (rightOfEntry)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(unit);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_PENALTY]->(penalty);
CREATE (penalty)-[:APPLIES_TO]->(restriction);
CREATE (penalty)-[:APPLIES_TO]->(action);

// Updated existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;
// Updated graph:

// New entities:
CREATE (rightOfEntry:RightOfEntry);
CREATE (realPropertyTaxes:RealPropertyTaxes);
CREATE (penalty:Penalty);
CREATE (declarant:Declarant);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (thirdPerson:ThirdPerson);
CREATE (entity:Entity);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// Existing relationships from new document:
CREATE (association)-[:HAS_RIGHT_OF_ENTRY]->(rightOfEntry);
CREATE (rightOfEntry)-[:APPLIES_TO]->(unit);
CREATE (rightOfEntry)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(unit);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_PENALTY]->(penalty);
CREATE (penalty)-[:APPLIES_TO]->(restriction);
CREATE (penalty)-[:APPLIES_TO]->(action);

// Updated existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;
// Updated graph:

// New entities:
CREATE (rightOfEntry:RightOfEntry);
CREATE (realPropertyTaxes:RealPropertyTaxes);
CREATE (penalty:Penalty);
CREATE (declarant:Declarant);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (thirdPerson:ThirdPerson);
CREATE (entity:Entity);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// Existing relationships from new document:
CREATE (association)-[:HAS_RIGHT_OF_ENTRY]->(rightOfEntry);
CREATE (rightOfEntry)-[:APPLIES_TO]->(unit);
CREATE (rightOfEntry)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(unit);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_PENALTY]->(penalty);
CREATE (penalty)-[:APPLIES_TO]->(restriction);
CREATE (penalty)-[:APPLIES_TO]->(action);

// Updated existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
MATCH (association)-[:HAS_POLICY]->(insurance)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
DELETE (association)-[:HAS_POLICY]->(insurance);
// Updated graph:

// New entities:
CREATE (rightOfEntry:RightOfEntry);
CREATE (realPropertyTaxes:RealPropertyTaxes);
CREATE (penalty:Penalty);
CREATE (declarant:Declarant);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (thirdPerson:ThirdPerson);
CREATE (entity:Entity);

// Existing relationships:
CREATE (association)-[:HAS_RIGHT_TO_DECORATE]->(unit);
CREATE (association)-[:HAS_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(unit);
CREATE (association)-[:HAS_SUBSTANTIAL_IMPROVEMENTS]->(exclusiveUseCommonArea);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(unit);
CREATE (association)-[:MAINTAINS_YARD_AREAS]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_COVERAGE]->(floodInsurance);
CREATE (association)-[:HAS_COVERAGE]->(earthquakeInsurance);
CREATE (association)-[:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee);
CREATE (association)-[:HAS_FNMA_SERVICER]->(fnmaServicer);
CREATE (association)-[:HAS_FIRST_MORTGAGEE]->(firstMortgagee);
CREATE (association)-[:REQUIRES_REVIEW]->(insurance);
CREATE (association)-[:REQUIRES_APPRAISAL]->(appraisal);
CREATE (owner)-[:HAS_INSURANCE]->(insurance);
CREATE (owner)-[:HAS_COVERAGE]->(lossAssessmentCoverage);
CREATE (owner)-[:HAS_INSURANCE]->(availableInsurance);
CREATE (owner)-[:NOTIFIES_ASSOCIATION]->(substantialImprovements);
CREATE (owner)-[:ALTERS_COVERAGE]->(individualInsurance);
CREATE (unit)-[:IS_USED_AS]->(residentialDwelling);
CREATE (unit)-[:CAN_BE_RENTED]->(rentalAgreement);
CREATE (rentalAgreement)-[:SUBJECT_TO]->(governingDocuments);
CREATE (rentalAgreement)-[:GIVES_INFORMATION_TO]->(board);
CREATE (rentalAgreement)-[:GIVES_RIGHT_OF_ACTION]->(owner);
CREATE (unit)-[:CAN_CARRY_ON]->(occupationOrBusiness);
CREATE (rentalAgreement)-[:INCLUDES_OCCUPANTS]->(occupant);
CREATE (rentalAgreement)-[:INCLUDES_TENANTS]->(tenant);
CREATE (rentalAgreement)-[:INCLUDES_ROOMMATES]->(roommate);
CREATE (governingDocuments)-[:HAS_RESTRICTION]->(restriction);
CREATE (restriction)-[:CAN_BE_BREACHED_BY]->(action);
CREATE (association)-[:ALLOWS_SALE_LEASING]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_FAMILY]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_TENANTS]->(unit);
CREATE (association)-[:DELEGATES_RIGHTS_TO_PURCHASER]->(unit);
CREATE (unit)-[:MAY_CAUSE_NUISANCE]->(occupant);
CREATE (unit)-[:MAY_CAUSE_NOISE]->(occupant);
CREATE (occupant)-[:MAY_CAUSE_NUISANCE]->(unit);
CREATE (occupant)-[:MAY_CAUSE_NOISE]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(unit);
CREATE (unit)-[:MAY_ACCUMULATE_DEBRIS]->(yardAreas);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(unit);
CREATE (unit)-[:MAY_DISPLAY_SIGN]->(exclusiveUseCommonArea);
CREATE (association)-[:REQUIRES_INSURANCE_APPROVAL]->(unit);
CREATE (association)-[:LIABLE_FOR_INSURANCE_INCREASE]->(unit);
CREATE (unit)-[:ENFORCES_PARKING_REGULATIONS]->(vehicleCodeRegulations);
CREATE (unit)-[:ALLOWED_TO_KEEP_PETS]->(domesticatedPets);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(unit);
CREATE (domesticatedPets)-[:MAY_BOTHER_RESIDENTS]->(occupant);

// Existing relationships from new document:
CREATE (association)-[:HAS_RIGHT_OF_ENTRY]->(rightOfEntry);
CREATE (rightOfEntry)-[:APPLIES_TO]->(unit);
CREATE (rightOfEntry)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(unit);
CREATE (realPropertyTaxes)-[:APPLIES_TO]->(exclusiveUseCommonArea);
CREATE (association)-[:HAS_PENALTY]->(penalty);
CREATE (penalty)-[:APPLIES_TO]->(restriction);
CREATE (penalty)-[:APPLIES_TO]->(action);

// Updated existing relationships:
MATCH (association)-[r:HAS_EXTERIOR_CHANGE]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea)
DELETE r;
MATCH (association)-[r:HAS_INSURANCE_TRUSTEE]->(insuranceTrustee)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (association)-[r:HAS_FNMA_SERVICER]->(fnmaServicer)
CREATE (association)-[:HAS_CONTRACT_WITH]->(insuranceAgency)
CREATE (insuranceAgency)-[:PROVIDES_INSURANCE]->(association)
DELETE r;
MATCH (unit)-[r:IS_USED_AS]->(residentialDwelling)
CREATE (unit)-[:CAN_BE_USED_FOR]->(residentialDwelling)
DELETE r;
MATCH (unit)-[r:CAN_CARRY_ON]->(occupationOrBusiness)
CREATE (unit)-[:CAN_BE_USED_FOR]->(occupationOrBusiness)
DELETE r;
MATCH (association)-[r:ALLOWS_SALE_LEASING]->(unit)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
MATCH (association)-[:HAS_POLICY]->(insurance)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
DELETE (association)-[:HAS_POLICY]->(insurance);
// New entities:
CREATE (summary:Summary);
CREATE (associationMember:AssociationMember);
CREATE (insurancePolicies:InsurancePolicies);
CREATE (individualInsuranceBroker:IndividualInsuranceBroker);
CREATE (boardOfDirectors:BoardOfDirectors);
CREATE (financialInstitution:FinancialInstitution);
CREATE (incomeExpenseStatement:IncomeExpenseStatement);

// New relationships from new document:
CREATE (association)-[:HAS_SUMMARY]->(summary);
CREATE (summary)-[:DISTRIBUTED_TO]->(associationMember);
CREATE (association)-[:HAS_INSURANCE_POLICIES]->(insurancePolicies);
CREATE (associationMember)-[:REQUESTS_REVIEW_OF]->(insurancePolicies);
CREATE (associationMember)-[:REQUESTS_COPIES_OF]->(insurancePolicies);
CREATE (association)-[:HAS_CONTRACT_WITH]->(individualInsuranceBroker);
CREATE (individualInsuranceBroker)-[:PROVIDES_SERVICES]->(associationMember);
CREATE (individualInsuranceBroker)-[:PROVIDES_INSURANCE]->(insurancePolicies);
CREATE (associationMember)-[:CONSULTS_WITH]->(individualInsuranceBroker);
CREATE (boardOfDirectors)-[:REVIEWS_RECONCILIATION_OF]->(association)-[:OPERATING_ACCOUNTS];
CREATE (boardOfDirectors)-[:REVIEWS_RECONCILIATION_OF]->(association)-[:RESERVE_ACCOUNTS];
CREATE (boardOfDirectors)-[:REVIEWS_ACTUAL_REVENUES_EXPENSES]->(association)-[:RESERVE_ACCOUNTS];
CREATE (boardOfDirectors)-[:REVIEWS_ACCOUNT_STATEMENTS]->(association)-[:OPERATING_ACCOUNTS];
CREATE (boardOfDirectors)-[:REVIEWS_ACCOUNT_STATEMENTS]->(association)-[:RESERVE_ACCOUNTS];
CREATE (boardOfDirectors)-[:REVIEWS_INCOME_EXPENSE_STATEMENT]->(association)-[:OPERATING_ACCOUNTS];
CREATE (boardOfDirectors)-[:REVIEWS_INCOME_EXPENSE_STATEMENT]->(association)-[:RESERVE_ACCOUNTS];
CREATE (boardOfDirectors)-[:REQUIRES_SIGNATURES_FROM]->(associationMember)-[:BOARD_OF_DIRECTORS];
CREATE (boardOfDirectors)-[:REQUIRES_SIGNATURES_FROM]->(associationMember)-[:OFFICER];
CREATE (boardOfDirectors)-[:AUTHORIZES_TRANSFER_OF]->(association)-[:RESERVE_FUNDS];
CREATE (association)-[:TRANSFERRED_TO]->(association)-[:OPERATING_FUND];
CREATE (boardOfDirectors)-[:MAKES_WRITTEN_FINDING]->(association)-[:TRANSFER_OF_FUNDS];
CREATE (boardOfDirectors)-[:REQUIRES_REPAYMENT_TO]->(association)-[:RESERVE_FUNDS];
CREATE (association)-[:RESTORED_WITHIN_ONE_YEAR];
CREATE (boardOfDirectors)-[:TEMPORARILY_DELAYS_RESTORE]->(association)-[:RESERVE_FUNDS];
CREATE (boardOfDirectors)-[:EXERCISES_FISCAL_MANAGEMENT]->(association)-[:RESERVE_ACCOUNT];
CREATE (boardOfDirectors)-[:LEVIES_SPECIAL_ASSESSMENT]->(association)-[:EXPENDED_FUNDS];

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
MATCH (association)-[:HAS_POLICY]->(insurance)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
DELETE (association)-[:HAS_POLICY]->(insurance);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
MATCH (association)-[:HAS_POLICY]->(insurance)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
DELETE (association)-[:HAS_POLICY]->(insurance);
// New entities:
CREATE (summary:Summary);
CREATE (associationMember:AssociationMember);
CREATE (insurancePolicies:InsurancePolicies);
CREATE (individualInsuranceBroker:IndividualInsuranceBroker);
CREATE (boardOfDirectors:BoardOfDirectors);
CREATE (financialInstitution:FinancialInstitution);
CREATE (incomeExpenseStatement:IncomeExpenseStatement);
CREATE (declarant:Declarant);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (commonArea:CommonArea);
CREATE (unit:Unit);
CREATE (entity:Entity);

// New relationships from new document:
CREATE (association)-[:HAS_SUMMARY]->(summary);
CREATE (summary)-[:DISTRIBUTED_TO]->(associationMember);
CREATE (association)-[:HAS_INSURANCE_POLICIES]->(insurancePolicies);
CREATE (associationMember)-[:REQUESTS_REVIEW_OF]->(insurancePolicies);
CREATE (associationMember)-[:REQUESTS_COPIES_OF]->(insurancePolicies);
CREATE (association)-[:HAS_CONTRACT_WITH]->(individualInsuranceBroker);
CREATE (individualInsuranceBroker)-[:PROVIDES_SERVICES]->(associationMember);
CREATE (individualInsuranceBroker)-[:PROVIDES_INSURANCE]->(insurancePolicies);
CREATE (associationMember)-[:CONSULTS_WITH]->(individualInsuranceBroker);
CREATE (boardOfDirectors)-[:REVIEWS_RECONCILIATION_OF]->(association)-[:OPERATING_ACCOUNTS];
CREATE (boardOfDirectors)-[:REVIEWS_RECONCILIATION_OF]->(association)-[:RESERVE_ACCOUNTS];
CREATE (boardOfDirectors)-[:REVIEWS_ACTUAL_REVENUES_EXPENSES]->(association)-[:RESERVE_ACCOUNTS];
CREATE (boardOfDirectors)-[:REVIEWS_ACCOUNT_STATEMENTS]->(association)-[:OPERATING_ACCOUNTS];
CREATE (boardOfDirectors)-[:REVIEWS_ACCOUNT_STATEMENTS]->(association)-[:RESERVE_ACCOUNTS];
CREATE (boardOfDirectors)-[:REVIEWS_INCOME_EXPENSE_STATEMENT]->(association)-[:OPERATING_ACCOUNTS];
CREATE (boardOfDirectors)-[:REVIEWS_INCOME_EXPENSE_STATEMENT]->(association)-[:RESERVE_ACCOUNTS];
CREATE (boardOfDirectors)-[:REQUIRES_SIGNATURES_FROM]->(associationMember)-[:BOARD_OF_DIRECTORS];
CREATE (boardOfDirectors)-[:REQUIRES_SIGNATURES_FROM]->(associationMember)-[:OFFICER];
CREATE (boardOfDirectors)-[:AUTHORIZES_TRANSFER_OF]->(association)-[:RESERVE_FUNDS];
CREATE (association)-[:TRANSFERRED_TO]->(association)-[:OPERATING_FUND];
CREATE (boardOfDirectors)-[:MAKES_WRITTEN_FINDING]->(association)-[:TRANSFER_OF_FUNDS];
CREATE (boardOfDirectors)-[:REQUIRES_REPAYMENT_TO]->(association)-[:RESERVE_FUNDS];
CREATE (association)-[:RESTORED_WITHIN_ONE_YEAR];
CREATE (boardOfDirectors)-[:TEMPORARILY_DELAYS_RESTORE]->(association)-[:RESERVE_FUNDS];
CREATE (boardOfDirectors)-[:EXERCISES_FISCAL_MANAGEMENT]->(association)-[:RESERVE_ACCOUNT];
CREATE (boardOfDirectors)-[:LEVIES_SPECIAL_ASSESSMENT]->(association)-[:EXPENDED_FUNDS];
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association);
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant)
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant)
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany)
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association);
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE (association)-[:HAS_POLICY]->(insurance);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
MATCH (association)-[:HAS_POLICY]->(insurance)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
DELETE (association)-[:HAS_POLICY]->(insurance);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
MATCH (association)-[:HAS_POLICY]->(insurance)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
DELETE (association)-[:HAS_POLICY]->(insurance);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
MATCH (association)-[:HAS_POLICY]->(insurance)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
DELETE (association)-[:HAS_POLICY]->(insurance);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
MATCH (association)-[:HAS_POLICY]->(insurance)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
DELETE (association)-[:HAS_POLICY]->(insurance);
// New entities:
CREATE (summary:Summary);
CREATE (associationMember:AssociationMember);
CREATE (insurancePolicies:InsurancePolicies);
CREATE (individualInsuranceBroker:IndividualInsuranceBroker);
CREATE (boardOfDirectors:BoardOfDirectors);
CREATE (financialInstitution:FinancialInstitution);
CREATE (incomeExpenseStatement:IncomeExpenseStatement);
CREATE (declarant:Declarant);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (commonArea:CommonArea);
CREATE (unit:Unit);
CREATE (entity:Entity);
CREATE (rightOfEntry:RightOfEntry);
CREATE (realPropertyTaxes:RealPropertyTaxes);
CREATE (penalty:Penalty);

// New relationships from new document:
CREATE (association)-[:HAS_SUMMARY]->(summary);
CREATE (summary)-[:DISTRIBUTED_TO]->(associationMember);
CREATE (association)-[:HAS_INSURANCE_POLICIES]->(insurancePolicies);
CREATE (associationMember)-[:REQUESTS_REVIEW_OF]->(insurancePolicies);
CREATE (associationMember)-[:REQUESTS_COPIES_OF]->(insurancePolicies);
CREATE (association)-[:HAS_CONTRACT_WITH]->(individualInsuranceBroker);
CREATE (individualInsuranceBroker)-[:PROVIDES_SERVICES]->(associationMember);
CREATE (individualInsuranceBroker)-[:PROVIDES_INSURANCE]->(insurancePolicies);
CREATE (associationMember)-[:CONSULTS_WITH]->(individualInsuranceBroker);
CREATE (boardOfDirectors)-[:REVIEWS_RECONCILIATION_OF]->(association)-[:OPERATING_ACCOUNTS];
CREATE (boardOfDirectors)-[:REVIEWS_RECONCILIATION_OF]->(association)-[:RESERVE_ACCOUNTS];
CREATE (boardOfDirectors)-[:REVIEWS_ACTUAL_REVENUES_EXPENSES]->(association)-[:RESERVE_ACCOUNTS];
CREATE (boardOfDirectors)-[:REVIEWS_ACCOUNT_STATEMENTS]->(association)-[:OPERATING_ACCOUNTS];
CREATE (boardOfDirectors)-[:REVIEWS_ACCOUNT_STATEMENTS]->(association)-[:RESERVE_ACCOUNTS];
CREATE (boardOfDirectors)-[:REVIEWS_INCOME_EXPENSE_STATEMENT]->(association)-[:OPERATING_ACCOUNTS];
CREATE (boardOfDirectors)-[:REVIEWS_INCOME_EXPENSE_STATEMENT]->(association)-[:RESERVE_ACCOUNTS];
CREATE (boardOfDirectors)-[:REQUIRES_SIGNATURES_FROM]->(associationMember)-[:BOARD_OF_DIRECTORS];
CREATE (boardOfDirectors)-[:REQUIRES_SIGNATURES_FROM]->(associationMember)-[:OFFICER];
CREATE (boardOfDirectors)-[:AUTHORIZES_TRANSFER_OF]->(association)-[:RESERVE_FUNDS];
CREATE (association)-[:TRANSFERRED_TO]->(association)-[:OPERATING_FUND];
CREATE (boardOfDirectors)-[:MAKES_WRITTEN_FINDING]->(association)-[:TRANSFER_OF_FUNDS];
CREATE (boardOfDirectors)-[:REQUIRES_REPAYMENT_TO]->(association)-[:RESERVE_FUNDS];
CREATE (association)-[:RESTORED_WITHIN_ONE_YEAR];
CREATE (boardOfDirectors)-[:TEMPORARILY_DELAYS_RESTORE]->(association)-[:RESERVE_FUNDS];
CREATE (boardOfDirectors)-[:EXERCISES_FISCAL_MANAGEMENT]->(association)-[:RESERVE_ACCOUNT];
CREATE (boardOfDirectors)-[:LEVIES_SPECIAL_ASSESSMENT]->(association)-[:EXPENDED_FUNDS];
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association);
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant)
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant)
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany)
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association);
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE (association)-[:HAS_POLICY]->(insurance);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
MATCH (association)-[:HAS_POLICY]->(insurance)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
DELETE (association)-[:HAS_POLICY]->(insurance);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
MATCH (association)-[:HAS_POLICY]->(insurance)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
DELETE (association)-[:HAS_POLICY]->(insurance);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
MATCH (association)-[:HAS_POLICY]->(insurance)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
DELETE (association)-[:HAS_POLICY]->(insurance);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
MATCH (association)-[:HAS_POLICY]->(insurance)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
DELETE (association)-[:HAS_POLICY]->(insurance);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
MATCH (association)-[:HAS_POLICY]->(insurance)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
DELETE (association)-[:HAS_POLICY]->(insurance);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
MATCH (association)-[:HAS_POLICY]->(insurance)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
DELETE (association)-[:HAS_POLICY]->(insurance);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
MATCH (association)-[:HAS_POLICY]->(insurance)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
DELETE (association)-[:HAS_POLICY]->(insurance);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
MATCH (association)-[:HAS_POLICY]->(insurance)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
DELETE (association)-[:HAS_POLICY]->(insurance);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
MATCH (association)-[:HAS_POLICY]->(insurance)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
DELETE (association)-[:HAS_POLICY]->(insurance);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
MATCH (association)-[:HAS_POLICY]->(insurance)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
DELETE (association)-[:HAS_POLICY]->(insurance);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
MATCH (association)-[:HAS_POLICY]->(insurance)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
DELETE (association)-[:HAS_POLICY]->(insurance);
// New entities:
CREATE (summary:Summary);
CREATE (associationMember:AssociationMember);
CREATE (insurancePolicies:InsurancePolicies);
CREATE (individualInsuranceBroker:IndividualInsuranceBroker);
CREATE (boardOfDirectors:BoardOfDirectors);
CREATE (financialInstitution:FinancialInstitution);
CREATE (incomeExpenseStatement:IncomeExpenseStatement);
CREATE (declarant:Declarant);
CREATE (publicUtilityCompany:PublicUtilityCompany);
CREATE (commonArea:CommonArea);
CREATE (unit:Unit);
CREATE (entity:Entity);
CREATE (rightOfEntry:RightOfEntry);
CREATE (realPropertyTaxes:RealPropertyTaxes);
CREATE (penalty:Penalty);

// New relationships from new document:
CREATE (association)-[:HAS_SUMMARY]->(summary);
CREATE (summary)-[:DISTRIBUTED_TO]->(associationMember);
CREATE (association)-[:HAS_INSURANCE_POLICIES]->(insurancePolicies);
CREATE (associationMember)-[:REQUESTS_REVIEW_OF]->(insurancePolicies);
CREATE (associationMember)-[:REQUESTS_COPIES_OF]->(insurancePolicies);
CREATE (association)-[:HAS_CONTRACT_WITH]->(individualInsuranceBroker);
CREATE (individualInsuranceBroker)-[:PROVIDES_SERVICES]->(associationMember);
CREATE (individualInsuranceBroker)-[:PROVIDES_INSURANCE]->(insurancePolicies);
CREATE (associationMember)-[:CONSULTS_WITH]->(individualInsuranceBroker);
CREATE (boardOfDirectors)-[:REVIEWS_RECONCILIATION_OF]->(association)-[:OPERATING_ACCOUNTS];
CREATE (boardOfDirectors)-[:REVIEWS_RECONCILIATION_OF]->(association)-[:RESERVE_ACCOUNTS];
CREATE (boardOfDirectors)-[:REVIEWS_ACTUAL_REVENUES_EXPENSES]->(association)-[:RESERVE_ACCOUNTS];
CREATE (boardOfDirectors)-[:REVIEWS_ACCOUNT_STATEMENTS]->(association)-[:OPERATING_ACCOUNTS];
CREATE (boardOfDirectors)-[:REVIEWS_ACCOUNT_STATEMENTS]->(association)-[:RESERVE_ACCOUNTS];
CREATE (boardOfDirectors)-[:REVIEWS_INCOME_EXPENSE_STATEMENT]->(association)-[:OPERATING_ACCOUNTS];
CREATE (boardOfDirectors)-[:REVIEWS_INCOME_EXPENSE_STATEMENT]->(association)-[:RESERVE_ACCOUNTS];
CREATE (boardOfDirectors)-[:REQUIRES_SIGNATURES_FROM]->(associationMember)-[:BOARD_OF_DIRECTORS];
CREATE (boardOfDirectors)-[:REQUIRES_SIGNATURES_FROM]->(associationMember)-[:OFFICER];
CREATE (boardOfDirectors)-[:AUTHORIZES_TRANSFER_OF]->(association)-[:RESERVE_FUNDS];
CREATE (association)-[:TRANSFERRED_TO]->(association)-[:OPERATING_FUND];
CREATE (boardOfDirectors)-[:MAKES_WRITTEN_FINDING]->(association)-[:TRANSFER_OF_FUNDS];
CREATE (boardOfDirectors)-[:REQUIRES_REPAYMENT_TO]->(association)-[:RESERVE_FUNDS];
CREATE (association)-[:RESTORED_WITHIN_ONE_YEAR];
CREATE (boardOfDirectors)-[:TEMPORARILY_DELAYS_RESTORE]->(association)-[:RESERVE_FUNDS];
CREATE (boardOfDirectors)-[:EXERCISES_FISCAL_MANAGEMENT]->(association)-[:RESERVE_ACCOUNT];
CREATE (boardOfDirectors)-[:LEVIES_SPECIAL_ASSESSMENT]->(association)-[:EXPENDED_FUNDS];
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association);
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant)
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant)
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany)
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association);
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE (association)-[:HAS_POLICY]->(insurance);
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE (association)-[:HAS_POLICY]->(insurance);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(commonArea);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(unit);
CREATE (association)-[:HAS_CONTRACT_WITH]->(declarant);
CREATE (declarant)-[:PROVIDES_SERVICES]->(entity);
CREATE (association)-[:HAS_CONTRACT_WITH]->(publicUtilityCompany);
CREATE (publicUtilityCompany)-[:PROVIDES_SERVICES]->(commonArea);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
MATCH (association)-[:HAS_POLICY]->(insurance)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
DELETE (association)-[:HAS_POLICY]->(insurance);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
MATCH (association)-[:HAS_POLICY]->(insurance)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
DELETE (association)-[:HAS_POLICY]->(insurance);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
MATCH (association)-[:HAS_POLICY]->(insurance)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
DELETE (association)-[:HAS_POLICY]->(insurance);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
MATCH (association)-[:HAS_POLICY]->(insurance)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
DELETE (association)-[:HAS_POLICY]->(insurance);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
MATCH (association)-[:HAS_POLICY]->(insurance)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
DELETE (association)-[:HAS_POLICY]->(insurance);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
MATCH (association)-[:HAS_POLICY]->(insurance)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
DELETE (association)-[:HAS_POLICY]->(insurance);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
MATCH (association)-[:HAS_POLICY]->(insurance)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
DELETE (association)-[:HAS_POLICY]->(insurance);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
MATCH (association)-[:HAS_POLICY]->(insurance)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
DELETE (association)-[:HAS_POLICY]->(insurance);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
MATCH (association)-[:HAS_POLICY]->(insurance)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
DELETE (association)-[:HAS_POLICY]->(insurance);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
MATCH (association)-[:HAS_POLICY]->(insurance)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
DELETE (association)-[:HAS_POLICY]->(insurance);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
MATCH (association)-[:HAS_POLICY]->(insurance)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
DELETE (association)-[:HAS_POLICY]->(insurance);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
MATCH (association)-[:HAS_POLICY]->(insurance)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
CREATE (thirdPerson)-[:PROVIDES_INSURANCE]->(insurance)
DELETE (association)-[:HAS_POLICY]->(insurance);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_RIGHT_OF_ENTRY]->(rightOfEntry)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_REAL_PROPERTY_TAXES]->(realPropertyTaxes)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_PENALTY]->(penalty)
CREATE (association)-[:HAS_CONTRACT_WITH]->(thirdPerson)
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(unit)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;
// New entities:
CREATE (clarification:Clarification);

// New relationships from new document:
CREATE (clarification)-[:CLARIFIES_SCOPE_OF]->(association);
CREATE (association)-[:HAS_CLARIFICATION]->(clarification);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_CONTRACT_WITH]->(individualInsuranceBroker)
CREATE (individualInsuranceBroker)-[:PROVIDES_SERVICES]->(associationMember)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CLARIFICATION]->(clarification);
CREATE (clarification)-[:CLARIFIES_SCOPE_OF]->(association);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_CONTRACT_WITH]->(individualInsuranceBroker)
CREATE (individualInsuranceBroker)-[:PROVIDES_SERVICES]->(associationMember)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CLARIFICATION]->(clarification);
CREATE (clarification)-[:CLARIFIES_SCOPE_OF]->(association);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_CONTRACT_WITH]->(individualInsuranceBroker)
CREATE (individualInsuranceBroker)-[:PROVIDES_SERVICES]->(associationMember)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CLARIFICATION]->(clarification);
CREATE (clarification)-[:CLARIFIES_SCOPE_OF]->(association);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_CONTRACT_WITH]->(individualInsuranceBroker)
CREATE (individualInsuranceBroker)-[:PROVIDES_SERVICES]->(associationMember)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CLARIFICATION]->(clarification);
CREATE (clarification)-[:CLARIFIES_SCOPE_OF]->(association);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_CONTRACT_WITH]->(individualInsuranceBroker)
CREATE (individualInsuranceBroker)-[:PROVIDES_SERVICES]->(associationMember)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CLARIFICATION]->(clarification);
CREATE (clarification)-[:CLARIFIES_SCOPE_OF]->(association);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_CONTRACT_WITH]->(individualInsuranceBroker)
CREATE (individualInsuranceBroker)-[:PROVIDES_SERVICES]->(associationMember)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CLARIFICATION]->(clarification);
CREATE (clarification)-[:CLARIFIES_SCOPE_OF]->(association);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_CONTRACT_WITH]->(individualInsuranceBroker)
CREATE (individualInsuranceBroker)-[:PROVIDES_SERVICES]->(associationMember)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CLARIFICATION]->(clarification);
CREATE (clarification)-[:CLARIFIES_SCOPE_OF]->(association);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_CONTRACT_WITH]->(individualInsuranceBroker)
CREATE (individualInsuranceBroker)-[:PROVIDES_SERVICES]->(associationMember)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CLARIFICATION]->(clarification);
CREATE (clarification)-[:CLARIFIES_SCOPE_OF]->(association);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_CONTRACT_WITH]->(individualInsuranceBroker)
CREATE (individualInsuranceBroker)-[:PROVIDES_SERVICES]->(associationMember)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CLARIFICATION]->(clarification);
CREATE (clarification)-[:CLARIFIES_SCOPE_OF]->(association);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_CONTRACT_WITH]->(individualInsuranceBroker)
CREATE (individualInsuranceBroker)-[:PROVIDES_SERVICES]->(associationMember)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CLARIFICATION]->(clarification);
CREATE (clarification)-[:CLARIFIES_SCOPE_OF]->(association);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_CONTRACT_WITH]->(individualInsuranceBroker)
CREATE (individualInsuranceBroker)-[:PROVIDES_SERVICES]->(associationMember)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CLARIFICATION]->(clarification);
CREATE (clarification)-[:CLARIFIES_SCOPE_OF]->(association);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_CONTRACT_WITH]->(individualInsuranceBroker)
CREATE (individualInsuranceBroker)-[:PROVIDES_SERVICES]->(associationMember)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CLARIFICATION]->(clarification);
CREATE (clarification)-[:CLARIFIES_SCOPE_OF]->(association);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_CONTRACT_WITH]->(individualInsuranceBroker)
CREATE (individualInsuranceBroker)-[:PROVIDES_SERVICES]->(associationMember)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CLARIFICATION]->(clarification);
CREATE (clarification)-[:CLARIFIES_SCOPE_OF]->(association);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_CONTRACT_WITH]->(individualInsuranceBroker)
CREATE (individualInsuranceBroker)-[:PROVIDES_SERVICES]->(associationMember)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CLARIFICATION]->(clarification);
CREATE (clarification)-[:CLARIFIES_SCOPE_OF]->(association);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_CONTRACT_WITH]->(individualInsuranceBroker)
CREATE (individualInsuranceBroker)-[:PROVIDES_SERVICES]->(associationMember)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// New relationships from new document:
CREATE (association)-[:HAS_CLARIFICATION]->(clarification);
CREATE (clarification)-[:CLARIFIES_SCOPE_OF]->(association);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_CONTRACT_WITH]->(individualInsuranceBroker)
CREATE (individualInsuranceBroker)-[:PROVIDES_SERVICES]->(associationMember)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;
// New entities:
CREATE (clarification:Clarification);

// New relationships from new document:
CREATE (clarification)-[:CLARIFIES_SCOPE_OF]->(association);
CREATE (association)-[:HAS_CLARIFICATION]->(clarification);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_CONTRACT_WITH]->(individualInsuranceBroker)
CREATE (individualInsuranceBroker)-[:PROVIDES_SERVICES]->(associationMember)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// Explanation: 
// - Created a new entity "Clarification" to capture the main entity from the new document.
// - Created relationships "CLARIFIES_SCOPE_OF" and "HAS_CLARIFICATION" to connect the new "Clarification" entity with the existing "Association" entity.
// - Updated existing relationships to reflect the changes mentioned in the new document.
// - Deleted the existing relationships that are no longer valid based on the new document.
// New entities:
CREATE (clarification:Clarification);

// New relationships from new document:
CREATE (clarification)-[:CLARIFIES_SCOPE_OF]->(association);
CREATE (association)-[:HAS_CLARIFICATION]->(clarification);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_CONTRACT_WITH]->(individualInsuranceBroker)
CREATE (individualInsuranceBroker)-[:PROVIDES_SERVICES]->(associationMember)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// Explanation: 
// - Created a new entity "Clarification" to capture the main entity from the new document.
// - Created relationships "CLARIFIES_SCOPE_OF" and "HAS_CLARIFICATION" to connect the new "Clarification" entity with the existing "Association" entity.
// - Updated existing relationships to reflect the changes mentioned in the new document.
// - Deleted the existing relationships that are no longer valid based on the new document.
// New entities:
CREATE (clarification:Clarification);

// New relationships from new document:
CREATE (clarification)-[:CLARIFIES_SCOPE_OF]->(association);
CREATE (association)-[:HAS_CLARIFICATION]->(clarification);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_CONTRACT_WITH]->(individualInsuranceBroker)
CREATE (individualInsuranceBroker)-[:PROVIDES_SERVICES]->(associationMember)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// Explanation: 
// - Created a new entity "Clarification" to capture the main entity from the new document.
// - Created relationships "CLARIFIES_SCOPE_OF" and "HAS_CLARIFICATION" to connect the new "Clarification" entity with the existing "Association" entity.
// - Updated existing relationships to reflect the changes mentioned in the new document.
// - Deleted the existing relationships that are no longer valid based on the new document.
// New entities:
CREATE (assessment:Assessment);
CREATE (lien:Lien);
CREATE (owner:Owner);
CREATE (charge:Charge);
CREATE (statement:Statement);
CREATE (principal:Principal);
CREATE (lateCharge:LateCharge);
CREATE (method:Method);
CREATE (attorneyFees:AttorneyFees);
CREATE (collectionPractices:CollectionPractices);
CREATE (costs:Costs);
CREATE (interest:Interest);

// New relationships from new document:
CREATE (association)-[:HAS_ASSESSMENT]->(assessment);
CREATE (association)-[:HAS_LIEN]->(lien);
CREATE (lien)-[:IMPOSES_ON]->(owner);
CREATE (association)-[:HAS_STATEMENT]->(statement);
CREATE (statement)-[:INCLUDES_CHARGE]->(charge);
CREATE (charge)-[:OWES_PRINCIPAL]->(principal);
CREATE (charge)-[:OWES_LATE_CHARGES]->(lateCharge);
CREATE (charge)-[:OWES_COLLECTION_EXPENSES]->(costs);
CREATE (charge)-[:OWES_INTEREST]->(interest);
CREATE (charge)-[:CALCULATED_USING]->(method);
CREATE (charge)-[:INCLUDES_ATTORNEY_FEES]->(attorneyFees);
CREATE (association)-[:USES_COLLECTION_PRACTICES]->(collectionPractices);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_CONTRACT_WITH]->(individualInsuranceBroker)
CREATE (individualInsuranceBroker)-[:PROVIDES_SERVICES]->(associationMember)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// Explanation:
// - Extracted the main entities from the new document, including Assessment, Lien, Owner, Charge, Statement, Principal, LateCharge, Method, AttorneyFees, CollectionPractices, Costs, and Interest.
// - Created relationships to connect the new entities with the existing Association entity.
// - Established relationships between the entities to capture the associations and dependencies described in the document.
// - Updated existing relationships to reflect the changes mentioned in the new document.
// - Deleted the existing relationships that are no longer valid based on the new document.
// New entities:
CREATE (assessment:Assessment);
CREATE (lien:Lien);
CREATE (owner:Owner);
CREATE (charge:Charge);
CREATE (statement:Statement);
CREATE (principal:Principal);
CREATE (lateCharge:LateCharge);
CREATE (method:Method);
CREATE (attorneyFees:AttorneyFees);
CREATE (collectionPractices:CollectionPractices);
CREATE (costs:Costs);
CREATE (interest:Interest);

// New relationships from new document:
CREATE (association)-[:HAS_ASSESSMENT]->(assessment);
CREATE (association)-[:HAS_LIEN]->(lien);
CREATE (lien)-[:IMPOSES_ON]->(owner);
CREATE (association)-[:HAS_STATEMENT]->(statement);
CREATE (statement)-[:INCLUDES_CHARGE]->(charge);
CREATE (charge)-[:OWES_PRINCIPAL]->(principal);
CREATE (charge)-[:OWES_LATE_CHARGES]->(lateCharge);
CREATE (charge)-[:OWES_COLLECTION_EXPENSES]->(costs);
CREATE (charge)-[:OWES_INTEREST]->(interest);
CREATE (charge)-[:CALCULATED_USING]->(method);
CREATE (charge)-[:INCLUDES_ATTORNEY_FEES]->(attorneyFees);
CREATE (association)-[:USES_COLLECTION_PRACTICES]->(collectionPractices);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_CONTRACT_WITH]->(individualInsuranceBroker)
CREATE (individualInsuranceBroker)-[:PROVIDES_SERVICES]->(associationMember)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// Explanation:
// - Extracted the main entities from the new document, including Assessment, Lien, Owner, Charge, Statement, Principal, LateCharge, Method, AttorneyFees, CollectionPractices, Costs, and Interest.
// - Created relationships to connect the new entities with the existing Association entity.
// - Established relationships between the entities to capture the associations and dependencies described in the document.
// - Updated existing relationships to reflect the changes mentioned in the new document.
// - Deleted the existing relationships that are no longer valid based on the new document.
// New entities:
CREATE (association:Association);
CREATE (assessment:Assessment);
CREATE (lien:Lien);
CREATE (owner:Owner);
CREATE (charge:Charge);
CREATE (statement:Statement);
CREATE (principal:Principal);
CREATE (lateCharge:LateCharge);
CREATE (method:Method);
CREATE (attorneyFees:AttorneyFees);
CREATE (collectionPractices:CollectionPractices);
CREATE (costs:Costs);
CREATE (interest:Interest);
CREATE (individualInsuranceBroker:IndividualInsuranceBroker);
CREATE (thirdPerson:ThirdPerson);
CREATE (declarant:Declarant);

// New relationships from new document:
CREATE (association)-[:HAS_ASSESSMENT]->(assessment);
CREATE (association)-[:HAS_LIEN]->(lien);
CREATE (lien)-[:IMPOSES_ON]->(owner);
CREATE (association)-[:HAS_STATEMENT]->(statement);
CREATE (statement)-[:INCLUDES_CHARGE]->(charge);
CREATE (charge)-[:OWES_PRINCIPAL]->(principal);
CREATE (charge)-[:OWES_LATE_CHARGES]->(lateCharge);
CREATE (charge)-[:OWES_COLLECTION_EXPENSES]->(costs);
CREATE (charge)-[:OWES_INTEREST]->(interest);
CREATE (charge)-[:CALCULATED_USING]->(method);
CREATE (charge)-[:INCLUDES_ATTORNEY_FEES]->(attorneyFees);
CREATE (association)-[:USES_COLLECTION_PRACTICES]->(collectionPractices);

// Updated existing relationships from new document:
MATCH (association)-[r:HAS_CONTRACT_WITH]->(individualInsuranceBroker)
CREATE (individualInsuranceBroker)-[:PROVIDES_SERVICES]->(association)
DELETE r;
MATCH (association)-[r:HAS_CONTRACT_WITH]->(thirdPerson)
WHERE thirdPerson:ThirdPerson AND NOT thirdPerson:Declarant
CREATE (thirdPerson)-[:PROVIDES_SERVICES]->(association)
DELETE r;

// Explanation:
// - Extracted the main entities from the new document, including Association, Assessment, Lien, Owner, Charge, Statement, Principal, LateCharge, Method, AttorneyFees, CollectionPractices, Costs, Interest, IndividualInsuranceBroker, ThirdPerson, and Declarant.
// - Created relationships to connect the new entities with the existing Association entity.
// - Established relationships between the entities to capture the associations and dependencies described in the document.
// - Updated existing relationships to reflect the changes mentioned in the new document.
// - Deleted the existing relationships that are no longer valid based on the new document.
// Updated graph:
// Existing entities:
CREATE (association:Association);
CREATE (assessment:Assessment);
CREATE (lien:Lien);
CREATE (owner:Owner);
CREATE (charge:Charge);
CREATE (statement:Statement);
CREATE (principal:Principal);
CREATE (lateCharge:LateCharge);
CREATE (method:Method);
CREATE (attorneyFees:AttorneyFees);
CREATE (collectionPractices:CollectionPractices);
CREATE (costs:Costs);
CREATE (interest:Interest);
CREATE (individualInsuranceBroker:IndividualInsuranceBroker);
CREATE (thirdPerson:ThirdPerson);
CREATE (declarant:Declarant);

// New entities:
// No new entities based on the provided document.

// New relationships from new document:
CREATE (association)-[:HAS_ASSESSMENT]->(assessment);
CREATE (association)-[:HAS_LIEN]->(lien);
CREATE (lien)-[:IMPOSES_ON]->(owner);
CREATE (association)-[:HAS_STATEMENT]->(statement);
CREATE (statement)-[:INCLUDES_CHARGE]->(charge);
CREATE (charge)-[:OWES_PRINCIPAL]->(principal);
CREATE (charge)-[:OWES_LATE_CHARGES]->(lateCharge);
CREATE (charge)-[:OWES_COLLECTION_EXPENSES]->(costs);
CREATE (charge)-[:OWES_INTEREST]->(interest);
CREATE (charge)-[:CALCULATED_USING]->(method);
CREATE (charge)-[:INCLUDES_ATTORNEY_FEES]->(attorneyFees);
CREATE (association)-[:USES_COLLECTION_PRACTICES]->(collectionPractices);

// Updated existing relationships from new document:
// No updated relationships based on the provided document.

// Explanation:
// - No new entities were introduced based on the provided document.
// - The existing entities and relationships remain the same.
// - The relationships from the new document were added to connect the existing entities and capture the associations and dependencies described in the document.
// - No existing relationships were updated based on the provided document.
// Updated graph:
// Existing entities:
CREATE (association:Association);
CREATE (assessment:Assessment);
CREATE (lien:Lien);
CREATE (owner:Owner);
CREATE (charge:Charge);
CREATE (statement:Statement);
CREATE (principal:Principal);
CREATE (lateCharge:LateCharge);
CREATE (method:Method);
CREATE (attorneyFees:AttorneyFees);
CREATE (collectionPractices:CollectionPractices);
CREATE (costs:Costs);
CREATE (interest:Interest);
CREATE (individualInsuranceBroker:IndividualInsuranceBroker);
CREATE (thirdPerson:ThirdPerson);
CREATE (declarant:Declarant);

// New entities:
// No new entities based on the provided document.

// New relationships from new document:
CREATE (association)-[:HAS_ASSESSMENT]->(assessment);
CREATE (association)-[:HAS_LIEN]->(lien);
CREATE (lien)-[:IMPOSES_ON]->(owner);
CREATE (association)-[:HAS_STATEMENT]->(statement);
CREATE (statement)-[:INCLUDES_CHARGE]->(charge);
CREATE (charge)-[:OWES_PRINCIPAL]->(principal);
CREATE (charge)-[:OWES_LATE_CHARGES]->(lateCharge);
CREATE (charge)-[:OWES_COLLECTION_EXPENSES]->(costs);
CREATE (charge)-[:OWES_INTEREST]->(interest);
CREATE (charge)-[:CALCULATED_USING]->(method);
CREATE (charge)-[:INCLUDES_ATTORNEY_FEES]->(attorneyFees);
CREATE (association)-[:USES_COLLECTION_PRACTICES]->(collectionPractices);

// Updated existing relationships from new document:
// No updated relationships based on the provided document.

// Explanation:
// - No new entities were introduced based on the provided document.
// - The existing entities and relationships remain the same.
// - The relationships from the new document were added to connect the existing entities and capture the associations and dependencies described in the document.
// - No existing relationships were updated based on the provided document.
// Updated graph:
// Existing entities:
CREATE (association:Association);
CREATE (assessment:Assessment);
CREATE (lien:Lien);
CREATE (owner:Owner);
CREATE (charge:Charge);
CREATE (statement:Statement);
CREATE (principal:Principal);
CREATE (lateCharge:LateCharge);
CREATE (method:Method);
CREATE (attorneyFees:AttorneyFees);
CREATE (collectionPractices:CollectionPractices);
CREATE (costs:Costs);
CREATE (interest:Interest);
CREATE (individualInsuranceBroker:IndividualInsuranceBroker);
CREATE (thirdPerson:ThirdPerson);
CREATE (declarant:Declarant);

// New entities:
// No new entities based on the provided document.

// New relationships from new document:
CREATE (association)-[:HAS_ASSESSMENT]->(assessment);
CREATE (association)-[:HAS_LIEN]->(lien);
CREATE (lien)-[:IMPOSES_ON]->(owner);
CREATE (association)-[:HAS_STATEMENT]->(statement);
CREATE (statement)-[:INCLUDES_CHARGE]->(charge);
CREATE (charge)-[:OWES_PRINCIPAL]->(principal);
CREATE (charge)-[:OWES_LATE_CHARGES]->(lateCharge);
CREATE (charge)-[:OWES_COLLECTION_EXPENSES]->(costs);
CREATE (charge)-[:OWES_INTEREST]->(interest);
CREATE (charge)-[:CALCULATED_USING]->(method);
CREATE (charge)-[:INCLUDES_ATTORNEY_FEES]->(attorneyFees);
CREATE (association)-[:USES_COLLECTION_PRACTICES]->(collectionPractices);

// Updated existing relationships from new document:
// No updated relationships based on the provided document.

// Explanation:
// - No new entities were introduced based on the provided document.
// - The existing entities and relationships remain the same.
// - The relationships from the new document were added to connect the existing entities and capture the associations and dependencies described in the document.
// - No existing relationships were updated based on the provided document.
// Updated graph:
// Existing entities:
CREATE (association:Association);
CREATE (assessment:Assessment);
CREATE (lien:Lien);
CREATE (owner:Owner);
CREATE (charge:Charge);
CREATE (statement:Statement);
CREATE (principal:Principal);
CREATE (lateCharge:LateCharge);
CREATE (method:Method);
CREATE (attorneyFees:AttorneyFees);
CREATE (collectionPractices:CollectionPractices);
CREATE (costs:Costs);
CREATE (interest:Interest);
CREATE (individualInsuranceBroker:IndividualInsuranceBroker);
CREATE (thirdPerson:ThirdPerson);
CREATE (declarant:Declarant);

// New entities:
// No new entities based on the provided document.

// New relationships from new document:
CREATE (association)-[:HAS_ASSESSMENT]->(assessment);
CREATE (association)-[:HAS_LIEN]->(lien);
CREATE (lien)-[:IMPOSES_ON]->(owner);
CREATE (association)-[:HAS_STATEMENT]->(statement);
CREATE (statement)-[:INCLUDES_CHARGE]->(charge);
CREATE (charge)-[:OWES_PRINCIPAL]->(principal);
CREATE (charge)-[:OWES_LATE_CHARGES]->(lateCharge);
CREATE (charge)-[:OWES_COLLECTION_EXPENSES]->(costs);
CREATE (charge)-[:OWES_INTEREST]->(interest);
CREATE (charge)-[:CALCULATED_USING]->(method);
CREATE (charge)-[:INCLUDES_ATTORNEY_FEES]->(attorneyFees);
CREATE (association)-[:USES_COLLECTION_PRACTICES]->(collectionPractices);

// Updated existing relationships from new document:
// No updated relationships based on the provided document.

// Explanation:
// - No new entities were introduced based on the provided document.
// - The existing entities and relationships remain the same.
// - The relationships from the new document were added to connect the existing entities and capture the associations and dependencies described in the document.
// - No existing relationships were updated based on the provided document.
// Updated graph:
// Existing entities:
CREATE (association:Association);
CREATE (assessment:Assessment);
CREATE (lien:Lien);
CREATE (owner:Owner);
CREATE (charge:Charge);
CREATE (statement:Statement);
CREATE (principal:Principal);
CREATE (lateCharge:LateCharge);
CREATE (method:Method);
CREATE (attorneyFees:AttorneyFees);
CREATE (collectionPractices:CollectionPractices);
CREATE (costs:Costs);
CREATE (interest:Interest);
CREATE (individualInsuranceBroker:IndividualInsuranceBroker);
CREATE (thirdPerson:ThirdPerson);
CREATE (declarant:Declarant);

// New entities:
// No new entities based on the provided document.

// New relationships from new document:
CREATE (association)-[:HAS_ASSESSMENT]->(assessment);
CREATE (association)-[:HAS_LIEN]->(lien);
CREATE (lien)-[:IMPOSES_ON]->(owner);
CREATE (association)-[:HAS_STATEMENT]->(statement);
CREATE (statement)-[:INCLUDES_CHARGE]->(charge);
CREATE (charge)-[:OWES_PRINCIPAL]->(principal);
CREATE (charge)-[:OWES_LATE_CHARGES]->(lateCharge);
CREATE (charge)-[:OWES_COLLECTION_EXPENSES]->(costs);
CREATE (charge)-[:OWES_INTEREST]->(interest);
CREATE (charge)-[:CALCULATED_USING]->(method);
CREATE (charge)-[:INCLUDES_ATTORNEY_FEES]->(attorneyFees);
CREATE (association)-[:USES_COLLECTION_PRACTICES]->(collectionPractices);

// Updated existing relationships from new document:
// No updated relationships based on the provided document.

// Explanation:
// - No new entities were introduced based on the provided document.
// - The existing entities and relationships remain the same.
// - The relationships from the new document were added to connect the existing entities and capture the associations and dependencies described in the document.
// - No existing relationships were updated based on the provided document.
// Updated graph:
// Existing entities:
CREATE (association:Association);
CREATE (assessment:Assessment);
CREATE (lien:Lien);
CREATE (owner:Owner);
CREATE (charge:Charge);
CREATE (statement:Statement);
CREATE (principal:Principal);
CREATE (lateCharge:LateCharge);
CREATE (method:Method);
CREATE (attorneyFees:AttorneyFees);
CREATE (collectionPractices:CollectionPractices);
CREATE (costs:Costs);
CREATE (interest:Interest);
CREATE (individualInsuranceBroker:IndividualInsuranceBroker);
CREATE (thirdPerson:ThirdPerson);
CREATE (declarant:Declarant);

// New entities:
// No new entities based on the provided document.

// New relationships from new document:
CREATE (association)-[:HAS_ASSESSMENT]->(assessment);
CREATE (association)-[:HAS_LIEN]->(lien);
CREATE (lien)-[:IMPOSES_ON]->(owner);
CREATE (association)-[:HAS_STATEMENT]->(statement);
CREATE (statement)-[:INCLUDES_CHARGE]->(charge);
CREATE (charge)-[:OWES_PRINCIPAL]->(principal);
CREATE (charge)-[:OWES_LATE_CHARGES]->(lateCharge);
CREATE (charge)-[:OWES_COLLECTION_EXPENSES]->(costs);
CREATE (charge)-[:OWES_INTEREST]->(interest);
CREATE (charge)-[:CALCULATED_USING]->(method);
CREATE (charge)-[:INCLUDES_ATTORNEY_FEES]->(attorneyFees);
CREATE (association)-[:USES_COLLECTION_PRACTICES]->(collectionPractices);

// Updated existing relationships from new document:
// - Added relationship between association and builder.
CREATE (association)-[:HAS_BUILDER]->(builder);

// Explanation:
// - No new entities were introduced based on the provided document.
// - The existing entities and relationships remain the same.
// - The relationships from the new document were added to connect the existing entities and capture the associations and dependencies described in the document.
// - No existing relationships were updated based on the provided document.
// - Added a new relationship between the association and builder to capture their connection mentioned in the document.
// Updated graph:
// Existing entities:
CREATE (association:Association);
CREATE (assessment:Assessment);
CREATE (lien:Lien);
CREATE (owner:Owner);
CREATE (charge:Charge);
CREATE (statement:Statement);
CREATE (principal:Principal);
CREATE (lateCharge:LateCharge);
CREATE (method:Method);
CREATE (attorneyFees:AttorneyFees);
CREATE (collectionPractices:CollectionPractices);
CREATE (costs:Costs);
CREATE (interest:Interest);
CREATE (individualInsuranceBroker:IndividualInsuranceBroker);
CREATE (thirdPerson:ThirdPerson);
CREATE (declarant:Declarant);

// New entities:
// No new entities based on the provided document.

// New relationships from new document:
CREATE (association)-[:HAS_ASSESSMENT]->(assessment);
CREATE (association)-[:HAS_LIEN]->(lien);
CREATE (lien)-[:IMPOSES_ON]->(owner);
CREATE (association)-[:HAS_STATEMENT]->(statement);
CREATE (statement)-[:INCLUDES_CHARGE]->(charge);
CREATE (charge)-[:OWES_PRINCIPAL]->(principal);
CREATE (charge)-[:OWES_LATE_CHARGES]->(lateCharge);
CREATE (charge)-[:OWES_COLLECTION_EXPENSES]->(costs);
CREATE (charge)-[:OWES_INTEREST]->(interest);
CREATE (charge)-[:CALCULATED_USING]->(method);
CREATE (charge)-[:INCLUDES_ATTORNEY_FEES]->(attorneyFees);
CREATE (association)-[:USES_COLLECTION_PRACTICES]->(collectionPractices);

// Updated existing relationships from new document:
// - Added relationship between association and builder.
CREATE (association)-[:HAS_BUILDER]->(builder);

// Explanation:
// - No new entities were introduced based on the provided document.
// - The existing entities and relationships remain the same.
// - The relationships from the new document were added to connect the existing entities and capture the associations and dependencies described in the document.
// - No existing relationships were updated based on the provided document.
// - Added a new relationship between the association and builder to capture their connection mentioned in the document.
// Updated graph:
// Existing entities:
CREATE (association:Association);
CREATE (assessment:Assessment);
CREATE (lien:Lien);
CREATE (owner:Owner);
CREATE (charge:Charge);
CREATE (statement:Statement);
CREATE (principal:Principal);
CREATE (lateCharge:LateCharge);
CREATE (method:Method);
CREATE (attorneyFees:AttorneyFees);
CREATE (collectionPractices:CollectionPractices);
CREATE (costs:Costs);
CREATE (interest:Interest);
CREATE (individualInsuranceBroker:IndividualInsuranceBroker);
CREATE (thirdPerson:ThirdPerson);
CREATE (declarant:Declarant);

// New entities:
// No new entities based on the provided document.

// New relationships from new document:
CREATE (association)-[:HAS_ASSESSMENT]->(assessment);
CREATE (association)-[:HAS_LIEN]->(lien);
CREATE (lien)-[:IMPOSES_ON]->(owner);
CREATE (association)-[:HAS_STATEMENT]->(statement);
CREATE (statement)-[:INCLUDES_CHARGE]->(charge);
CREATE (charge)-[:OWES_PRINCIPAL]->(principal);
CREATE (charge)-[:OWES_LATE_CHARGES]->(lateCharge);
CREATE (charge)-[:OWES_COLLECTION_EXPENSES]->(costs);
CREATE (charge)-[:OWES_INTEREST]->(interest);
CREATE (charge)-[:CALCULATED_USING]->(method);
CREATE (charge)-[:INCLUDES_ATTORNEY_FEES]->(attorneyFees);
CREATE (association)-[:USES_COLLECTION_PRACTICES]->(collectionPractices);

// Updated existing relationships from new document:
// - Added relationship between association and builder.
CREATE (association)-[:HAS_BUILDER]->(builder);

// Explanation:
// - No new entities were introduced based on the provided document.
// - The existing entities and relationships remain the same.
// - The relationships from the new document were added to connect the existing entities and capture the associations and dependencies described in the document.
// - No existing relationships were updated based on the provided document.
// - Added a new relationship between the association and builder to capture their connection mentioned in the document.
// Updated graph:
// Existing entities:
CREATE (association:Association);
CREATE (assessment:Assessment);
CREATE (lien:Lien);
CREATE (owner:Owner);
CREATE (charge:Charge);
CREATE (statement:Statement);
CREATE (principal:Principal);
CREATE (lateCharge:LateCharge);
CREATE (method:Method);
CREATE (attorneyFees:AttorneyFees);
CREATE (collectionPractices:CollectionPractices);
CREATE (costs:Costs);
CREATE (interest:Interest);
CREATE (individualInsuranceBroker:IndividualInsuranceBroker);
CREATE (thirdPerson:ThirdPerson);
CREATE (declarant:Declarant);

// New entities:
// No new entities based on the provided document.

// New relationships from new document:
CREATE (association)-[:HAS_ASSESSMENT]->(assessment);
CREATE (association)-[:HAS_LIEN]->(lien);
CREATE (lien)-[:IMPOSES_ON]->(owner);
CREATE (association)-[:HAS_STATEMENT]->(statement);
CREATE (statement)-[:INCLUDES_CHARGE]->(charge);
CREATE (charge)-[:OWES_PRINCIPAL]->(principal);
CREATE (charge)-[:OWES_LATE_CHARGES]->(lateCharge);
CREATE (charge)-[:OWES_COLLECTION_EXPENSES]->(costs);
CREATE (charge)-[:OWES_INTEREST]->(interest);
CREATE (charge)-[:CALCULATED_USING]->(method);
CREATE (charge)-[:INCLUDES_ATTORNEY_FEES]->(attorneyFees);
CREATE (association)-[:USES_COLLECTION_PRACTICES]->(collectionPractices);

// Updated existing relationships from new document:
// - Added relationship between association and builder.
CREATE (association)-[:HAS_BUILDER]->(builder);

// Explanation:
// - No new entities were introduced based on the provided document.
// - The existing entities and relationships remain the same.
// - The relationships from the new document were added to connect the existing entities and capture the associations and dependencies described in the document.
// - No existing relationships were updated based on the provided document.
// - Added a new relationship between the association and builder to capture their connection mentioned in the document.
// Updated graph:
// Existing entities:
CREATE (association:Association);
CREATE (assessment:Assessment);
CREATE (lien:Lien);
CREATE (owner:Owner);
CREATE (charge:Charge);
CREATE (statement:Statement);
CREATE (principal:Principal);
CREATE (lateCharge:LateCharge);
CREATE (method:Method);
CREATE (attorneyFees:AttorneyFees);
CREATE (collectionPractices:CollectionPractices);
CREATE (costs:Costs);
CREATE (interest:Interest);
CREATE (individualInsuranceBroker:IndividualInsuranceBroker);
CREATE (thirdPerson:ThirdPerson);
CREATE (declarant:Declarant);

// New entities:
// No new entities based on the provided document.

// New relationships from new document:
CREATE (association)-[:HAS_ASSESSMENT]->(assessment);
CREATE (association)-[:HAS_LIEN]->(lien);
CREATE (lien)-[:IMPOSES_ON]->(owner);
CREATE (association)-[:HAS_STATEMENT]->(statement);
CREATE (statement)-[:INCLUDES_CHARGE]->(charge);
CREATE (charge)-[:OWES_PRINCIPAL]->(principal);
CREATE (charge)-[:OWES_LATE_CHARGES]->(lateCharge);
CREATE (charge)-[:OWES_COLLECTION_EXPENSES]->(costs);
CREATE (charge)-[:OWES_INTEREST]->(interest);
CREATE (charge)-[:CALCULATED_USING]->(method);
CREATE (charge)-[:INCLUDES_ATTORNEY_FEES]->(attorneyFees);
CREATE (association)-[:USES_COLLECTION_PRACTICES]->(collectionPractices);

// Updated existing relationships from new document:
// - Added relationship between association and builder.
CREATE (association)-[:HAS_BUILDER]->(builder);

// Explanation:
// - No new entities were introduced based on the provided document.
// - The existing entities and relationships remain the same.
// - The relationships from the new document were added to connect the existing entities and capture the associations and dependencies described in the document.
// - No existing relationships were updated based on the provided document.
// - Added a new relationship between the association and builder to capture their connection mentioned in the document.
// - The graph has been updated to include the new relationships and the association-builder relationship.
// Updated graph:
// Existing entities remain the same.

// New entities:
// No new entities based on the provided document.

// New relationships from new document:
// No new relationships based on the provided document.

// Updated existing relationships from new document:
// - Added relationship between association and builder.
CREATE (association)-[:HAS_BUILDER]->(builder);

// Explanation:
// - No new entities were introduced based on the provided document.
// - The existing entities and relationships remain the same.
// - No new relationships were introduced based on the provided document.
// - Added a new relationship between the association and builder to capture their connection mentioned in the document.
// - The graph has been updated to include the new relationship between the association and builder.
// Updated graph:
// Existing entities remain the same.

// New entities:
// No new entities based on the provided document.

// New relationships from new document:
// No new relationships based on the provided document.

// Updated existing relationships from new document:
// - Added relationship between association and builder.
CREATE (association)-[:HAS_BUILDER]->(builder);

// Explanation:
// - No new entities were introduced based on the provided document.
// - The existing entities and relationships remain the same.
// - No new relationships were introduced based on the provided document.
// - Added a new relationship between the association and builder to capture their connection mentioned in the document.
// - The graph has been updated to include the new relationship between the association and builder.
